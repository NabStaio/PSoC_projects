ARM GAS  C:\Users\mstai\AppData\Local\Temp\cc5JzFax.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m0plus
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"CapSense_Filter.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.CapSense_FtInitialize,"ax",%progbits
  20              		.align	2
  21              		.global	CapSense_FtInitialize
  22              		.code	16
  23              		.thumb_func
  24              		.type	CapSense_FtInitialize, %function
  25              	CapSense_FtInitialize:
  26              	.LFB1:
  27              		.file 1 "Generated_Source\\PSoC4\\CapSense_Filter.c"
   1:Generated_Source\PSoC4/CapSense_Filter.c **** /***************************************************************************//**
   2:Generated_Source\PSoC4/CapSense_Filter.c **** * \file CapSense_Filter.c
   3:Generated_Source\PSoC4/CapSense_Filter.c **** * \version 7.0
   4:Generated_Source\PSoC4/CapSense_Filter.c **** *
   5:Generated_Source\PSoC4/CapSense_Filter.c **** * \brief
   6:Generated_Source\PSoC4/CapSense_Filter.c **** *   This file contains the implementation source code to implement all
   7:Generated_Source\PSoC4/CapSense_Filter.c **** *   firmware filters.
   8:Generated_Source\PSoC4/CapSense_Filter.c **** *
   9:Generated_Source\PSoC4/CapSense_Filter.c **** * \see CapSense v7.0 Datasheet
  10:Generated_Source\PSoC4/CapSense_Filter.c **** *
  11:Generated_Source\PSoC4/CapSense_Filter.c **** *//*****************************************************************************
  12:Generated_Source\PSoC4/CapSense_Filter.c **** * Copyright (2016-2019), Cypress Semiconductor Corporation.
  13:Generated_Source\PSoC4/CapSense_Filter.c **** ********************************************************************************
  14:Generated_Source\PSoC4/CapSense_Filter.c **** * This software is owned by Cypress Semiconductor Corporation (Cypress) and is
  15:Generated_Source\PSoC4/CapSense_Filter.c **** * protected by and subject to worldwide patent protection (United States and
  16:Generated_Source\PSoC4/CapSense_Filter.c **** * foreign), United States copyright laws and international treaty provisions.
  17:Generated_Source\PSoC4/CapSense_Filter.c **** * Cypress hereby grants to licensee a personal, non-exclusive, non-transferable
  18:Generated_Source\PSoC4/CapSense_Filter.c **** * license to copy, use, modify, create derivative works of, and compile the
  19:Generated_Source\PSoC4/CapSense_Filter.c **** * Cypress Source Code and derivative works for the sole purpose of creating
  20:Generated_Source\PSoC4/CapSense_Filter.c **** * custom software in support of licensee product to be used only in conjunction
  21:Generated_Source\PSoC4/CapSense_Filter.c **** * with a Cypress integrated circuit as specified in the applicable agreement.
  22:Generated_Source\PSoC4/CapSense_Filter.c **** * Any reproduction, modification, translation, compilation, or representation of
  23:Generated_Source\PSoC4/CapSense_Filter.c **** * this software except as specified above is prohibited without the express
  24:Generated_Source\PSoC4/CapSense_Filter.c **** * written permission of Cypress.
  25:Generated_Source\PSoC4/CapSense_Filter.c **** *
  26:Generated_Source\PSoC4/CapSense_Filter.c **** * Disclaimer: CYPRESS MAKES NO WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, WITH
  27:Generated_Source\PSoC4/CapSense_Filter.c **** * REGARD TO THIS MATERIAL, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
  28:Generated_Source\PSoC4/CapSense_Filter.c **** * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
  29:Generated_Source\PSoC4/CapSense_Filter.c **** * Cypress reserves the right to make changes without further notice to the
  30:Generated_Source\PSoC4/CapSense_Filter.c **** * materials described herein. Cypress does not assume any liability arising out
ARM GAS  C:\Users\mstai\AppData\Local\Temp\cc5JzFax.s 			page 2


  31:Generated_Source\PSoC4/CapSense_Filter.c **** * of the application or use of any product or circuit described herein. Cypress
  32:Generated_Source\PSoC4/CapSense_Filter.c **** * does not authorize its products for use as critical components in life-support
  33:Generated_Source\PSoC4/CapSense_Filter.c **** * systems where a malfunction or failure may reasonably be expected to result in
  34:Generated_Source\PSoC4/CapSense_Filter.c **** * significant injury to the user. The inclusion of Cypress' product in a life-
  35:Generated_Source\PSoC4/CapSense_Filter.c **** * support systems application implies that the manufacturer assumes all risk of
  36:Generated_Source\PSoC4/CapSense_Filter.c **** * such use and in doing so indemnifies Cypress against all charges. Use may be
  37:Generated_Source\PSoC4/CapSense_Filter.c **** * limited by and subject to the applicable Cypress software license agreement.
  38:Generated_Source\PSoC4/CapSense_Filter.c **** *******************************************************************************/
  39:Generated_Source\PSoC4/CapSense_Filter.c **** 
  40:Generated_Source\PSoC4/CapSense_Filter.c **** #include "CapSense_Filter.h"
  41:Generated_Source\PSoC4/CapSense_Filter.c **** #include "CapSense_Configuration.h"
  42:Generated_Source\PSoC4/CapSense_Filter.c **** 
  43:Generated_Source\PSoC4/CapSense_Filter.c **** #if (0 != (CapSense_CSD_AUTOTUNE & CapSense_CSD_SS_TH_EN))
  44:Generated_Source\PSoC4/CapSense_Filter.c ****     #include "CapSense_SmartSense_LL.h"
  45:Generated_Source\PSoC4/CapSense_Filter.c **** #endif /* (0 != (CapSense_CSD_AUTOTUNE & CapSense_CSD_SS_TH_EN)) */
  46:Generated_Source\PSoC4/CapSense_Filter.c **** 
  47:Generated_Source\PSoC4/CapSense_Filter.c **** #if (CapSense_ENABLE == CapSense_SELF_TEST_EN)
  48:Generated_Source\PSoC4/CapSense_Filter.c ****     #include "CapSense_SelfTest.h"
  49:Generated_Source\PSoC4/CapSense_Filter.c **** #endif
  50:Generated_Source\PSoC4/CapSense_Filter.c **** 
  51:Generated_Source\PSoC4/CapSense_Filter.c **** /*******************************************************************************
  52:Generated_Source\PSoC4/CapSense_Filter.c **** * Function Name: CapSense_FtInitialize
  53:Generated_Source\PSoC4/CapSense_Filter.c **** ****************************************************************************//**
  54:Generated_Source\PSoC4/CapSense_Filter.c **** *
  55:Generated_Source\PSoC4/CapSense_Filter.c **** * \brief
  56:Generated_Source\PSoC4/CapSense_Filter.c **** *  Initializes all the firmware filter history, except the baseline filter.
  57:Generated_Source\PSoC4/CapSense_Filter.c **** *
  58:Generated_Source\PSoC4/CapSense_Filter.c **** * \details
  59:Generated_Source\PSoC4/CapSense_Filter.c **** *  Initializes all the firmware filter history, except the baseline filter.
  60:Generated_Source\PSoC4/CapSense_Filter.c **** *
  61:Generated_Source\PSoC4/CapSense_Filter.c **** *******************************************************************************/
  62:Generated_Source\PSoC4/CapSense_Filter.c **** void CapSense_FtInitialize(void)
  63:Generated_Source\PSoC4/CapSense_Filter.c **** {
  28              		.loc 1 63 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
  64:Generated_Source\PSoC4/CapSense_Filter.c ****     #if ((CapSense_ENABLE == CapSense_RC_FILTER_EN) || \
  65:Generated_Source\PSoC4/CapSense_Filter.c ****          (0u != (CapSense_CSD_AUTOTUNE & CapSense_CSD_SS_TH_EN)))
  66:Generated_Source\PSoC4/CapSense_Filter.c ****         CapSense_InitializeAllFilters();
  67:Generated_Source\PSoC4/CapSense_Filter.c ****     #endif /* ((CapSense_ENABLE == CapSense_RC_FILTER_EN) || \
  68:Generated_Source\PSoC4/CapSense_Filter.c ****                (0u != (CapSense_CSD_AUTOTUNE & CapSense_CSD_SS_TH_EN))) */
  69:Generated_Source\PSoC4/CapSense_Filter.c **** }
  33              		.loc 1 69 0
  34              		@ sp needed
  35 0000 7047     		bx	lr
  36              		.cfi_endproc
  37              	.LFE1:
  38              		.size	CapSense_FtInitialize, .-CapSense_FtInitialize
  39 0002 C046     		.section	.text.CapSense_FtInitializeBaselineChannel,"ax",%progbits
  40              		.align	2
  41              		.global	CapSense_FtInitializeBaselineChannel
  42              		.code	16
  43              		.thumb_func
  44              		.type	CapSense_FtInitializeBaselineChannel, %function
  45              	CapSense_FtInitializeBaselineChannel:
ARM GAS  C:\Users\mstai\AppData\Local\Temp\cc5JzFax.s 			page 3


  46              	.LFB10:
  70:Generated_Source\PSoC4/CapSense_Filter.c **** 
  71:Generated_Source\PSoC4/CapSense_Filter.c **** 
  72:Generated_Source\PSoC4/CapSense_Filter.c **** /*******************************************************************************
  73:Generated_Source\PSoC4/CapSense_Filter.c **** * Function Name: CapSense_UpdateAllBaselines
  74:Generated_Source\PSoC4/CapSense_Filter.c **** ****************************************************************************//**
  75:Generated_Source\PSoC4/CapSense_Filter.c **** *
  76:Generated_Source\PSoC4/CapSense_Filter.c **** * \brief
  77:Generated_Source\PSoC4/CapSense_Filter.c **** *  Updates the baseline for all the sensors in all the widgets.
  78:Generated_Source\PSoC4/CapSense_Filter.c **** *
  79:Generated_Source\PSoC4/CapSense_Filter.c **** * \details
  80:Generated_Source\PSoC4/CapSense_Filter.c **** *  Updates the baseline for all the sensors in all the widgets. Baseline updating is a
  81:Generated_Source\PSoC4/CapSense_Filter.c **** *  part of data processing performed by the process functions. So, no need to
  82:Generated_Source\PSoC4/CapSense_Filter.c **** *  call this function except a specific process flow is implemented.
  83:Generated_Source\PSoC4/CapSense_Filter.c **** *
  84:Generated_Source\PSoC4/CapSense_Filter.c **** *  This function ignores the value of the wdgtEnable register. Multiple calling
  85:Generated_Source\PSoC4/CapSense_Filter.c **** *  of this function (or any other function with a baseline updating task)
  86:Generated_Source\PSoC4/CapSense_Filter.c **** *  without scanning leads to unexpected behavior.
  87:Generated_Source\PSoC4/CapSense_Filter.c **** *
  88:Generated_Source\PSoC4/CapSense_Filter.c **** *  If the Self-test library is enabled, this function executes the baseline duplication
  89:Generated_Source\PSoC4/CapSense_Filter.c **** *  test. Refer to CapSense_CheckBaselineDuplication() for details.
  90:Generated_Source\PSoC4/CapSense_Filter.c **** *
  91:Generated_Source\PSoC4/CapSense_Filter.c **** * \return
  92:Generated_Source\PSoC4/CapSense_Filter.c **** *  Returns the status of the update baseline operation of all the widgets:
  93:Generated_Source\PSoC4/CapSense_Filter.c **** *  - CYRET_SUCCESS - The operation is successfully completed.
  94:Generated_Source\PSoC4/CapSense_Filter.c **** *  - CYRET_BAD_DATA - The baseline processing failed.
  95:Generated_Source\PSoC4/CapSense_Filter.c **** *
  96:Generated_Source\PSoC4/CapSense_Filter.c **** *******************************************************************************/
  97:Generated_Source\PSoC4/CapSense_Filter.c **** cystatus CapSense_UpdateAllBaselines(void)
  98:Generated_Source\PSoC4/CapSense_Filter.c **** {
  99:Generated_Source\PSoC4/CapSense_Filter.c ****     uint32 widgetId;
 100:Generated_Source\PSoC4/CapSense_Filter.c ****     cystatus bslnStatus = CYRET_SUCCESS;
 101:Generated_Source\PSoC4/CapSense_Filter.c **** 
 102:Generated_Source\PSoC4/CapSense_Filter.c ****     for(widgetId = CapSense_TOTAL_WIDGETS; widgetId-- > 0u;)
 103:Generated_Source\PSoC4/CapSense_Filter.c ****     {
 104:Generated_Source\PSoC4/CapSense_Filter.c ****         bslnStatus |= CapSense_UpdateWidgetBaseline(widgetId);
 105:Generated_Source\PSoC4/CapSense_Filter.c ****     }
 106:Generated_Source\PSoC4/CapSense_Filter.c **** 
 107:Generated_Source\PSoC4/CapSense_Filter.c ****     return(bslnStatus);
 108:Generated_Source\PSoC4/CapSense_Filter.c **** }
 109:Generated_Source\PSoC4/CapSense_Filter.c **** 
 110:Generated_Source\PSoC4/CapSense_Filter.c **** 
 111:Generated_Source\PSoC4/CapSense_Filter.c **** /*******************************************************************************
 112:Generated_Source\PSoC4/CapSense_Filter.c **** * Function Name: CapSense_UpdateWidgetBaseline
 113:Generated_Source\PSoC4/CapSense_Filter.c **** ****************************************************************************//**
 114:Generated_Source\PSoC4/CapSense_Filter.c **** *
 115:Generated_Source\PSoC4/CapSense_Filter.c **** * \brief
 116:Generated_Source\PSoC4/CapSense_Filter.c **** *  Updates the baselines for all the sensors in a widget specified by the input
 117:Generated_Source\PSoC4/CapSense_Filter.c **** *  parameter.
 118:Generated_Source\PSoC4/CapSense_Filter.c **** *
 119:Generated_Source\PSoC4/CapSense_Filter.c **** * \details
 120:Generated_Source\PSoC4/CapSense_Filter.c **** *  This function performs exactly the same tasks as
 121:Generated_Source\PSoC4/CapSense_Filter.c **** *  CapSense_UpdateAllBaselines() but only for a specified widget.
 122:Generated_Source\PSoC4/CapSense_Filter.c **** *
 123:Generated_Source\PSoC4/CapSense_Filter.c **** *  This function ignores the value of the wdgtEnable register. Multiple calling
 124:Generated_Source\PSoC4/CapSense_Filter.c **** *  of this function (or any other function with a baseline updating task)
 125:Generated_Source\PSoC4/CapSense_Filter.c **** *  without scanning leads to unexpected behavior.
ARM GAS  C:\Users\mstai\AppData\Local\Temp\cc5JzFax.s 			page 4


 126:Generated_Source\PSoC4/CapSense_Filter.c **** *
 127:Generated_Source\PSoC4/CapSense_Filter.c **** *  If the Self-test library is enabled, this function executes the baseline duplication
 128:Generated_Source\PSoC4/CapSense_Filter.c **** *  test. Refer to CapSense_CheckBaselineDuplication() for details.
 129:Generated_Source\PSoC4/CapSense_Filter.c **** *
 130:Generated_Source\PSoC4/CapSense_Filter.c **** * \param widgetId
 131:Generated_Source\PSoC4/CapSense_Filter.c **** *  Specifies the ID number of the widget to update the baseline of all the sensors
 132:Generated_Source\PSoC4/CapSense_Filter.c **** *  in the widget.
 133:Generated_Source\PSoC4/CapSense_Filter.c **** *  A macro for the widget ID can be found in the
 134:Generated_Source\PSoC4/CapSense_Filter.c **** *  CapSense Configuration header file defined as
 135:Generated_Source\PSoC4/CapSense_Filter.c **** *  CapSense_<WidgetName>_WDGT_ID.
 136:Generated_Source\PSoC4/CapSense_Filter.c **** *
 137:Generated_Source\PSoC4/CapSense_Filter.c **** * \return
 138:Generated_Source\PSoC4/CapSense_Filter.c **** *  Returns the status of the specified widget update baseline operation:
 139:Generated_Source\PSoC4/CapSense_Filter.c **** *  - CYRET_SUCCESS - The operation is successfully completed.
 140:Generated_Source\PSoC4/CapSense_Filter.c **** *  - CYRET_BAD_DATA - The baseline processing is failed.
 141:Generated_Source\PSoC4/CapSense_Filter.c **** *
 142:Generated_Source\PSoC4/CapSense_Filter.c **** *******************************************************************************/
 143:Generated_Source\PSoC4/CapSense_Filter.c **** cystatus CapSense_UpdateWidgetBaseline(uint32 widgetId)
 144:Generated_Source\PSoC4/CapSense_Filter.c **** {
 145:Generated_Source\PSoC4/CapSense_Filter.c ****     uint32 sensorId;
 146:Generated_Source\PSoC4/CapSense_Filter.c ****     uint32 sensorsNumber;
 147:Generated_Source\PSoC4/CapSense_Filter.c **** 
 148:Generated_Source\PSoC4/CapSense_Filter.c ****     CapSense_FLASH_WD_STRUCT const *ptrWidget = &CapSense_dsFlash.wdgtArray[widgetId];
 149:Generated_Source\PSoC4/CapSense_Filter.c ****     cystatus bslnStatus = CYRET_SUCCESS;
 150:Generated_Source\PSoC4/CapSense_Filter.c **** 
 151:Generated_Source\PSoC4/CapSense_Filter.c ****     /* Find total amount of sensors in specified widget */
 152:Generated_Source\PSoC4/CapSense_Filter.c ****     sensorsNumber = CapSense_GET_SNS_CNT_BY_PTR(ptrWidget);
 153:Generated_Source\PSoC4/CapSense_Filter.c **** 
 154:Generated_Source\PSoC4/CapSense_Filter.c ****     for(sensorId = sensorsNumber; sensorId-- > 0u;)
 155:Generated_Source\PSoC4/CapSense_Filter.c ****     {
 156:Generated_Source\PSoC4/CapSense_Filter.c ****         bslnStatus |= CapSense_UpdateSensorBaseline(widgetId, sensorId);
 157:Generated_Source\PSoC4/CapSense_Filter.c ****     }
 158:Generated_Source\PSoC4/CapSense_Filter.c **** 
 159:Generated_Source\PSoC4/CapSense_Filter.c ****     return(bslnStatus);
 160:Generated_Source\PSoC4/CapSense_Filter.c **** }
 161:Generated_Source\PSoC4/CapSense_Filter.c **** 
 162:Generated_Source\PSoC4/CapSense_Filter.c **** 
 163:Generated_Source\PSoC4/CapSense_Filter.c **** /*******************************************************************************
 164:Generated_Source\PSoC4/CapSense_Filter.c **** * Function Name: CapSense_UpdateSensorBaseline
 165:Generated_Source\PSoC4/CapSense_Filter.c **** ****************************************************************************//**
 166:Generated_Source\PSoC4/CapSense_Filter.c **** *
 167:Generated_Source\PSoC4/CapSense_Filter.c **** * \brief
 168:Generated_Source\PSoC4/CapSense_Filter.c **** *  Updates the baseline for a sensor in a widget specified by the input parameters.
 169:Generated_Source\PSoC4/CapSense_Filter.c **** *
 170:Generated_Source\PSoC4/CapSense_Filter.c **** * \details
 171:Generated_Source\PSoC4/CapSense_Filter.c **** *  This function performs exactly the same tasks as
 172:Generated_Source\PSoC4/CapSense_Filter.c **** *  CapSense_UpdateAllBaselines() and
 173:Generated_Source\PSoC4/CapSense_Filter.c **** *  CapSense_UpdateWidgetBaseline() but only for a specified sensor.
 174:Generated_Source\PSoC4/CapSense_Filter.c **** *
 175:Generated_Source\PSoC4/CapSense_Filter.c **** *  This function ignores the value of the wdgtEnable register. Multiple calling
 176:Generated_Source\PSoC4/CapSense_Filter.c **** *  of this function (or any other function with a baseline updating task)
 177:Generated_Source\PSoC4/CapSense_Filter.c **** *  without scanning leads to unexpected behavior.
 178:Generated_Source\PSoC4/CapSense_Filter.c **** *
 179:Generated_Source\PSoC4/CapSense_Filter.c **** *  If the Self-test library is enabled, this function executes the baseline duplication
 180:Generated_Source\PSoC4/CapSense_Filter.c **** *  test. Refer to CapSense_CheckBaselineDuplication() for details.
 181:Generated_Source\PSoC4/CapSense_Filter.c **** *
 182:Generated_Source\PSoC4/CapSense_Filter.c **** * \param widgetId
ARM GAS  C:\Users\mstai\AppData\Local\Temp\cc5JzFax.s 			page 5


 183:Generated_Source\PSoC4/CapSense_Filter.c **** *  Specifies the ID number of the widget to update the baseline of the sensor
 184:Generated_Source\PSoC4/CapSense_Filter.c **** *  specified by the sensorId argument.
 185:Generated_Source\PSoC4/CapSense_Filter.c **** *  A macro for the widget ID can be found in the CapSense Configuration header
 186:Generated_Source\PSoC4/CapSense_Filter.c **** *  file defined as CapSense_<WidgetName>_WDGT_ID.
 187:Generated_Source\PSoC4/CapSense_Filter.c **** *
 188:Generated_Source\PSoC4/CapSense_Filter.c **** * \param sensorId
 189:Generated_Source\PSoC4/CapSense_Filter.c **** *  Specifies the ID number of the sensor within the widget to update its baseline.
 190:Generated_Source\PSoC4/CapSense_Filter.c **** *  A macro for the sensor ID within a specified widget can be found in the
 191:Generated_Source\PSoC4/CapSense_Filter.c **** *  CapSense Configuration header file defined as
 192:Generated_Source\PSoC4/CapSense_Filter.c **** *  CapSense_<WidgetName>_SNS<SensorNumber>_ID.
 193:Generated_Source\PSoC4/CapSense_Filter.c **** *
 194:Generated_Source\PSoC4/CapSense_Filter.c **** * \return
 195:Generated_Source\PSoC4/CapSense_Filter.c **** *  Returns the status of the specified sensor update baseline operation:
 196:Generated_Source\PSoC4/CapSense_Filter.c **** *  - CYRET_SUCCESS - The operation is successfully completed.
 197:Generated_Source\PSoC4/CapSense_Filter.c **** *  - CYRET_BAD_DATA - The baseline processing failed.
 198:Generated_Source\PSoC4/CapSense_Filter.c **** *
 199:Generated_Source\PSoC4/CapSense_Filter.c **** *******************************************************************************/
 200:Generated_Source\PSoC4/CapSense_Filter.c **** cystatus CapSense_UpdateSensorBaseline(uint32 widgetId, uint32 sensorId)
 201:Generated_Source\PSoC4/CapSense_Filter.c **** {
 202:Generated_Source\PSoC4/CapSense_Filter.c ****     uint32 result = CYRET_SUCCESS;
 203:Generated_Source\PSoC4/CapSense_Filter.c **** 
 204:Generated_Source\PSoC4/CapSense_Filter.c ****     CapSense_RAM_SNS_STRUCT *ptrSensor = NULL;
 205:Generated_Source\PSoC4/CapSense_Filter.c ****     CapSense_FLASH_WD_STRUCT const *ptrWidget = &CapSense_dsFlash.wdgtArray[widgetId];
 206:Generated_Source\PSoC4/CapSense_Filter.c ****     CapSense_RAM_WD_BASE_STRUCT *ptrWidgetRam = (CapSense_RAM_WD_BASE_STRUCT *)ptrWidget->ptr2WdgtR
 207:Generated_Source\PSoC4/CapSense_Filter.c **** 
 208:Generated_Source\PSoC4/CapSense_Filter.c ****     /* Find pointer to specified sensor object */
 209:Generated_Source\PSoC4/CapSense_Filter.c ****     ptrSensor = ptrWidget->ptr2SnsRam;
 210:Generated_Source\PSoC4/CapSense_Filter.c ****     ptrSensor = &ptrSensor[sensorId];
 211:Generated_Source\PSoC4/CapSense_Filter.c ****     result = CapSense_FtUpdateBaseline(ptrWidgetRam, ptrSensor, (uint32)ptrWidget->wdgtType);
 212:Generated_Source\PSoC4/CapSense_Filter.c **** 
 213:Generated_Source\PSoC4/CapSense_Filter.c ****     #if (CapSense_ENABLE == CapSense_TST_BSLN_DUPLICATION_EN)
 214:Generated_Source\PSoC4/CapSense_Filter.c ****         if (CYRET_SUCCESS != result)
 215:Generated_Source\PSoC4/CapSense_Filter.c ****         {
 216:Generated_Source\PSoC4/CapSense_Filter.c ****             result = CYRET_BAD_DATA;
 217:Generated_Source\PSoC4/CapSense_Filter.c ****             CapSense_UpdateTestResultBaselineDuplication(widgetId, sensorId);
 218:Generated_Source\PSoC4/CapSense_Filter.c ****         }
 219:Generated_Source\PSoC4/CapSense_Filter.c ****     #endif /* (CapSense_ENABLE == CapSense_TST_BSLN_DUPLICATION_EN) */
 220:Generated_Source\PSoC4/CapSense_Filter.c **** 
 221:Generated_Source\PSoC4/CapSense_Filter.c ****     return result;
 222:Generated_Source\PSoC4/CapSense_Filter.c **** }
 223:Generated_Source\PSoC4/CapSense_Filter.c **** 
 224:Generated_Source\PSoC4/CapSense_Filter.c **** /*******************************************************************************
 225:Generated_Source\PSoC4/CapSense_Filter.c **** * Function Name: CapSense_FtUpdateBaseline
 226:Generated_Source\PSoC4/CapSense_Filter.c **** ****************************************************************************//**
 227:Generated_Source\PSoC4/CapSense_Filter.c **** *
 228:Generated_Source\PSoC4/CapSense_Filter.c **** * \brief
 229:Generated_Source\PSoC4/CapSense_Filter.c **** *  Updates the baseline for a sensor specified by an input parameter.
 230:Generated_Source\PSoC4/CapSense_Filter.c **** *
 231:Generated_Source\PSoC4/CapSense_Filter.c **** * \details
 232:Generated_Source\PSoC4/CapSense_Filter.c **** *  Check a matching of present baseline and its inverse duplication. If they
 233:Generated_Source\PSoC4/CapSense_Filter.c **** *  match then updates the baseline for a sensor specified by an input parameter.
 234:Generated_Source\PSoC4/CapSense_Filter.c **** *  If don't match the function return CapSense_TST_BSLN_DUPLICATION
 235:Generated_Source\PSoC4/CapSense_Filter.c **** *  result and don't update baseline.
 236:Generated_Source\PSoC4/CapSense_Filter.c **** *
 237:Generated_Source\PSoC4/CapSense_Filter.c **** * \param ptrWidgetRam
 238:Generated_Source\PSoC4/CapSense_Filter.c **** *  The pointer to the widget RAM structure where all the widget parameters
 239:Generated_Source\PSoC4/CapSense_Filter.c **** *  are stored.
ARM GAS  C:\Users\mstai\AppData\Local\Temp\cc5JzFax.s 			page 6


 240:Generated_Source\PSoC4/CapSense_Filter.c **** *
 241:Generated_Source\PSoC4/CapSense_Filter.c **** * \param ptrSensor
 242:Generated_Source\PSoC4/CapSense_Filter.c **** *  The pointer to the sensor RAM structure where all the sensor parameters
 243:Generated_Source\PSoC4/CapSense_Filter.c **** *  are stored.
 244:Generated_Source\PSoC4/CapSense_Filter.c **** *
 245:Generated_Source\PSoC4/CapSense_Filter.c **** * \param wdType
 246:Generated_Source\PSoC4/CapSense_Filter.c **** *  Specifies the type of a widget.
 247:Generated_Source\PSoC4/CapSense_Filter.c **** *
 248:Generated_Source\PSoC4/CapSense_Filter.c **** * \return
 249:Generated_Source\PSoC4/CapSense_Filter.c **** *  Returns a status indicating whether the baseline has been updated:
 250:Generated_Source\PSoC4/CapSense_Filter.c **** *  - CYRET_SUCCESS if baseline updating was successful.
 251:Generated_Source\PSoC4/CapSense_Filter.c **** *  - CapSense_PROCESS_BASELINE_FAILED if present sensor's any channel
 252:Generated_Source\PSoC4/CapSense_Filter.c **** *    baseline and its inversion doesn't matched.
 253:Generated_Source\PSoC4/CapSense_Filter.c **** *
 254:Generated_Source\PSoC4/CapSense_Filter.c **** *******************************************************************************/
 255:Generated_Source\PSoC4/CapSense_Filter.c **** uint32 CapSense_FtUpdateBaseline(
 256:Generated_Source\PSoC4/CapSense_Filter.c ****                                 CapSense_RAM_WD_BASE_STRUCT *ptrWidgetRam,
 257:Generated_Source\PSoC4/CapSense_Filter.c ****                                 CapSense_RAM_SNS_STRUCT *ptrSensor,
 258:Generated_Source\PSoC4/CapSense_Filter.c ****                                 uint32 wdType)
 259:Generated_Source\PSoC4/CapSense_Filter.c **** {
 260:Generated_Source\PSoC4/CapSense_Filter.c ****     uint32 sign;
 261:Generated_Source\PSoC4/CapSense_Filter.c ****     uint32 difference;
 262:Generated_Source\PSoC4/CapSense_Filter.c ****     uint32 freqChannel;
 263:Generated_Source\PSoC4/CapSense_Filter.c ****     uint32 baselineCoeff;
 264:Generated_Source\PSoC4/CapSense_Filter.c ****     uint32 result = CYRET_SUCCESS;
 265:Generated_Source\PSoC4/CapSense_Filter.c **** 
 266:Generated_Source\PSoC4/CapSense_Filter.c ****     #if (CapSense_TOTAL_WIDGETS)
 267:Generated_Source\PSoC4/CapSense_Filter.c ****         uint32 history;
 268:Generated_Source\PSoC4/CapSense_Filter.c ****     #endif /* (CapSense_TOTAL_WIDGETS) */
 269:Generated_Source\PSoC4/CapSense_Filter.c **** 
 270:Generated_Source\PSoC4/CapSense_Filter.c ****     /* Apply baseline to every channel in sensor */
 271:Generated_Source\PSoC4/CapSense_Filter.c ****     for(freqChannel = CapSense_NUM_SCAN_FREQS; freqChannel-- > 0u;)
 272:Generated_Source\PSoC4/CapSense_Filter.c ****     {
 273:Generated_Source\PSoC4/CapSense_Filter.c ****         #if (CapSense_ENABLE == CapSense_TST_BSLN_DUPLICATION_EN)
 274:Generated_Source\PSoC4/CapSense_Filter.c ****             if (ptrSensor->bslnInv[freqChannel] != ((uint16) ~(ptrSensor->bsln[freqChannel])))
 275:Generated_Source\PSoC4/CapSense_Filter.c ****             {
 276:Generated_Source\PSoC4/CapSense_Filter.c ****                 result = CapSense_PROCESS_BASELINE_FAILED;
 277:Generated_Source\PSoC4/CapSense_Filter.c ****             }
 278:Generated_Source\PSoC4/CapSense_Filter.c ****             else
 279:Generated_Source\PSoC4/CapSense_Filter.c ****             {
 280:Generated_Source\PSoC4/CapSense_Filter.c ****         #endif /* (CapSense_ENABLE == CapSense_TST_BSLN_DUPLICATION_EN) */
 281:Generated_Source\PSoC4/CapSense_Filter.c **** 
 282:Generated_Source\PSoC4/CapSense_Filter.c ****         /* Calculate signal value and its sign */
 283:Generated_Source\PSoC4/CapSense_Filter.c ****         if(ptrSensor->raw[freqChannel] >= ptrSensor->bsln[freqChannel])
 284:Generated_Source\PSoC4/CapSense_Filter.c ****         {
 285:Generated_Source\PSoC4/CapSense_Filter.c ****             difference = (uint32)ptrSensor->raw[freqChannel] - (uint32)ptrSensor->bsln[freqChannel]
 286:Generated_Source\PSoC4/CapSense_Filter.c ****             sign = 1u;
 287:Generated_Source\PSoC4/CapSense_Filter.c ****             ptrSensor->negBslnRstCnt[freqChannel] = 0u;
 288:Generated_Source\PSoC4/CapSense_Filter.c ****         }
 289:Generated_Source\PSoC4/CapSense_Filter.c ****         else
 290:Generated_Source\PSoC4/CapSense_Filter.c ****         {
 291:Generated_Source\PSoC4/CapSense_Filter.c ****             difference = (uint32)ptrSensor->bsln[freqChannel] - (uint32)ptrSensor->raw[freqChannel]
 292:Generated_Source\PSoC4/CapSense_Filter.c ****             sign = 0u;
 293:Generated_Source\PSoC4/CapSense_Filter.c ****         }
 294:Generated_Source\PSoC4/CapSense_Filter.c **** 
 295:Generated_Source\PSoC4/CapSense_Filter.c ****         /* Reset baseline if condition is met */
 296:Generated_Source\PSoC4/CapSense_Filter.c ****         if((sign == 0u) && (difference > (uint32) ptrWidgetRam->nNoiseTh))
ARM GAS  C:\Users\mstai\AppData\Local\Temp\cc5JzFax.s 			page 7


 297:Generated_Source\PSoC4/CapSense_Filter.c ****         {
 298:Generated_Source\PSoC4/CapSense_Filter.c ****             if(ptrSensor->negBslnRstCnt[freqChannel] >= ptrWidgetRam->lowBslnRst)
 299:Generated_Source\PSoC4/CapSense_Filter.c ****             {
 300:Generated_Source\PSoC4/CapSense_Filter.c ****                 CapSense_FtInitializeBaselineChannel(ptrSensor, wdType, freqChannel);
 301:Generated_Source\PSoC4/CapSense_Filter.c ****             }
 302:Generated_Source\PSoC4/CapSense_Filter.c ****             else
 303:Generated_Source\PSoC4/CapSense_Filter.c ****             {
 304:Generated_Source\PSoC4/CapSense_Filter.c ****                 ptrSensor->negBslnRstCnt[freqChannel]++;
 305:Generated_Source\PSoC4/CapSense_Filter.c ****             }
 306:Generated_Source\PSoC4/CapSense_Filter.c ****         }
 307:Generated_Source\PSoC4/CapSense_Filter.c ****         else
 308:Generated_Source\PSoC4/CapSense_Filter.c ****         {
 309:Generated_Source\PSoC4/CapSense_Filter.c ****             #if (!CapSense_SENSOR_AUTO_RESET_EN)
 310:Generated_Source\PSoC4/CapSense_Filter.c ****                 /* Update baseline only if signal is in range between noiseThreshold and negativeno
 311:Generated_Source\PSoC4/CapSense_Filter.c ****                 if ((difference <= (uint32)ptrWidgetRam->noiseTh) ||
 312:Generated_Source\PSoC4/CapSense_Filter.c ****                     ((difference <= (uint32) ptrWidgetRam->nNoiseTh) && (sign == 0u)))
 313:Generated_Source\PSoC4/CapSense_Filter.c ****                 {
 314:Generated_Source\PSoC4/CapSense_Filter.c ****             #endif /* (CapSense_CSD_AUTO_RESET == CapSense_CSD_AUTO_RESET_DISABLE) */
 315:Generated_Source\PSoC4/CapSense_Filter.c **** 
 316:Generated_Source\PSoC4/CapSense_Filter.c ****             #if (CapSense_BASELINE_TYPE == CapSense_IIR_BASELINE)
 317:Generated_Source\PSoC4/CapSense_Filter.c ****                 /* Calculate baseline value */
 318:Generated_Source\PSoC4/CapSense_Filter.c ****                 if ((CapSense_WD_TYPE_ENUM)wdType != CapSense_WD_PROXIMITY_E)
 319:Generated_Source\PSoC4/CapSense_Filter.c ****                 {
 320:Generated_Source\PSoC4/CapSense_Filter.c ****                     #if (CapSense_REGULAR_SENSOR_EN)
 321:Generated_Source\PSoC4/CapSense_Filter.c ****                         #if (CapSense_REGULAR_IIR_BL_TYPE == CapSense_IIR_FILTER_PERFORMANCE)
 322:Generated_Source\PSoC4/CapSense_Filter.c ****                             history = (uint32) ptrSensor->bsln[freqChannel] << 8u;
 323:Generated_Source\PSoC4/CapSense_Filter.c ****                             history |= ptrSensor->bslnExt[freqChannel];
 324:Generated_Source\PSoC4/CapSense_Filter.c ****                         #else
 325:Generated_Source\PSoC4/CapSense_Filter.c ****                             history = ptrSensor->bsln[freqChannel];
 326:Generated_Source\PSoC4/CapSense_Filter.c ****                         #endif /* (CapSense_REGULAR_IIR_BL_TYPE == CapSense_IIR_FILTER_PERFORMANCE)
 327:Generated_Source\PSoC4/CapSense_Filter.c **** 
 328:Generated_Source\PSoC4/CapSense_Filter.c ****                         #if (CapSense_ENABLE == CapSense_WD_BSLN_COEFF_EN)
 329:Generated_Source\PSoC4/CapSense_Filter.c ****                             baselineCoeff = ptrWidgetRam->bslnCoeff;
 330:Generated_Source\PSoC4/CapSense_Filter.c ****                         #else /* (CapSense_ENABLE == CapSense_WD_BSLN_COEFF_EN) */
 331:Generated_Source\PSoC4/CapSense_Filter.c ****                             baselineCoeff = CapSense_REGULAR_IIR_BL_N;
 332:Generated_Source\PSoC4/CapSense_Filter.c ****                         #endif /* (CapSense_ENABLE == CapSense_WD_BSLN_COEFF_EN) */
 333:Generated_Source\PSoC4/CapSense_Filter.c **** 
 334:Generated_Source\PSoC4/CapSense_Filter.c ****                         history =  CapSense_FtIIR1stOrder(
 335:Generated_Source\PSoC4/CapSense_Filter.c ****                                         (uint32)ptrSensor->raw[freqChannel],
 336:Generated_Source\PSoC4/CapSense_Filter.c ****                                         history, baselineCoeff,
 337:Generated_Source\PSoC4/CapSense_Filter.c ****                                         CapSense_REGULAR_IIR_BL_SHIFT);
 338:Generated_Source\PSoC4/CapSense_Filter.c **** 
 339:Generated_Source\PSoC4/CapSense_Filter.c ****                         #if (CapSense_REGULAR_IIR_BL_TYPE == CapSense_IIR_FILTER_PERFORMANCE)
 340:Generated_Source\PSoC4/CapSense_Filter.c ****                             ptrSensor->bsln[freqChannel] = LO16(history >> 8u);
 341:Generated_Source\PSoC4/CapSense_Filter.c ****                             ptrSensor->bslnExt[freqChannel] = LO8(history);
 342:Generated_Source\PSoC4/CapSense_Filter.c ****                         #else
 343:Generated_Source\PSoC4/CapSense_Filter.c ****                             ptrSensor->bsln[freqChannel] = LO16(history);
 344:Generated_Source\PSoC4/CapSense_Filter.c ****                         #endif /* (CapSense_REGULAR_IIR_BL_TYPE == CapSense_IIR_FILTER_PERFORMANCE)
 345:Generated_Source\PSoC4/CapSense_Filter.c ****                     #endif /* (CapSense_REGULAR_SENSOR_EN) */
 346:Generated_Source\PSoC4/CapSense_Filter.c ****                 }
 347:Generated_Source\PSoC4/CapSense_Filter.c ****                 else
 348:Generated_Source\PSoC4/CapSense_Filter.c ****                 {
 349:Generated_Source\PSoC4/CapSense_Filter.c ****                     #if (CapSense_PROXIMITY_SENSOR_EN)
 350:Generated_Source\PSoC4/CapSense_Filter.c ****                         #if (CapSense_PROX_IIR_BL_TYPE == CapSense_IIR_FILTER_PERFORMANCE)
 351:Generated_Source\PSoC4/CapSense_Filter.c ****                             history = (uint32) ptrSensor->bsln[freqChannel] << 8u;
 352:Generated_Source\PSoC4/CapSense_Filter.c ****                             history |= ptrSensor->bslnExt[freqChannel];
 353:Generated_Source\PSoC4/CapSense_Filter.c ****                         #else
ARM GAS  C:\Users\mstai\AppData\Local\Temp\cc5JzFax.s 			page 8


 354:Generated_Source\PSoC4/CapSense_Filter.c ****                             history = (uint32) ptrSensor->bsln[freqChannel];
 355:Generated_Source\PSoC4/CapSense_Filter.c ****                         #endif /* (CapSense_PROX_IIR_BL_TYPE == CapSense_IIR_FILTER_PERFORMANCE) */
 356:Generated_Source\PSoC4/CapSense_Filter.c **** 
 357:Generated_Source\PSoC4/CapSense_Filter.c ****                         #if (CapSense_ENABLE == CapSense_WD_BSLN_COEFF_EN)
 358:Generated_Source\PSoC4/CapSense_Filter.c ****                             baselineCoeff = ptrWidgetRam->bslnCoeff;
 359:Generated_Source\PSoC4/CapSense_Filter.c ****                         #else /* (CapSense_ENABLE == CapSense_WD_BSLN_COEFF_EN) */
 360:Generated_Source\PSoC4/CapSense_Filter.c ****                             baselineCoeff = CapSense_PROX_IIR_BL_N;
 361:Generated_Source\PSoC4/CapSense_Filter.c ****                         #endif /* (CapSense_ENABLE == CapSense_WD_BSLN_COEFF_EN) */
 362:Generated_Source\PSoC4/CapSense_Filter.c **** 
 363:Generated_Source\PSoC4/CapSense_Filter.c ****                         history = CapSense_FtIIR1stOrder(
 364:Generated_Source\PSoC4/CapSense_Filter.c ****                                         (uint32)ptrSensor->raw[freqChannel],
 365:Generated_Source\PSoC4/CapSense_Filter.c ****                                         history, baselineCoeff,
 366:Generated_Source\PSoC4/CapSense_Filter.c ****                                         CapSense_PROX_IIR_BL_SHIFT);
 367:Generated_Source\PSoC4/CapSense_Filter.c **** 
 368:Generated_Source\PSoC4/CapSense_Filter.c ****                         #if (CapSense_PROX_IIR_BL_TYPE == CapSense_IIR_FILTER_PERFORMANCE)
 369:Generated_Source\PSoC4/CapSense_Filter.c ****                             ptrSensor->bsln[freqChannel] = LO16(history >> 8u);
 370:Generated_Source\PSoC4/CapSense_Filter.c ****                             ptrSensor->bslnExt[freqChannel] = LO8(history);
 371:Generated_Source\PSoC4/CapSense_Filter.c ****                         #else
 372:Generated_Source\PSoC4/CapSense_Filter.c ****                             ptrSensor->bsln[freqChannel] = LO16(history);
 373:Generated_Source\PSoC4/CapSense_Filter.c ****                         #endif /* (CapSense_PROX_IIR_BL_TYPE == CapSense_IIR_FILTER_PERFORMANCE) */
 374:Generated_Source\PSoC4/CapSense_Filter.c ****                     #endif /* (CapSense_PROX_SENSOR_EN) */
 375:Generated_Source\PSoC4/CapSense_Filter.c ****                 }
 376:Generated_Source\PSoC4/CapSense_Filter.c ****             #else /* (CapSense_CSD_BASELINE_TYPE == CapSense_IIR_BASELINE) */
 377:Generated_Source\PSoC4/CapSense_Filter.c **** 
 378:Generated_Source\PSoC4/CapSense_Filter.c ****                 /******************************************************************
 379:Generated_Source\PSoC4/CapSense_Filter.c ****                 * This is the place where the bucket algorithm should be implemented.
 380:Generated_Source\PSoC4/CapSense_Filter.c ****                 * The bucket method will be implemented in future Component version.
 381:Generated_Source\PSoC4/CapSense_Filter.c ****                 *******************************************************************/
 382:Generated_Source\PSoC4/CapSense_Filter.c **** 
 383:Generated_Source\PSoC4/CapSense_Filter.c ****             #endif /* (CapSense_CSD_BASELINE_TYPE == CapSense_IIR_BASELINE) */
 384:Generated_Source\PSoC4/CapSense_Filter.c **** 
 385:Generated_Source\PSoC4/CapSense_Filter.c ****             #if (!CapSense_SENSOR_AUTO_RESET_EN)
 386:Generated_Source\PSoC4/CapSense_Filter.c ****                 }
 387:Generated_Source\PSoC4/CapSense_Filter.c ****             #endif /* (!CapSense_SENSOR_AUTO_RESET_EN) */
 388:Generated_Source\PSoC4/CapSense_Filter.c ****         }
 389:Generated_Source\PSoC4/CapSense_Filter.c **** 
 390:Generated_Source\PSoC4/CapSense_Filter.c ****         #if (CapSense_ENABLE == CapSense_TST_BSLN_DUPLICATION_EN)
 391:Generated_Source\PSoC4/CapSense_Filter.c ****             /* Update baseline inversion of every channel in sensor */
 392:Generated_Source\PSoC4/CapSense_Filter.c ****             ptrSensor->bslnInv[freqChannel] = ~(ptrSensor->bsln[freqChannel]);
 393:Generated_Source\PSoC4/CapSense_Filter.c ****             }
 394:Generated_Source\PSoC4/CapSense_Filter.c ****         #endif /* (CapSense_ENABLE == CapSense_TST_BSLN_DUPLICATION_EN) */
 395:Generated_Source\PSoC4/CapSense_Filter.c **** 
 396:Generated_Source\PSoC4/CapSense_Filter.c ****     }
 397:Generated_Source\PSoC4/CapSense_Filter.c ****     return result;
 398:Generated_Source\PSoC4/CapSense_Filter.c **** }
 399:Generated_Source\PSoC4/CapSense_Filter.c **** 
 400:Generated_Source\PSoC4/CapSense_Filter.c **** 
 401:Generated_Source\PSoC4/CapSense_Filter.c **** /*******************************************************************************
 402:Generated_Source\PSoC4/CapSense_Filter.c **** * Function Name: CapSense_InitializeAllBaselines
 403:Generated_Source\PSoC4/CapSense_Filter.c **** ****************************************************************************//**
 404:Generated_Source\PSoC4/CapSense_Filter.c **** *
 405:Generated_Source\PSoC4/CapSense_Filter.c **** * \brief
 406:Generated_Source\PSoC4/CapSense_Filter.c **** *  Initializes (or re-initializes) the baselines of all the sensors of all the widgets.
 407:Generated_Source\PSoC4/CapSense_Filter.c **** *
 408:Generated_Source\PSoC4/CapSense_Filter.c **** * \details
 409:Generated_Source\PSoC4/CapSense_Filter.c **** *  Initializes the baseline for all the sensors of all the widgets. Also, this function
 410:Generated_Source\PSoC4/CapSense_Filter.c **** *  can be used to re-initialize baselines. CapSense_Start() calls this
ARM GAS  C:\Users\mstai\AppData\Local\Temp\cc5JzFax.s 			page 9


 411:Generated_Source\PSoC4/CapSense_Filter.c **** *  API as part of CapSense operation initialization.
 412:Generated_Source\PSoC4/CapSense_Filter.c **** *
 413:Generated_Source\PSoC4/CapSense_Filter.c **** *  If any raw count filter is enabled, make sure the raw count filter history is
 414:Generated_Source\PSoC4/CapSense_Filter.c **** *  initialized as well using one of these functions:
 415:Generated_Source\PSoC4/CapSense_Filter.c **** *  - CapSense_InitializeAllFilters().
 416:Generated_Source\PSoC4/CapSense_Filter.c **** *  - CapSense_InitializeWidgetFilter().
 417:Generated_Source\PSoC4/CapSense_Filter.c **** *
 418:Generated_Source\PSoC4/CapSense_Filter.c **** *******************************************************************************/
 419:Generated_Source\PSoC4/CapSense_Filter.c **** void CapSense_InitializeAllBaselines(void)
 420:Generated_Source\PSoC4/CapSense_Filter.c **** {
 421:Generated_Source\PSoC4/CapSense_Filter.c ****     uint32 widgetId;
 422:Generated_Source\PSoC4/CapSense_Filter.c **** 
 423:Generated_Source\PSoC4/CapSense_Filter.c ****     for(widgetId = CapSense_TOTAL_WIDGETS; widgetId-- > 0u;)
 424:Generated_Source\PSoC4/CapSense_Filter.c ****     {
 425:Generated_Source\PSoC4/CapSense_Filter.c ****         CapSense_InitializeWidgetBaseline(widgetId);
 426:Generated_Source\PSoC4/CapSense_Filter.c ****     }
 427:Generated_Source\PSoC4/CapSense_Filter.c **** }
 428:Generated_Source\PSoC4/CapSense_Filter.c **** 
 429:Generated_Source\PSoC4/CapSense_Filter.c **** 
 430:Generated_Source\PSoC4/CapSense_Filter.c **** /*******************************************************************************
 431:Generated_Source\PSoC4/CapSense_Filter.c **** * Function Name: CapSense_InitializeWidgetBaseline
 432:Generated_Source\PSoC4/CapSense_Filter.c **** ****************************************************************************//**
 433:Generated_Source\PSoC4/CapSense_Filter.c **** *
 434:Generated_Source\PSoC4/CapSense_Filter.c **** * \brief
 435:Generated_Source\PSoC4/CapSense_Filter.c **** *  Initializes (or re-initializes) the baselines of all the sensors in a widget
 436:Generated_Source\PSoC4/CapSense_Filter.c **** *  specified by the input parameter.
 437:Generated_Source\PSoC4/CapSense_Filter.c **** *
 438:Generated_Source\PSoC4/CapSense_Filter.c **** * \details
 439:Generated_Source\PSoC4/CapSense_Filter.c **** *  Initializes (or re-initializes) the baseline for all the sensors of the
 440:Generated_Source\PSoC4/CapSense_Filter.c **** *  specified widget.
 441:Generated_Source\PSoC4/CapSense_Filter.c **** *
 442:Generated_Source\PSoC4/CapSense_Filter.c **** *  If any raw count filter is enabled, make sure the raw count filter history is
 443:Generated_Source\PSoC4/CapSense_Filter.c **** *  initialized as well using one of these functions:
 444:Generated_Source\PSoC4/CapSense_Filter.c **** *  - CapSense_InitializeAllFilters().
 445:Generated_Source\PSoC4/CapSense_Filter.c **** *  - CapSense_InitializeWidgetFilter().
 446:Generated_Source\PSoC4/CapSense_Filter.c **** *
 447:Generated_Source\PSoC4/CapSense_Filter.c **** * \param widgetId
 448:Generated_Source\PSoC4/CapSense_Filter.c **** *  Specifies the ID number of a widget to initialize the baseline of all the sensors
 449:Generated_Source\PSoC4/CapSense_Filter.c **** *  in the widget.
 450:Generated_Source\PSoC4/CapSense_Filter.c **** *  A macro for the widget ID can be found in the
 451:Generated_Source\PSoC4/CapSense_Filter.c **** *  CapSense Configuration header file defined as
 452:Generated_Source\PSoC4/CapSense_Filter.c **** *  CapSense_<WidgetName>_WDGT_ID.
 453:Generated_Source\PSoC4/CapSense_Filter.c **** *
 454:Generated_Source\PSoC4/CapSense_Filter.c **** *******************************************************************************/
 455:Generated_Source\PSoC4/CapSense_Filter.c **** void CapSense_InitializeWidgetBaseline(uint32 widgetId)
 456:Generated_Source\PSoC4/CapSense_Filter.c **** {
 457:Generated_Source\PSoC4/CapSense_Filter.c ****     uint32 sensorId;
 458:Generated_Source\PSoC4/CapSense_Filter.c ****     uint32 sensorsNumber;
 459:Generated_Source\PSoC4/CapSense_Filter.c **** 
 460:Generated_Source\PSoC4/CapSense_Filter.c ****     CapSense_FLASH_WD_STRUCT const *ptrWidget = &CapSense_dsFlash.wdgtArray[widgetId];
 461:Generated_Source\PSoC4/CapSense_Filter.c **** 
 462:Generated_Source\PSoC4/CapSense_Filter.c ****     /* Find total amount of sensors in specified widget */
 463:Generated_Source\PSoC4/CapSense_Filter.c ****     sensorsNumber = CapSense_GET_SNS_CNT_BY_PTR(ptrWidget);
 464:Generated_Source\PSoC4/CapSense_Filter.c **** 
 465:Generated_Source\PSoC4/CapSense_Filter.c ****     for(sensorId = sensorsNumber; sensorId-- > 0u;)
 466:Generated_Source\PSoC4/CapSense_Filter.c ****     {
 467:Generated_Source\PSoC4/CapSense_Filter.c ****         CapSense_InitializeSensorBaseline(widgetId, sensorId);
ARM GAS  C:\Users\mstai\AppData\Local\Temp\cc5JzFax.s 			page 10


 468:Generated_Source\PSoC4/CapSense_Filter.c ****     }
 469:Generated_Source\PSoC4/CapSense_Filter.c **** }
 470:Generated_Source\PSoC4/CapSense_Filter.c **** 
 471:Generated_Source\PSoC4/CapSense_Filter.c **** 
 472:Generated_Source\PSoC4/CapSense_Filter.c **** /*******************************************************************************
 473:Generated_Source\PSoC4/CapSense_Filter.c **** * Function Name: CapSense_InitializeSensorBaseline
 474:Generated_Source\PSoC4/CapSense_Filter.c **** ****************************************************************************//**
 475:Generated_Source\PSoC4/CapSense_Filter.c **** *
 476:Generated_Source\PSoC4/CapSense_Filter.c **** * \brief
 477:Generated_Source\PSoC4/CapSense_Filter.c **** *  Initializes (or re-initializes) the baseline of a sensor in a widget specified
 478:Generated_Source\PSoC4/CapSense_Filter.c **** *  by the input parameters.
 479:Generated_Source\PSoC4/CapSense_Filter.c **** *
 480:Generated_Source\PSoC4/CapSense_Filter.c **** * \details
 481:Generated_Source\PSoC4/CapSense_Filter.c **** *  Initializes (or re-initializes) the baseline for a specified sensor within
 482:Generated_Source\PSoC4/CapSense_Filter.c **** *  a specified widget.
 483:Generated_Source\PSoC4/CapSense_Filter.c **** *
 484:Generated_Source\PSoC4/CapSense_Filter.c **** * \param widgetId
 485:Generated_Source\PSoC4/CapSense_Filter.c **** *  Specifies the ID number of a widget to initialize the baseline of the sensor
 486:Generated_Source\PSoC4/CapSense_Filter.c **** *  in the widget.
 487:Generated_Source\PSoC4/CapSense_Filter.c **** *  A macro for the widget ID can be found in the
 488:Generated_Source\PSoC4/CapSense_Filter.c **** *  CapSense Configuration header file defined as
 489:Generated_Source\PSoC4/CapSense_Filter.c **** *  CapSense_<WidgetName>_WDGT_ID.
 490:Generated_Source\PSoC4/CapSense_Filter.c **** *
 491:Generated_Source\PSoC4/CapSense_Filter.c **** * \param sensorId
 492:Generated_Source\PSoC4/CapSense_Filter.c **** *  Specifies the ID number of the sensor within the widget to initialize its
 493:Generated_Source\PSoC4/CapSense_Filter.c **** *  baseline.
 494:Generated_Source\PSoC4/CapSense_Filter.c **** *  A macro for the sensor ID within a specified widget can be found in the
 495:Generated_Source\PSoC4/CapSense_Filter.c **** *  CapSense Configuration header file defined as
 496:Generated_Source\PSoC4/CapSense_Filter.c **** *  CapSense_<WidgetName>_SNS<SensorNumber>_ID.
 497:Generated_Source\PSoC4/CapSense_Filter.c **** *
 498:Generated_Source\PSoC4/CapSense_Filter.c **** *******************************************************************************/
 499:Generated_Source\PSoC4/CapSense_Filter.c **** void CapSense_InitializeSensorBaseline(uint32 widgetId, uint32 sensorId)
 500:Generated_Source\PSoC4/CapSense_Filter.c **** {
 501:Generated_Source\PSoC4/CapSense_Filter.c ****     CapSense_RAM_SNS_STRUCT *ptrSensor = NULL;
 502:Generated_Source\PSoC4/CapSense_Filter.c ****     CapSense_FLASH_WD_STRUCT const *ptrWidget = NULL;
 503:Generated_Source\PSoC4/CapSense_Filter.c ****     ptrWidget = &CapSense_dsFlash.wdgtArray[widgetId];
 504:Generated_Source\PSoC4/CapSense_Filter.c **** 
 505:Generated_Source\PSoC4/CapSense_Filter.c ****     /* Find pointer to specified sensor object */
 506:Generated_Source\PSoC4/CapSense_Filter.c ****     ptrSensor = ptrWidget->ptr2SnsRam;
 507:Generated_Source\PSoC4/CapSense_Filter.c ****     ptrSensor = &ptrSensor[sensorId];
 508:Generated_Source\PSoC4/CapSense_Filter.c **** 
 509:Generated_Source\PSoC4/CapSense_Filter.c ****     CapSense_FtInitializeBaseline(ptrSensor, (uint32)ptrWidget->wdgtType);
 510:Generated_Source\PSoC4/CapSense_Filter.c **** }
 511:Generated_Source\PSoC4/CapSense_Filter.c **** 
 512:Generated_Source\PSoC4/CapSense_Filter.c **** 
 513:Generated_Source\PSoC4/CapSense_Filter.c **** /*******************************************************************************
 514:Generated_Source\PSoC4/CapSense_Filter.c **** * Function Name: CapSense_FtInitializeBaseline
 515:Generated_Source\PSoC4/CapSense_Filter.c **** ****************************************************************************//**
 516:Generated_Source\PSoC4/CapSense_Filter.c **** *
 517:Generated_Source\PSoC4/CapSense_Filter.c **** * \brief
 518:Generated_Source\PSoC4/CapSense_Filter.c **** *  Initializes the baseline history for a sensor indicated by an input
 519:Generated_Source\PSoC4/CapSense_Filter.c **** *  parameter.
 520:Generated_Source\PSoC4/CapSense_Filter.c **** *
 521:Generated_Source\PSoC4/CapSense_Filter.c **** * \details
 522:Generated_Source\PSoC4/CapSense_Filter.c **** *  Initializes the baseline history for a sensor indicated by an input
 523:Generated_Source\PSoC4/CapSense_Filter.c **** *  parameter.
 524:Generated_Source\PSoC4/CapSense_Filter.c **** *
ARM GAS  C:\Users\mstai\AppData\Local\Temp\cc5JzFax.s 			page 11


 525:Generated_Source\PSoC4/CapSense_Filter.c **** * \param *ptrSensor
 526:Generated_Source\PSoC4/CapSense_Filter.c **** *  The pointer to the sensor RAM object.
 527:Generated_Source\PSoC4/CapSense_Filter.c **** *
 528:Generated_Source\PSoC4/CapSense_Filter.c **** * \param wdType
 529:Generated_Source\PSoC4/CapSense_Filter.c **** *  Specifies the type of a widget.
 530:Generated_Source\PSoC4/CapSense_Filter.c **** *
 531:Generated_Source\PSoC4/CapSense_Filter.c **** *******************************************************************************/
 532:Generated_Source\PSoC4/CapSense_Filter.c **** void CapSense_FtInitializeBaseline(CapSense_RAM_SNS_STRUCT *ptrSensor, uint32 wdType)
 533:Generated_Source\PSoC4/CapSense_Filter.c **** {
 534:Generated_Source\PSoC4/CapSense_Filter.c ****     uint32 freqChannel;
 535:Generated_Source\PSoC4/CapSense_Filter.c **** 
 536:Generated_Source\PSoC4/CapSense_Filter.c ****     /* Apply baseline initialization to every channel in sensor */
 537:Generated_Source\PSoC4/CapSense_Filter.c ****     for(freqChannel = CapSense_NUM_SCAN_FREQS; freqChannel-- > 0u;)
 538:Generated_Source\PSoC4/CapSense_Filter.c ****     {
 539:Generated_Source\PSoC4/CapSense_Filter.c ****         CapSense_FtInitializeBaselineChannel(ptrSensor, wdType, freqChannel);
 540:Generated_Source\PSoC4/CapSense_Filter.c ****     }
 541:Generated_Source\PSoC4/CapSense_Filter.c **** }
 542:Generated_Source\PSoC4/CapSense_Filter.c **** 
 543:Generated_Source\PSoC4/CapSense_Filter.c **** 
 544:Generated_Source\PSoC4/CapSense_Filter.c **** /*******************************************************************************
 545:Generated_Source\PSoC4/CapSense_Filter.c **** * Function Name: CapSense_FtInitializeBaselineChannel
 546:Generated_Source\PSoC4/CapSense_Filter.c **** ****************************************************************************//**
 547:Generated_Source\PSoC4/CapSense_Filter.c **** *
 548:Generated_Source\PSoC4/CapSense_Filter.c **** * \brief
 549:Generated_Source\PSoC4/CapSense_Filter.c **** *  Initializes the baseline history for a sensor indicated by an input
 550:Generated_Source\PSoC4/CapSense_Filter.c **** *  parameter.
 551:Generated_Source\PSoC4/CapSense_Filter.c **** *
 552:Generated_Source\PSoC4/CapSense_Filter.c **** * \details
 553:Generated_Source\PSoC4/CapSense_Filter.c **** *  Initializes the baseline history for a sensor indicated by an input
 554:Generated_Source\PSoC4/CapSense_Filter.c **** *  parameter.
 555:Generated_Source\PSoC4/CapSense_Filter.c **** *
 556:Generated_Source\PSoC4/CapSense_Filter.c **** * \param *ptrSensor
 557:Generated_Source\PSoC4/CapSense_Filter.c **** *  The pointer to the sensor RAM object.
 558:Generated_Source\PSoC4/CapSense_Filter.c **** *
 559:Generated_Source\PSoC4/CapSense_Filter.c **** * \param wdType
 560:Generated_Source\PSoC4/CapSense_Filter.c **** *  Specifies the type of a widget.
 561:Generated_Source\PSoC4/CapSense_Filter.c **** *
 562:Generated_Source\PSoC4/CapSense_Filter.c **** * \param channel
 563:Generated_Source\PSoC4/CapSense_Filter.c **** *  Specifies the number of the channel to be initialized.
 564:Generated_Source\PSoC4/CapSense_Filter.c **** *
 565:Generated_Source\PSoC4/CapSense_Filter.c **** *******************************************************************************/
 566:Generated_Source\PSoC4/CapSense_Filter.c **** void CapSense_FtInitializeBaselineChannel(CapSense_RAM_SNS_STRUCT *ptrSensor, uint32 wdType, uint32
 567:Generated_Source\PSoC4/CapSense_Filter.c **** {
  47              		.loc 1 567 0
  48              		.cfi_startproc
  49              		@ args = 0, pretend = 0, frame = 0
  50              		@ frame_needed = 0, uses_anonymous_args = 0
  51              		@ link register save eliminated.
  52              	.LVL0:
 568:Generated_Source\PSoC4/CapSense_Filter.c ****     #if (CapSense_BASELINE_TYPE == CapSense_IIR_BASELINE)
 569:Generated_Source\PSoC4/CapSense_Filter.c ****         if ((CapSense_WD_TYPE_ENUM)wdType != CapSense_WD_PROXIMITY_E)
  53              		.loc 1 569 0
  54 0000 FF23     		movs	r3, #255
  55 0002 1940     		ands	r1, r3
  56              	.LVL1:
  57 0004 0629     		cmp	r1, #6
  58 0006 02D0     		beq	.L3
ARM GAS  C:\Users\mstai\AppData\Local\Temp\cc5JzFax.s 			page 12


 570:Generated_Source\PSoC4/CapSense_Filter.c ****         {
 571:Generated_Source\PSoC4/CapSense_Filter.c ****             #if (CapSense_REGULAR_SENSOR_EN)
 572:Generated_Source\PSoC4/CapSense_Filter.c ****                 #if (CapSense_REGULAR_IIR_BL_TYPE == CapSense_IIR_FILTER_PERFORMANCE)
 573:Generated_Source\PSoC4/CapSense_Filter.c ****                     ptrSensor->bslnExt[channel] = 0u;
  59              		.loc 1 573 0
  60 0008 8318     		adds	r3, r0, r2
  61 000a 0021     		movs	r1, #0
  62 000c 9971     		strb	r1, [r3, #6]
  63              	.L3:
 574:Generated_Source\PSoC4/CapSense_Filter.c ****                 #endif /* (CapSense_REGULAR_IIR_BL_TYPE == CapSense_IIR_FILTER_PERFORMANCE) */
 575:Generated_Source\PSoC4/CapSense_Filter.c ****             #endif /* (CapSense_REGULAR_SENSOR_EN) */
 576:Generated_Source\PSoC4/CapSense_Filter.c ****         }
 577:Generated_Source\PSoC4/CapSense_Filter.c ****         else
 578:Generated_Source\PSoC4/CapSense_Filter.c ****         {
 579:Generated_Source\PSoC4/CapSense_Filter.c ****             #if (CapSense_PROXIMITY_SENSOR_EN)
 580:Generated_Source\PSoC4/CapSense_Filter.c ****                 #if (CapSense_PROX_IIR_BL_TYPE == CapSense_IIR_FILTER_PERFORMANCE)
 581:Generated_Source\PSoC4/CapSense_Filter.c ****                     ptrSensor->bslnExt[channel] = 0u;
 582:Generated_Source\PSoC4/CapSense_Filter.c ****                 #endif /* (CapSense_PROX_IIR_BL_TYPE == CapSense_IIR_FILTER_PERFORMANCE) */
 583:Generated_Source\PSoC4/CapSense_Filter.c ****             #endif /* (CapSense_PROX_SENSOR_EN) */
 584:Generated_Source\PSoC4/CapSense_Filter.c ****         }
 585:Generated_Source\PSoC4/CapSense_Filter.c ****     #else
 586:Generated_Source\PSoC4/CapSense_Filter.c ****         /* CapSense_BASELINE_TYPE == CapSense_BUCKET_BASELINE */
 587:Generated_Source\PSoC4/CapSense_Filter.c ****         ptrSensor->bslnExt[channel] = 0u;
 588:Generated_Source\PSoC4/CapSense_Filter.c ****     #endif /* (CapSense_BASELINE_TYPE == CapSense_IIR_BASELINE) */
 589:Generated_Source\PSoC4/CapSense_Filter.c **** 
 590:Generated_Source\PSoC4/CapSense_Filter.c ****     ptrSensor->bsln[channel] = ptrSensor->raw[channel];
  64              		.loc 1 590 0
  65 000e 5300     		lsls	r3, r2, #1
  66 0010 195A     		ldrh	r1, [r3, r0]
  67 0012 C318     		adds	r3, r0, r3
  68 0014 5980     		strh	r1, [r3, #2]
 591:Generated_Source\PSoC4/CapSense_Filter.c **** 
 592:Generated_Source\PSoC4/CapSense_Filter.c ****     #if (CapSense_ENABLE == CapSense_TST_BSLN_DUPLICATION_EN)
 593:Generated_Source\PSoC4/CapSense_Filter.c ****     /* Update baseline inversion of the channel in sensor */
 594:Generated_Source\PSoC4/CapSense_Filter.c ****         ptrSensor->bslnInv[channel] = ~(ptrSensor->bsln[channel]);
  69              		.loc 1 594 0
  70 0016 C943     		mvns	r1, r1
  71 0018 9980     		strh	r1, [r3, #4]
 595:Generated_Source\PSoC4/CapSense_Filter.c ****     #endif /* (CapSense_ENABLE == CapSense_TST_BSLN_DUPLICATION_EN) */
 596:Generated_Source\PSoC4/CapSense_Filter.c **** 
 597:Generated_Source\PSoC4/CapSense_Filter.c ****     ptrSensor->negBslnRstCnt[channel] = 0u;
  72              		.loc 1 597 0
  73 001a 8218     		adds	r2, r0, r2
  74              	.LVL2:
  75 001c 0023     		movs	r3, #0
  76 001e 9372     		strb	r3, [r2, #10]
 598:Generated_Source\PSoC4/CapSense_Filter.c **** }
  77              		.loc 1 598 0
  78              		@ sp needed
  79 0020 7047     		bx	lr
  80              		.cfi_endproc
  81              	.LFE10:
  82              		.size	CapSense_FtInitializeBaselineChannel, .-CapSense_FtInitializeBaselineChannel
  83 0022 C046     		.section	.text.CapSense_FtInitializeBaseline,"ax",%progbits
  84              		.align	2
  85              		.global	CapSense_FtInitializeBaseline
  86              		.code	16
ARM GAS  C:\Users\mstai\AppData\Local\Temp\cc5JzFax.s 			page 13


  87              		.thumb_func
  88              		.type	CapSense_FtInitializeBaseline, %function
  89              	CapSense_FtInitializeBaseline:
  90              	.LFB9:
 533:Generated_Source\PSoC4/CapSense_Filter.c ****     uint32 freqChannel;
  91              		.loc 1 533 0
  92              		.cfi_startproc
  93              		@ args = 0, pretend = 0, frame = 0
  94              		@ frame_needed = 0, uses_anonymous_args = 0
  95              	.LVL3:
  96 0000 70B5     		push	{r4, r5, r6, lr}
  97              		.cfi_def_cfa_offset 16
  98              		.cfi_offset 4, -16
  99              		.cfi_offset 5, -12
 100              		.cfi_offset 6, -8
 101              		.cfi_offset 14, -4
 102 0002 0600     		movs	r6, r0
 103 0004 0D00     		movs	r5, r1
 104              	.LVL4:
 537:Generated_Source\PSoC4/CapSense_Filter.c ****     {
 105              		.loc 1 537 0
 106 0006 0123     		movs	r3, #1
 107 0008 05E0     		b	.L5
 108              	.LVL5:
 109              	.L6:
 539:Generated_Source\PSoC4/CapSense_Filter.c ****     }
 110              		.loc 1 539 0
 111 000a 2200     		movs	r2, r4
 112 000c 2900     		movs	r1, r5
 113 000e 3000     		movs	r0, r6
 114 0010 FFF7FEFF 		bl	CapSense_FtInitializeBaselineChannel
 115              	.LVL6:
 537:Generated_Source\PSoC4/CapSense_Filter.c ****     {
 116              		.loc 1 537 0
 117 0014 2300     		movs	r3, r4
 118              	.LVL7:
 119              	.L5:
 537:Generated_Source\PSoC4/CapSense_Filter.c ****     {
 120              		.loc 1 537 0 is_stmt 0 discriminator 1
 121 0016 5C1E     		subs	r4, r3, #1
 122              	.LVL8:
 123 0018 002B     		cmp	r3, #0
 124 001a F6D1     		bne	.L6
 541:Generated_Source\PSoC4/CapSense_Filter.c **** 
 125              		.loc 1 541 0 is_stmt 1
 126              		@ sp needed
 127              	.LVL9:
 128              	.LVL10:
 129              	.LVL11:
 130 001c 70BD     		pop	{r4, r5, r6, pc}
 131              		.cfi_endproc
 132              	.LFE9:
 133              		.size	CapSense_FtInitializeBaseline, .-CapSense_FtInitializeBaseline
 134 001e C046     		.section	.text.CapSense_InitializeSensorBaseline,"ax",%progbits
 135              		.align	2
 136              		.global	CapSense_InitializeSensorBaseline
 137              		.code	16
ARM GAS  C:\Users\mstai\AppData\Local\Temp\cc5JzFax.s 			page 14


 138              		.thumb_func
 139              		.type	CapSense_InitializeSensorBaseline, %function
 140              	CapSense_InitializeSensorBaseline:
 141              	.LFB8:
 500:Generated_Source\PSoC4/CapSense_Filter.c ****     CapSense_RAM_SNS_STRUCT *ptrSensor = NULL;
 142              		.loc 1 500 0
 143              		.cfi_startproc
 144              		@ args = 0, pretend = 0, frame = 0
 145              		@ frame_needed = 0, uses_anonymous_args = 0
 146              	.LVL12:
 147 0000 10B5     		push	{r4, lr}
 148              		.cfi_def_cfa_offset 8
 149              		.cfi_offset 4, -8
 150              		.cfi_offset 14, -4
 151              	.LVL13:
 506:Generated_Source\PSoC4/CapSense_Filter.c ****     ptrSensor = &ptrSensor[sensorId];
 152              		.loc 1 506 0
 153 0002 4001     		lsls	r0, r0, #5
 154              	.LVL14:
 155 0004 054B     		ldr	r3, .L8
 156 0006 1B18     		adds	r3, r3, r0
 157              	.LVL15:
 507:Generated_Source\PSoC4/CapSense_Filter.c **** 
 158              		.loc 1 507 0
 159 0008 4A00     		lsls	r2, r1, #1
 160 000a 5118     		adds	r1, r2, r1
 161              	.LVL16:
 162 000c 8800     		lsls	r0, r1, #2
 163 000e 9A68     		ldr	r2, [r3, #8]
 164 0010 9446     		mov	ip, r2
 165 0012 6044     		add	r0, r0, ip
 166              	.LVL17:
 509:Generated_Source\PSoC4/CapSense_Filter.c **** }
 167              		.loc 1 509 0
 168 0014 997E     		ldrb	r1, [r3, #26]
 169 0016 FFF7FEFF 		bl	CapSense_FtInitializeBaseline
 170              	.LVL18:
 510:Generated_Source\PSoC4/CapSense_Filter.c **** 
 171              		.loc 1 510 0
 172              		@ sp needed
 173 001a 10BD     		pop	{r4, pc}
 174              	.L9:
 175              		.align	2
 176              	.L8:
 177 001c 00000000 		.word	CapSense_dsFlash
 178              		.cfi_endproc
 179              	.LFE8:
 180              		.size	CapSense_InitializeSensorBaseline, .-CapSense_InitializeSensorBaseline
 181              		.section	.text.CapSense_InitializeWidgetBaseline,"ax",%progbits
 182              		.align	2
 183              		.global	CapSense_InitializeWidgetBaseline
 184              		.code	16
 185              		.thumb_func
 186              		.type	CapSense_InitializeWidgetBaseline, %function
 187              	CapSense_InitializeWidgetBaseline:
 188              	.LFB7:
 456:Generated_Source\PSoC4/CapSense_Filter.c ****     uint32 sensorId;
ARM GAS  C:\Users\mstai\AppData\Local\Temp\cc5JzFax.s 			page 15


 189              		.loc 1 456 0
 190              		.cfi_startproc
 191              		@ args = 0, pretend = 0, frame = 0
 192              		@ frame_needed = 0, uses_anonymous_args = 0
 193              	.LVL19:
 194 0000 70B5     		push	{r4, r5, r6, lr}
 195              		.cfi_def_cfa_offset 16
 196              		.cfi_offset 4, -16
 197              		.cfi_offset 5, -12
 198              		.cfi_offset 6, -8
 199              		.cfi_offset 14, -4
 200 0002 0500     		movs	r5, r0
 201              	.LVL20:
 463:Generated_Source\PSoC4/CapSense_Filter.c **** 
 202              		.loc 1 463 0
 203 0004 4301     		lsls	r3, r0, #5
 204 0006 064A     		ldr	r2, .L13
 205 0008 D318     		adds	r3, r2, r3
 206              	.LVL21:
 207 000a 1B8B     		ldrh	r3, [r3, #24]
 208              	.LVL22:
 465:Generated_Source\PSoC4/CapSense_Filter.c ****     {
 209              		.loc 1 465 0
 210 000c 04E0     		b	.L11
 211              	.LVL23:
 212              	.L12:
 467:Generated_Source\PSoC4/CapSense_Filter.c ****     }
 213              		.loc 1 467 0
 214 000e 2100     		movs	r1, r4
 215 0010 2800     		movs	r0, r5
 216 0012 FFF7FEFF 		bl	CapSense_InitializeSensorBaseline
 217              	.LVL24:
 465:Generated_Source\PSoC4/CapSense_Filter.c ****     {
 218              		.loc 1 465 0
 219 0016 2300     		movs	r3, r4
 220              	.LVL25:
 221              	.L11:
 465:Generated_Source\PSoC4/CapSense_Filter.c ****     {
 222              		.loc 1 465 0 is_stmt 0 discriminator 1
 223 0018 5C1E     		subs	r4, r3, #1
 224              	.LVL26:
 225 001a 002B     		cmp	r3, #0
 226 001c F7D1     		bne	.L12
 469:Generated_Source\PSoC4/CapSense_Filter.c **** 
 227              		.loc 1 469 0 is_stmt 1
 228              		@ sp needed
 229              	.LVL27:
 230              	.LVL28:
 231 001e 70BD     		pop	{r4, r5, r6, pc}
 232              	.L14:
 233              		.align	2
 234              	.L13:
 235 0020 00000000 		.word	CapSense_dsFlash
 236              		.cfi_endproc
 237              	.LFE7:
 238              		.size	CapSense_InitializeWidgetBaseline, .-CapSense_InitializeWidgetBaseline
 239              		.section	.text.CapSense_InitializeAllBaselines,"ax",%progbits
ARM GAS  C:\Users\mstai\AppData\Local\Temp\cc5JzFax.s 			page 16


 240              		.align	2
 241              		.global	CapSense_InitializeAllBaselines
 242              		.code	16
 243              		.thumb_func
 244              		.type	CapSense_InitializeAllBaselines, %function
 245              	CapSense_InitializeAllBaselines:
 246              	.LFB6:
 420:Generated_Source\PSoC4/CapSense_Filter.c ****     uint32 widgetId;
 247              		.loc 1 420 0
 248              		.cfi_startproc
 249              		@ args = 0, pretend = 0, frame = 0
 250              		@ frame_needed = 0, uses_anonymous_args = 0
 251 0000 10B5     		push	{r4, lr}
 252              		.cfi_def_cfa_offset 8
 253              		.cfi_offset 4, -8
 254              		.cfi_offset 14, -4
 255              	.LVL29:
 423:Generated_Source\PSoC4/CapSense_Filter.c ****     {
 256              		.loc 1 423 0
 257 0002 0123     		movs	r3, #1
 258 0004 03E0     		b	.L16
 259              	.LVL30:
 260              	.L17:
 425:Generated_Source\PSoC4/CapSense_Filter.c ****     }
 261              		.loc 1 425 0
 262 0006 2000     		movs	r0, r4
 263 0008 FFF7FEFF 		bl	CapSense_InitializeWidgetBaseline
 264              	.LVL31:
 423:Generated_Source\PSoC4/CapSense_Filter.c ****     {
 265              		.loc 1 423 0
 266 000c 2300     		movs	r3, r4
 267              	.LVL32:
 268              	.L16:
 423:Generated_Source\PSoC4/CapSense_Filter.c ****     {
 269              		.loc 1 423 0 is_stmt 0 discriminator 1
 270 000e 5C1E     		subs	r4, r3, #1
 271              	.LVL33:
 272 0010 002B     		cmp	r3, #0
 273 0012 F8D1     		bne	.L17
 427:Generated_Source\PSoC4/CapSense_Filter.c **** 
 274              		.loc 1 427 0 is_stmt 1
 275              		@ sp needed
 276              	.LVL34:
 277 0014 10BD     		pop	{r4, pc}
 278              		.cfi_endproc
 279              	.LFE6:
 280              		.size	CapSense_InitializeAllBaselines, .-CapSense_InitializeAllBaselines
 281 0016 C046     		.section	.text.CapSense_FtIIR1stOrder,"ax",%progbits
 282              		.align	2
 283              		.global	CapSense_FtIIR1stOrder
 284              		.code	16
 285              		.thumb_func
 286              		.type	CapSense_FtIIR1stOrder, %function
 287              	CapSense_FtIIR1stOrder:
 288              	.LFB11:
 599:Generated_Source\PSoC4/CapSense_Filter.c **** 
 600:Generated_Source\PSoC4/CapSense_Filter.c **** #if ((CapSense_ENABLE == CapSense_RC_FILTER_EN) || \
ARM GAS  C:\Users\mstai\AppData\Local\Temp\cc5JzFax.s 			page 17


 601:Generated_Source\PSoC4/CapSense_Filter.c ****      (0u != (CapSense_CSD_AUTOTUNE & CapSense_CSD_SS_TH_EN)))
 602:Generated_Source\PSoC4/CapSense_Filter.c **** /*******************************************************************************
 603:Generated_Source\PSoC4/CapSense_Filter.c **** * Function Name: CapSense_InitializeAllFilters
 604:Generated_Source\PSoC4/CapSense_Filter.c **** ****************************************************************************//**
 605:Generated_Source\PSoC4/CapSense_Filter.c **** *
 606:Generated_Source\PSoC4/CapSense_Filter.c **** * \brief
 607:Generated_Source\PSoC4/CapSense_Filter.c **** *  Initializes (or re-initializes) the raw count filter history of all the
 608:Generated_Source\PSoC4/CapSense_Filter.c **** *  sensors of all the widgets.
 609:Generated_Source\PSoC4/CapSense_Filter.c **** *
 610:Generated_Source\PSoC4/CapSense_Filter.c **** * \details
 611:Generated_Source\PSoC4/CapSense_Filter.c **** *  Initializes the raw count filter history for all the sensors of all the
 612:Generated_Source\PSoC4/CapSense_Filter.c **** *  widgets. Also, this function can be used to re-initialize baselines.
 613:Generated_Source\PSoC4/CapSense_Filter.c **** *  CapSense_Start() calls this API as part of CapSense
 614:Generated_Source\PSoC4/CapSense_Filter.c **** *  operation initialization.
 615:Generated_Source\PSoC4/CapSense_Filter.c **** *
 616:Generated_Source\PSoC4/CapSense_Filter.c **** *******************************************************************************/
 617:Generated_Source\PSoC4/CapSense_Filter.c **** void CapSense_InitializeAllFilters(void)
 618:Generated_Source\PSoC4/CapSense_Filter.c **** {
 619:Generated_Source\PSoC4/CapSense_Filter.c ****     uint32 widgetId;
 620:Generated_Source\PSoC4/CapSense_Filter.c **** 
 621:Generated_Source\PSoC4/CapSense_Filter.c ****     for(widgetId = CapSense_TOTAL_WIDGETS; widgetId-- > 0u;)
 622:Generated_Source\PSoC4/CapSense_Filter.c ****     {
 623:Generated_Source\PSoC4/CapSense_Filter.c ****         CapSense_InitializeWidgetFilter(widgetId);
 624:Generated_Source\PSoC4/CapSense_Filter.c ****     }
 625:Generated_Source\PSoC4/CapSense_Filter.c **** }
 626:Generated_Source\PSoC4/CapSense_Filter.c **** 
 627:Generated_Source\PSoC4/CapSense_Filter.c **** /*******************************************************************************
 628:Generated_Source\PSoC4/CapSense_Filter.c **** * Function Name: CapSense_InitializeWidgetFilter
 629:Generated_Source\PSoC4/CapSense_Filter.c **** ****************************************************************************//**
 630:Generated_Source\PSoC4/CapSense_Filter.c **** *
 631:Generated_Source\PSoC4/CapSense_Filter.c **** * \brief
 632:Generated_Source\PSoC4/CapSense_Filter.c **** *  Initializes (or re-initializes) the raw count filter history of all the sensors
 633:Generated_Source\PSoC4/CapSense_Filter.c **** *  in a widget specified by the input parameter.
 634:Generated_Source\PSoC4/CapSense_Filter.c **** *
 635:Generated_Source\PSoC4/CapSense_Filter.c **** * \details
 636:Generated_Source\PSoC4/CapSense_Filter.c **** *  Initializes (or re-initializes) the raw count filter history of all the sensors
 637:Generated_Source\PSoC4/CapSense_Filter.c **** *  in a widget specified by the input parameter.
 638:Generated_Source\PSoC4/CapSense_Filter.c **** *
 639:Generated_Source\PSoC4/CapSense_Filter.c **** * \param widgetId
 640:Generated_Source\PSoC4/CapSense_Filter.c **** *  Specifies the ID number of a widget to initialize the filter history of all
 641:Generated_Source\PSoC4/CapSense_Filter.c **** *  the sensors in the widget.
 642:Generated_Source\PSoC4/CapSense_Filter.c **** *  A macro for the widget ID can be found in the
 643:Generated_Source\PSoC4/CapSense_Filter.c **** *  CapSense Configuration header file defined as
 644:Generated_Source\PSoC4/CapSense_Filter.c **** *  CapSense_<WidgetName>_WDGT_ID.
 645:Generated_Source\PSoC4/CapSense_Filter.c **** *
 646:Generated_Source\PSoC4/CapSense_Filter.c **** *******************************************************************************/
 647:Generated_Source\PSoC4/CapSense_Filter.c **** void CapSense_InitializeWidgetFilter(uint32 widgetId)
 648:Generated_Source\PSoC4/CapSense_Filter.c **** {
 649:Generated_Source\PSoC4/CapSense_Filter.c ****     uint32 sensorId;
 650:Generated_Source\PSoC4/CapSense_Filter.c ****     uint32 sensorsNumber;
 651:Generated_Source\PSoC4/CapSense_Filter.c **** 
 652:Generated_Source\PSoC4/CapSense_Filter.c ****     CapSense_FLASH_WD_STRUCT const *ptrWidget;
 653:Generated_Source\PSoC4/CapSense_Filter.c ****     CapSense_RAM_SNS_STRUCT *ptrSensor = NULL;
 654:Generated_Source\PSoC4/CapSense_Filter.c ****     #if (CapSense_ENABLE == CapSense_RC_FILTER_EN)
 655:Generated_Source\PSoC4/CapSense_Filter.c ****         CapSense_PTR_FILTER_VARIANT ptrFilterHistObj;
 656:Generated_Source\PSoC4/CapSense_Filter.c ****     #endif
 657:Generated_Source\PSoC4/CapSense_Filter.c **** 
ARM GAS  C:\Users\mstai\AppData\Local\Temp\cc5JzFax.s 			page 18


 658:Generated_Source\PSoC4/CapSense_Filter.c ****     #if (0u != (CapSense_CSD_AUTOTUNE & CapSense_CSD_SS_TH_EN))
 659:Generated_Source\PSoC4/CapSense_Filter.c ****         CapSense_RAM_WD_BASE_STRUCT *ptrWidgetRam;
 660:Generated_Source\PSoC4/CapSense_Filter.c ****         SMARTSENSE_CSD_NOISE_ENVELOPE_STRUCT *ptrNoiseEnvelope = NULL;
 661:Generated_Source\PSoC4/CapSense_Filter.c ****     #endif /* (0u != (CapSense_CSD_AUTOTUNE & CapSense_CSD_SS_TH_EN)) */
 662:Generated_Source\PSoC4/CapSense_Filter.c **** 
 663:Generated_Source\PSoC4/CapSense_Filter.c ****     ptrWidget = &CapSense_dsFlash.wdgtArray[widgetId];
 664:Generated_Source\PSoC4/CapSense_Filter.c **** 
 665:Generated_Source\PSoC4/CapSense_Filter.c ****     #if (0u != (CapSense_CSD_AUTOTUNE & CapSense_CSD_SS_TH_EN))
 666:Generated_Source\PSoC4/CapSense_Filter.c ****         ptrWidgetRam = ptrWidget->ptr2WdgtRam;
 667:Generated_Source\PSoC4/CapSense_Filter.c ****     #endif /* (0u != (CapSense_CSD_AUTOTUNE & CapSense_CSD_SS_TH_EN)) */
 668:Generated_Source\PSoC4/CapSense_Filter.c **** 
 669:Generated_Source\PSoC4/CapSense_Filter.c ****     /* Find total amount of sensors in specified widget */
 670:Generated_Source\PSoC4/CapSense_Filter.c ****     sensorsNumber = CapSense_GET_SNS_CNT_BY_PTR(ptrWidget);
 671:Generated_Source\PSoC4/CapSense_Filter.c **** 
 672:Generated_Source\PSoC4/CapSense_Filter.c ****     for (sensorId = sensorsNumber; sensorId-- > 0u;)
 673:Generated_Source\PSoC4/CapSense_Filter.c ****     {
 674:Generated_Source\PSoC4/CapSense_Filter.c ****         /* Find pointer to specified sensor object */
 675:Generated_Source\PSoC4/CapSense_Filter.c ****         ptrSensor = ptrWidget->ptr2SnsRam;
 676:Generated_Source\PSoC4/CapSense_Filter.c ****         ptrSensor = &ptrSensor[sensorId];
 677:Generated_Source\PSoC4/CapSense_Filter.c **** 
 678:Generated_Source\PSoC4/CapSense_Filter.c ****         #if (CapSense_ENABLE == CapSense_RC_FILTER_EN)
 679:Generated_Source\PSoC4/CapSense_Filter.c ****             /* Find pointer to to specified filter sensor object */
 680:Generated_Source\PSoC4/CapSense_Filter.c ****             ptrFilterHistObj.ptr = ptrWidget->ptr2FltrHistory;
 681:Generated_Source\PSoC4/CapSense_Filter.c ****         #endif
 682:Generated_Source\PSoC4/CapSense_Filter.c **** 
 683:Generated_Source\PSoC4/CapSense_Filter.c ****         #if (0u != (CapSense_CSD_AUTOTUNE & CapSense_CSD_SS_TH_EN))
 684:Generated_Source\PSoC4/CapSense_Filter.c ****             /* Find pointer to specified noise envelope sensor object */
 685:Generated_Source\PSoC4/CapSense_Filter.c ****             ptrNoiseEnvelope = ptrWidget->ptr2NoiseEnvlp;
 686:Generated_Source\PSoC4/CapSense_Filter.c ****             ptrNoiseEnvelope = &ptrNoiseEnvelope[sensorId];
 687:Generated_Source\PSoC4/CapSense_Filter.c ****         #endif /* (0u != (CapSense_CSD_AUTOTUNE & CapSense_CSD_SS_TH_EN)) */
 688:Generated_Source\PSoC4/CapSense_Filter.c **** 
 689:Generated_Source\PSoC4/CapSense_Filter.c ****         if ((CapSense_WD_TYPE_ENUM)ptrWidget->wdgtType != CapSense_WD_PROXIMITY_E)
 690:Generated_Source\PSoC4/CapSense_Filter.c ****         {
 691:Generated_Source\PSoC4/CapSense_Filter.c ****             #if (0u != CapSense_REGULAR_RC_ALP_FILTER_EN)
 692:Generated_Source\PSoC4/CapSense_Filter.c ****                 ptrFilterHistObj.ptrAlp = &ptrFilterHistObj.ptrAlp[sensorId];
 693:Generated_Source\PSoC4/CapSense_Filter.c ****             #elif (0u != CapSense_REGULAR_RC_FILTER_EN)
 694:Generated_Source\PSoC4/CapSense_Filter.c ****                 ptrFilterHistObj.ptrRegular = &ptrFilterHistObj.ptrRegular[sensorId];
 695:Generated_Source\PSoC4/CapSense_Filter.c ****             #endif
 696:Generated_Source\PSoC4/CapSense_Filter.c ****         }
 697:Generated_Source\PSoC4/CapSense_Filter.c ****         else
 698:Generated_Source\PSoC4/CapSense_Filter.c ****         {
 699:Generated_Source\PSoC4/CapSense_Filter.c ****             #if (0u != CapSense_PROX_RC_ALP_FILTER_EN)
 700:Generated_Source\PSoC4/CapSense_Filter.c ****                 ptrFilterHistObj.ptrAlp = &ptrFilterHistObj.ptrAlp[sensorId];
 701:Generated_Source\PSoC4/CapSense_Filter.c ****             #elif (0u != CapSense_PROX_RC_FILTER_EN)
 702:Generated_Source\PSoC4/CapSense_Filter.c ****                 ptrFilterHistObj.ptrProx = &ptrFilterHistObj.ptrProx[sensorId];
 703:Generated_Source\PSoC4/CapSense_Filter.c ****             #endif /* #if (0u != CapSense_PROX_RC_FILTER_EN) */
 704:Generated_Source\PSoC4/CapSense_Filter.c ****         }
 705:Generated_Source\PSoC4/CapSense_Filter.c **** 
 706:Generated_Source\PSoC4/CapSense_Filter.c ****         #if (CapSense_REGULAR_RC_IIR_FILTER_EN || CapSense_PROX_RC_IIR_FILTER_EN)
 707:Generated_Source\PSoC4/CapSense_Filter.c ****             CapSense_InitializeIIRInternal(ptrFilterHistObj, ptrSensor, (uint32)ptrWidget->wdgtType
 708:Generated_Source\PSoC4/CapSense_Filter.c ****         #endif /* (CapSense_REGULAR_RC_IIR_FILTER_EN || CapSense_PROX_RC_IIR_FILTER_EN) */
 709:Generated_Source\PSoC4/CapSense_Filter.c **** 
 710:Generated_Source\PSoC4/CapSense_Filter.c ****         #if (CapSense_REGULAR_RC_MEDIAN_FILTER_EN || CapSense_PROX_RC_MEDIAN_FILTER_EN)
 711:Generated_Source\PSoC4/CapSense_Filter.c ****             CapSense_InitializeMedianInternal(ptrFilterHistObj, ptrSensor, (uint32)ptrWidget->wdgtT
 712:Generated_Source\PSoC4/CapSense_Filter.c ****         #endif /* (CapSense_REGULAR_RC_MEDIAN_FILTER_EN || CapSense_PROX_RC_MEDIAN_FILTER_EN) */
 713:Generated_Source\PSoC4/CapSense_Filter.c **** 
 714:Generated_Source\PSoC4/CapSense_Filter.c ****         #if (CapSense_REGULAR_RC_AVERAGE_FILTER_EN || CapSense_PROX_RC_AVERAGE_FILTER_EN)
ARM GAS  C:\Users\mstai\AppData\Local\Temp\cc5JzFax.s 			page 19


 715:Generated_Source\PSoC4/CapSense_Filter.c ****             CapSense_InitializeAverageInternal(ptrFilterHistObj, ptrSensor, (uint32)ptrWidget->wdgt
 716:Generated_Source\PSoC4/CapSense_Filter.c ****         #endif /* (CapSense_REGULAR_RC_AVERAGE_FILTER_EN || CapSense_PROX_RC_AVERAGE_FILTER_EN) */
 717:Generated_Source\PSoC4/CapSense_Filter.c **** 
 718:Generated_Source\PSoC4/CapSense_Filter.c ****         #if (CapSense_ALP_FILTER_EN)
 719:Generated_Source\PSoC4/CapSense_Filter.c ****             CapSense_InitializeALPInternal(ptrFilterHistObj, ptrSensor, (uint32)ptrWidget->wdgtType
 720:Generated_Source\PSoC4/CapSense_Filter.c ****         #endif
 721:Generated_Source\PSoC4/CapSense_Filter.c **** 
 722:Generated_Source\PSoC4/CapSense_Filter.c ****         #if (0u != (CapSense_CSD_AUTOTUNE & CapSense_CSD_SS_TH_EN))
 723:Generated_Source\PSoC4/CapSense_Filter.c ****             if (CapSense_SENSE_METHOD_CSD_E ==
 724:Generated_Source\PSoC4/CapSense_Filter.c ****                 CapSense_GET_SENSE_METHOD(&CapSense_dsFlash.wdgtArray[widgetId]))
 725:Generated_Source\PSoC4/CapSense_Filter.c ****             {
 726:Generated_Source\PSoC4/CapSense_Filter.c ****                 SmartSense_InitializeNoiseEnvelope(ptrSensor->raw[0u], ptrWidgetRam->sigPFC, ptrNoi
 727:Generated_Source\PSoC4/CapSense_Filter.c ****             }
 728:Generated_Source\PSoC4/CapSense_Filter.c ****         #endif /* (0u != (CapSense_CSD_AUTOTUNE & CapSense_CSD_SS_TH_EN)) */
 729:Generated_Source\PSoC4/CapSense_Filter.c ****     }
 730:Generated_Source\PSoC4/CapSense_Filter.c **** }
 731:Generated_Source\PSoC4/CapSense_Filter.c **** #endif /* ((CapSense_ENABLE == CapSense_RC_FILTER_EN) || \
 732:Generated_Source\PSoC4/CapSense_Filter.c ****            (0u != (CapSense_CSD_AUTOTUNE & CapSense_CSD_SS_TH_EN))) */
 733:Generated_Source\PSoC4/CapSense_Filter.c **** 
 734:Generated_Source\PSoC4/CapSense_Filter.c **** #if (CapSense_REGULAR_RC_IIR_FILTER_EN || CapSense_PROX_RC_IIR_FILTER_EN)
 735:Generated_Source\PSoC4/CapSense_Filter.c **** /*******************************************************************************
 736:Generated_Source\PSoC4/CapSense_Filter.c **** * Function Name: CapSense_InitializeIIR
 737:Generated_Source\PSoC4/CapSense_Filter.c **** ****************************************************************************//**
 738:Generated_Source\PSoC4/CapSense_Filter.c **** *
 739:Generated_Source\PSoC4/CapSense_Filter.c **** * \brief
 740:Generated_Source\PSoC4/CapSense_Filter.c **** *  Initialize the IIR filter history.
 741:Generated_Source\PSoC4/CapSense_Filter.c **** *
 742:Generated_Source\PSoC4/CapSense_Filter.c **** * \details
 743:Generated_Source\PSoC4/CapSense_Filter.c **** *  Initialize the IIR filter history.
 744:Generated_Source\PSoC4/CapSense_Filter.c **** *
 745:Generated_Source\PSoC4/CapSense_Filter.c **** * \param widgetId
 746:Generated_Source\PSoC4/CapSense_Filter.c **** *  Specifies the ID number of the widget.
 747:Generated_Source\PSoC4/CapSense_Filter.c **** *
 748:Generated_Source\PSoC4/CapSense_Filter.c **** * \param sensorId
 749:Generated_Source\PSoC4/CapSense_Filter.c **** *  Specifies the ID number of the sensor in the widget.
 750:Generated_Source\PSoC4/CapSense_Filter.c **** *
 751:Generated_Source\PSoC4/CapSense_Filter.c **** *******************************************************************************/
 752:Generated_Source\PSoC4/CapSense_Filter.c **** void CapSense_InitializeIIR(uint32 widgetId, uint32 sensorId)
 753:Generated_Source\PSoC4/CapSense_Filter.c **** {
 754:Generated_Source\PSoC4/CapSense_Filter.c ****     CapSense_FLASH_WD_STRUCT const *ptrWidget = &CapSense_dsFlash.wdgtArray[widgetId];
 755:Generated_Source\PSoC4/CapSense_Filter.c ****     CapSense_RAM_SNS_STRUCT *ptrSensor = NULL;
 756:Generated_Source\PSoC4/CapSense_Filter.c ****     CapSense_PTR_FILTER_VARIANT ptrFilterHistObj;
 757:Generated_Source\PSoC4/CapSense_Filter.c **** 
 758:Generated_Source\PSoC4/CapSense_Filter.c ****     /* Find pointer to specified sensor object */
 759:Generated_Source\PSoC4/CapSense_Filter.c ****     ptrSensor = ptrWidget->ptr2SnsRam;
 760:Generated_Source\PSoC4/CapSense_Filter.c ****     ptrSensor = &ptrSensor[sensorId];
 761:Generated_Source\PSoC4/CapSense_Filter.c **** 
 762:Generated_Source\PSoC4/CapSense_Filter.c ****     /* Find pointer to specified filter sensor object */
 763:Generated_Source\PSoC4/CapSense_Filter.c ****     ptrFilterHistObj.ptr = ptrWidget->ptr2FltrHistory;
 764:Generated_Source\PSoC4/CapSense_Filter.c **** 
 765:Generated_Source\PSoC4/CapSense_Filter.c ****     if ((CapSense_WD_TYPE_ENUM)ptrWidget->wdgtType != CapSense_WD_PROXIMITY_E)
 766:Generated_Source\PSoC4/CapSense_Filter.c ****     {
 767:Generated_Source\PSoC4/CapSense_Filter.c ****         #if (CapSense_REGULAR_SENSOR_EN)
 768:Generated_Source\PSoC4/CapSense_Filter.c ****             ptrFilterHistObj.ptrRegular = &ptrFilterHistObj.ptrRegular[sensorId];
 769:Generated_Source\PSoC4/CapSense_Filter.c ****         #endif /* (CapSense_REGULAR_SENSOR_EN) */
 770:Generated_Source\PSoC4/CapSense_Filter.c ****     }
 771:Generated_Source\PSoC4/CapSense_Filter.c ****     else
ARM GAS  C:\Users\mstai\AppData\Local\Temp\cc5JzFax.s 			page 20


 772:Generated_Source\PSoC4/CapSense_Filter.c ****     {
 773:Generated_Source\PSoC4/CapSense_Filter.c ****         #if (CapSense_PROXIMITY_SENSOR_EN)
 774:Generated_Source\PSoC4/CapSense_Filter.c ****             ptrFilterHistObj.ptrProx = &ptrFilterHistObj.ptrProx[sensorId];
 775:Generated_Source\PSoC4/CapSense_Filter.c ****         #endif /* (CapSense_PROXIMITY_SENSOR_EN) */
 776:Generated_Source\PSoC4/CapSense_Filter.c ****     }
 777:Generated_Source\PSoC4/CapSense_Filter.c **** 
 778:Generated_Source\PSoC4/CapSense_Filter.c ****     CapSense_InitializeIIRInternal(ptrFilterHistObj, ptrSensor, (uint32)ptrWidget->wdgtType);
 779:Generated_Source\PSoC4/CapSense_Filter.c **** }
 780:Generated_Source\PSoC4/CapSense_Filter.c **** 
 781:Generated_Source\PSoC4/CapSense_Filter.c **** 
 782:Generated_Source\PSoC4/CapSense_Filter.c **** /*******************************************************************************
 783:Generated_Source\PSoC4/CapSense_Filter.c **** * Function Name: CapSense_RunIIR
 784:Generated_Source\PSoC4/CapSense_Filter.c **** ****************************************************************************//**
 785:Generated_Source\PSoC4/CapSense_Filter.c **** *
 786:Generated_Source\PSoC4/CapSense_Filter.c **** * \brief
 787:Generated_Source\PSoC4/CapSense_Filter.c **** *  Executes the IIR filter algorithm on a sensor indicated by an input
 788:Generated_Source\PSoC4/CapSense_Filter.c **** *  parameter.
 789:Generated_Source\PSoC4/CapSense_Filter.c **** *
 790:Generated_Source\PSoC4/CapSense_Filter.c **** * \details
 791:Generated_Source\PSoC4/CapSense_Filter.c **** *  Executes the IIR filter algorithm on a sensor indicated by an input
 792:Generated_Source\PSoC4/CapSense_Filter.c **** *  parameter.
 793:Generated_Source\PSoC4/CapSense_Filter.c **** *
 794:Generated_Source\PSoC4/CapSense_Filter.c **** * \param widgetId
 795:Generated_Source\PSoC4/CapSense_Filter.c **** *  Specifies the ID number of the widget.
 796:Generated_Source\PSoC4/CapSense_Filter.c **** *
 797:Generated_Source\PSoC4/CapSense_Filter.c **** * \param sensorId
 798:Generated_Source\PSoC4/CapSense_Filter.c **** *  Specifies the ID number of the sensor in the widget.
 799:Generated_Source\PSoC4/CapSense_Filter.c **** *
 800:Generated_Source\PSoC4/CapSense_Filter.c **** *******************************************************************************/
 801:Generated_Source\PSoC4/CapSense_Filter.c **** void CapSense_RunIIR(uint32 widgetId, uint32 sensorId)
 802:Generated_Source\PSoC4/CapSense_Filter.c **** {
 803:Generated_Source\PSoC4/CapSense_Filter.c ****     CapSense_FLASH_WD_STRUCT const *ptrWidget = &CapSense_dsFlash.wdgtArray[widgetId];
 804:Generated_Source\PSoC4/CapSense_Filter.c ****     CapSense_RAM_SNS_STRUCT *ptrSensor = NULL;
 805:Generated_Source\PSoC4/CapSense_Filter.c ****     CapSense_PTR_FILTER_VARIANT ptrFilterHistObj;
 806:Generated_Source\PSoC4/CapSense_Filter.c **** 
 807:Generated_Source\PSoC4/CapSense_Filter.c ****     /* Find pointer to specified sensor object */
 808:Generated_Source\PSoC4/CapSense_Filter.c ****     ptrSensor = ptrWidget->ptr2SnsRam;
 809:Generated_Source\PSoC4/CapSense_Filter.c ****     ptrSensor = &ptrSensor[sensorId];
 810:Generated_Source\PSoC4/CapSense_Filter.c **** 
 811:Generated_Source\PSoC4/CapSense_Filter.c ****     /* Find pointer to specified filter sensor object */
 812:Generated_Source\PSoC4/CapSense_Filter.c ****     ptrFilterHistObj.ptr = ptrWidget->ptr2FltrHistory;
 813:Generated_Source\PSoC4/CapSense_Filter.c **** 
 814:Generated_Source\PSoC4/CapSense_Filter.c ****     if ((CapSense_WD_TYPE_ENUM)ptrWidget->wdgtType != CapSense_WD_PROXIMITY_E)
 815:Generated_Source\PSoC4/CapSense_Filter.c ****     {
 816:Generated_Source\PSoC4/CapSense_Filter.c ****         #if (CapSense_REGULAR_SENSOR_EN)
 817:Generated_Source\PSoC4/CapSense_Filter.c ****             ptrFilterHistObj.ptrRegular = &ptrFilterHistObj.ptrRegular[sensorId];
 818:Generated_Source\PSoC4/CapSense_Filter.c ****         #endif /* (CapSense_REGULAR_SENSOR_EN) */
 819:Generated_Source\PSoC4/CapSense_Filter.c ****     }
 820:Generated_Source\PSoC4/CapSense_Filter.c ****     else
 821:Generated_Source\PSoC4/CapSense_Filter.c ****     {
 822:Generated_Source\PSoC4/CapSense_Filter.c ****         #if (CapSense_PROXIMITY_SENSOR_EN)
 823:Generated_Source\PSoC4/CapSense_Filter.c ****             ptrFilterHistObj.ptrProx = &ptrFilterHistObj.ptrProx[sensorId];
 824:Generated_Source\PSoC4/CapSense_Filter.c ****         #endif /* (CapSense_PROXIMITY_SENSOR_EN) */
 825:Generated_Source\PSoC4/CapSense_Filter.c ****     }
 826:Generated_Source\PSoC4/CapSense_Filter.c **** 
 827:Generated_Source\PSoC4/CapSense_Filter.c ****     CapSense_RunIIRInternal(ptrFilterHistObj, ptrSensor, (uint32)ptrWidget->wdgtType);
 828:Generated_Source\PSoC4/CapSense_Filter.c **** }
ARM GAS  C:\Users\mstai\AppData\Local\Temp\cc5JzFax.s 			page 21


 829:Generated_Source\PSoC4/CapSense_Filter.c **** 
 830:Generated_Source\PSoC4/CapSense_Filter.c **** /*******************************************************************************
 831:Generated_Source\PSoC4/CapSense_Filter.c **** * Function Name: CapSense_InitializeIIRInternal
 832:Generated_Source\PSoC4/CapSense_Filter.c **** ****************************************************************************//**
 833:Generated_Source\PSoC4/CapSense_Filter.c **** *
 834:Generated_Source\PSoC4/CapSense_Filter.c **** * \brief
 835:Generated_Source\PSoC4/CapSense_Filter.c **** *  Initializes the IIR filter history.
 836:Generated_Source\PSoC4/CapSense_Filter.c **** *
 837:Generated_Source\PSoC4/CapSense_Filter.c **** * \details
 838:Generated_Source\PSoC4/CapSense_Filter.c **** *  Initializes the IIR filter history.
 839:Generated_Source\PSoC4/CapSense_Filter.c **** *
 840:Generated_Source\PSoC4/CapSense_Filter.c **** * \param ptrFilterHistObj
 841:Generated_Source\PSoC4/CapSense_Filter.c **** *  The pointer to the filter RAM object of the sensor.
 842:Generated_Source\PSoC4/CapSense_Filter.c **** *
 843:Generated_Source\PSoC4/CapSense_Filter.c **** * \param ptrSensorObj
 844:Generated_Source\PSoC4/CapSense_Filter.c **** *  The pointer to the sensor RAM object of the sensor.
 845:Generated_Source\PSoC4/CapSense_Filter.c **** *
 846:Generated_Source\PSoC4/CapSense_Filter.c **** * \param wdType
 847:Generated_Source\PSoC4/CapSense_Filter.c **** *  Specifies the type of a widget.
 848:Generated_Source\PSoC4/CapSense_Filter.c **** *
 849:Generated_Source\PSoC4/CapSense_Filter.c **** *******************************************************************************/
 850:Generated_Source\PSoC4/CapSense_Filter.c **** void CapSense_InitializeIIRInternal(CapSense_PTR_FILTER_VARIANT ptrFilterHistObj,
 851:Generated_Source\PSoC4/CapSense_Filter.c ****                                             CapSense_RAM_SNS_STRUCT *ptrSensorObj, uint32 wdType)
 852:Generated_Source\PSoC4/CapSense_Filter.c **** {
 853:Generated_Source\PSoC4/CapSense_Filter.c ****     uint32 freqChannel;
 854:Generated_Source\PSoC4/CapSense_Filter.c **** 
 855:Generated_Source\PSoC4/CapSense_Filter.c ****     for(freqChannel = CapSense_NUM_SCAN_FREQS; freqChannel-- > 0u;)
 856:Generated_Source\PSoC4/CapSense_Filter.c ****     {
 857:Generated_Source\PSoC4/CapSense_Filter.c ****         if ((CapSense_WD_TYPE_ENUM)wdType != CapSense_WD_PROXIMITY_E)
 858:Generated_Source\PSoC4/CapSense_Filter.c ****         {
 859:Generated_Source\PSoC4/CapSense_Filter.c ****             #if (CapSense_REGULAR_SENSOR_EN && CapSense_REGULAR_RC_IIR_FILTER_EN)
 860:Generated_Source\PSoC4/CapSense_Filter.c ****                 #if (CapSense_REGULAR_IIR_RC_TYPE == CapSense_IIR_FILTER_PERFORMANCE)
 861:Generated_Source\PSoC4/CapSense_Filter.c ****                     ptrFilterHistObj.ptrRegular->regularChannel[freqChannel].iirHistory = ptrSensor
 862:Generated_Source\PSoC4/CapSense_Filter.c ****                     ptrFilterHistObj.ptrRegular->regularChannel[freqChannel].iirHistoryLow = 0u;
 863:Generated_Source\PSoC4/CapSense_Filter.c ****                 #else
 864:Generated_Source\PSoC4/CapSense_Filter.c ****                     ptrFilterHistObj.ptrRegular->regularChannel[freqChannel].iirHistory = ptrSensor
 865:Generated_Source\PSoC4/CapSense_Filter.c ****                 #endif /* (CapSense_REGULAR_IIR_RC_TYPE == CapSense_IIR_FILTER_PERFORMANCE) */
 866:Generated_Source\PSoC4/CapSense_Filter.c ****             #endif /* (CapSense_REGULAR_SENSOR_EN) */
 867:Generated_Source\PSoC4/CapSense_Filter.c ****         }
 868:Generated_Source\PSoC4/CapSense_Filter.c ****         else
 869:Generated_Source\PSoC4/CapSense_Filter.c ****         {
 870:Generated_Source\PSoC4/CapSense_Filter.c ****             #if (CapSense_PROXIMITY_SENSOR_EN && CapSense_PROX_RC_IIR_FILTER_EN)
 871:Generated_Source\PSoC4/CapSense_Filter.c ****                 #if (CapSense_PROX_IIR_RC_TYPE == CapSense_IIR_FILTER_PERFORMANCE)
 872:Generated_Source\PSoC4/CapSense_Filter.c ****                     ptrFilterHistObj.ptrProx->proxChannel[freqChannel].iirHistory = ptrSensorObj->r
 873:Generated_Source\PSoC4/CapSense_Filter.c ****                     ptrFilterHistObj.ptrProx->proxChannel[freqChannel].iirHistoryLow = 0u;
 874:Generated_Source\PSoC4/CapSense_Filter.c ****                 #else
 875:Generated_Source\PSoC4/CapSense_Filter.c ****                     ptrFilterHistObj.ptrProx->proxChannel[freqChannel].iirHistory = ptrSensorObj->r
 876:Generated_Source\PSoC4/CapSense_Filter.c ****                 #endif /* (CapSense_PROX_IIR_RC_TYPE == CapSense_IIR_FILTER_PERFORMANCE) */
 877:Generated_Source\PSoC4/CapSense_Filter.c ****             #endif /* (CapSense_PROX_SENSOR_EN) */
 878:Generated_Source\PSoC4/CapSense_Filter.c ****         }
 879:Generated_Source\PSoC4/CapSense_Filter.c ****     }
 880:Generated_Source\PSoC4/CapSense_Filter.c **** }
 881:Generated_Source\PSoC4/CapSense_Filter.c **** 
 882:Generated_Source\PSoC4/CapSense_Filter.c **** 
 883:Generated_Source\PSoC4/CapSense_Filter.c **** /*******************************************************************************
 884:Generated_Source\PSoC4/CapSense_Filter.c **** * Function Name: CapSense_RunIIRInternal
 885:Generated_Source\PSoC4/CapSense_Filter.c **** ****************************************************************************//**
ARM GAS  C:\Users\mstai\AppData\Local\Temp\cc5JzFax.s 			page 22


 886:Generated_Source\PSoC4/CapSense_Filter.c **** *
 887:Generated_Source\PSoC4/CapSense_Filter.c **** * \brief
 888:Generated_Source\PSoC4/CapSense_Filter.c **** *  Run the IIR filter.
 889:Generated_Source\PSoC4/CapSense_Filter.c **** *
 890:Generated_Source\PSoC4/CapSense_Filter.c **** * \details
 891:Generated_Source\PSoC4/CapSense_Filter.c **** *  Run the IIR filter.
 892:Generated_Source\PSoC4/CapSense_Filter.c **** *
 893:Generated_Source\PSoC4/CapSense_Filter.c **** * \param ptrFilterHistObj
 894:Generated_Source\PSoC4/CapSense_Filter.c **** *  The pointer to the filter RAM object of the sensor.
 895:Generated_Source\PSoC4/CapSense_Filter.c **** *
 896:Generated_Source\PSoC4/CapSense_Filter.c **** * \param ptrSensorObj
 897:Generated_Source\PSoC4/CapSense_Filter.c **** *  The pointer to the sensor RAM object of the sensor.
 898:Generated_Source\PSoC4/CapSense_Filter.c **** *
 899:Generated_Source\PSoC4/CapSense_Filter.c **** * \param wdType
 900:Generated_Source\PSoC4/CapSense_Filter.c **** *  Specifies the type of a widget.
 901:Generated_Source\PSoC4/CapSense_Filter.c **** *
 902:Generated_Source\PSoC4/CapSense_Filter.c **** *******************************************************************************/
 903:Generated_Source\PSoC4/CapSense_Filter.c **** void CapSense_RunIIRInternal(CapSense_PTR_FILTER_VARIANT ptrFilterHistObj,
 904:Generated_Source\PSoC4/CapSense_Filter.c ****                                      CapSense_RAM_SNS_STRUCT *ptrSensorObj, uint32 wdType)
 905:Generated_Source\PSoC4/CapSense_Filter.c **** {
 906:Generated_Source\PSoC4/CapSense_Filter.c ****     uint32 freqChannel;
 907:Generated_Source\PSoC4/CapSense_Filter.c ****     uint32 temp;
 908:Generated_Source\PSoC4/CapSense_Filter.c **** 
 909:Generated_Source\PSoC4/CapSense_Filter.c ****     for(freqChannel = CapSense_NUM_SCAN_FREQS; freqChannel-- > 0u;)
 910:Generated_Source\PSoC4/CapSense_Filter.c ****     {
 911:Generated_Source\PSoC4/CapSense_Filter.c ****         if ((CapSense_WD_TYPE_ENUM)wdType != CapSense_WD_PROXIMITY_E)
 912:Generated_Source\PSoC4/CapSense_Filter.c ****         {
 913:Generated_Source\PSoC4/CapSense_Filter.c ****             #if (CapSense_REGULAR_SENSOR_EN && CapSense_REGULAR_RC_IIR_FILTER_EN)
 914:Generated_Source\PSoC4/CapSense_Filter.c ****                 #if (CapSense_REGULAR_IIR_RC_TYPE == CapSense_IIR_FILTER_PERFORMANCE)
 915:Generated_Source\PSoC4/CapSense_Filter.c ****                     temp = ((uint32)ptrFilterHistObj.ptrRegular->regularChannel[freqChannel].iirHis
 916:Generated_Source\PSoC4/CapSense_Filter.c ****                     temp |= ptrFilterHistObj.ptrRegular->regularChannel[freqChannel].iirHistoryLow;
 917:Generated_Source\PSoC4/CapSense_Filter.c ****                     temp = CapSense_FtIIR1stOrder((uint32)ptrSensorObj->raw[freqChannel],
 918:Generated_Source\PSoC4/CapSense_Filter.c ****                                                         temp,
 919:Generated_Source\PSoC4/CapSense_Filter.c ****                                                         CapSense_REGULAR_IIR_RC_N,
 920:Generated_Source\PSoC4/CapSense_Filter.c ****                                                         CapSense_REGULAR_IIR_RC_SHIFT);
 921:Generated_Source\PSoC4/CapSense_Filter.c ****                     ptrFilterHistObj.ptrRegular->regularChannel[freqChannel].iirHistory = LO16(temp
 922:Generated_Source\PSoC4/CapSense_Filter.c ****                     ptrFilterHistObj.ptrRegular->regularChannel[freqChannel].iirHistoryLow = LO8(te
 923:Generated_Source\PSoC4/CapSense_Filter.c ****                     ptrSensorObj->raw[freqChannel] = LO16(temp >>CapSense_REGULAR_IIR_RC_SHIFT);
 924:Generated_Source\PSoC4/CapSense_Filter.c ****                 #else
 925:Generated_Source\PSoC4/CapSense_Filter.c ****                     temp =CapSense_FtIIR1stOrder((uint32)ptrSensorObj->raw[freqChannel],
 926:Generated_Source\PSoC4/CapSense_Filter.c ****                                                         (uint32)ptrFilterHistObj.ptrRegular->regula
 927:Generated_Source\PSoC4/CapSense_Filter.c ****                                                         CapSense_REGULAR_IIR_RC_N,
 928:Generated_Source\PSoC4/CapSense_Filter.c ****                                                         CapSense_REGULAR_IIR_RC_SHIFT);
 929:Generated_Source\PSoC4/CapSense_Filter.c ****                     ptrFilterHistObj.ptrRegular->regularChannel[freqChannel].iirHistory = LO16(temp
 930:Generated_Source\PSoC4/CapSense_Filter.c ****                     ptrSensorObj->raw[freqChannel] = LO16(temp >>CapSense_REGULAR_IIR_RC_SHIFT);
 931:Generated_Source\PSoC4/CapSense_Filter.c ****                 #endif /* (CapSense_REGULAR_IIR_RC_TYPE == CapSense_IIR_FILTER_PERFORMANCE) */
 932:Generated_Source\PSoC4/CapSense_Filter.c ****             #endif /* (CapSense_REGULAR_SENSOR_EN) */
 933:Generated_Source\PSoC4/CapSense_Filter.c ****         }
 934:Generated_Source\PSoC4/CapSense_Filter.c ****         else
 935:Generated_Source\PSoC4/CapSense_Filter.c ****         {
 936:Generated_Source\PSoC4/CapSense_Filter.c ****             #if (CapSense_PROXIMITY_SENSOR_EN && CapSense_PROX_RC_IIR_FILTER_EN)
 937:Generated_Source\PSoC4/CapSense_Filter.c ****                 #if (CapSense_PROX_IIR_RC_TYPE == CapSense_IIR_FILTER_PERFORMANCE)
 938:Generated_Source\PSoC4/CapSense_Filter.c ****                     temp =  ptrFilterHistObj.ptrProx->proxChannel[freqChannel].iirHistory << CapSen
 939:Generated_Source\PSoC4/CapSense_Filter.c ****                     temp |= ptrFilterHistObj.ptrProx->proxChannel[freqChannel].iirHistoryLow;
 940:Generated_Source\PSoC4/CapSense_Filter.c ****                     temp =CapSense_FtIIR1stOrder((uint32)ptrSensorObj->raw[freqChannel],
 941:Generated_Source\PSoC4/CapSense_Filter.c ****                                                         temp,
 942:Generated_Source\PSoC4/CapSense_Filter.c ****                                                         CapSense_PROX_IIR_RC_N,
ARM GAS  C:\Users\mstai\AppData\Local\Temp\cc5JzFax.s 			page 23


 943:Generated_Source\PSoC4/CapSense_Filter.c ****                                                         CapSense_PROX_IIR_RC_SHIFT);
 944:Generated_Source\PSoC4/CapSense_Filter.c ****                     ptrFilterHistObj.ptrProx->proxChannel[freqChannel].iirHistory = LO16(temp >>Cap
 945:Generated_Source\PSoC4/CapSense_Filter.c ****                     ptrFilterHistObj.ptrProx->proxChannel[freqChannel].iirHistoryLow = LO8(temp);
 946:Generated_Source\PSoC4/CapSense_Filter.c ****                     ptrSensorObj->raw[freqChannel] = LO16(temp >>CapSense_PROX_IIR_RC_SHIFT);
 947:Generated_Source\PSoC4/CapSense_Filter.c ****                 #else
 948:Generated_Source\PSoC4/CapSense_Filter.c ****                     temp =CapSense_FtIIR1stOrder((uint32)ptrSensorObj->raw[freqChannel],
 949:Generated_Source\PSoC4/CapSense_Filter.c ****                                                         (uint32)ptrFilterHistObj.ptrProx->proxChann
 950:Generated_Source\PSoC4/CapSense_Filter.c ****                                                         CapSense_PROX_IIR_RC_N,
 951:Generated_Source\PSoC4/CapSense_Filter.c ****                                                         CapSense_PROX_IIR_RC_SHIFT);
 952:Generated_Source\PSoC4/CapSense_Filter.c ****                     ptrFilterHistObj.ptrProx->proxChannel[freqChannel].iirHistory = LO16(temp);
 953:Generated_Source\PSoC4/CapSense_Filter.c ****                     ptrSensorObj->raw[freqChannel] = LO16(temp >>CapSense_PROX_IIR_RC_SHIFT);
 954:Generated_Source\PSoC4/CapSense_Filter.c ****                 #endif /* (CapSense_PROX_IIR_RC_TYPE == CapSense_IIR_FILTER_PERFORMANCE) */
 955:Generated_Source\PSoC4/CapSense_Filter.c ****             #endif /* (CapSense_PROX_SENSOR_EN) */
 956:Generated_Source\PSoC4/CapSense_Filter.c ****         }
 957:Generated_Source\PSoC4/CapSense_Filter.c ****     }
 958:Generated_Source\PSoC4/CapSense_Filter.c **** }
 959:Generated_Source\PSoC4/CapSense_Filter.c **** #endif /* #if (CapSense_REGULAR_RC_IIR_FILTER_EN || CapSense_PROX_RC_IIR_FILTER_EN) */
 960:Generated_Source\PSoC4/CapSense_Filter.c **** 
 961:Generated_Source\PSoC4/CapSense_Filter.c **** 
 962:Generated_Source\PSoC4/CapSense_Filter.c **** #if (CapSense_REGULAR_RC_MEDIAN_FILTER_EN || CapSense_PROX_RC_MEDIAN_FILTER_EN)
 963:Generated_Source\PSoC4/CapSense_Filter.c **** 
 964:Generated_Source\PSoC4/CapSense_Filter.c **** /*******************************************************************************
 965:Generated_Source\PSoC4/CapSense_Filter.c **** * Function Name: CapSense_InitializeMedian
 966:Generated_Source\PSoC4/CapSense_Filter.c **** ****************************************************************************//**
 967:Generated_Source\PSoC4/CapSense_Filter.c **** *
 968:Generated_Source\PSoC4/CapSense_Filter.c **** * \brief
 969:Generated_Source\PSoC4/CapSense_Filter.c **** *  Initializes the Median filter history.
 970:Generated_Source\PSoC4/CapSense_Filter.c **** *
 971:Generated_Source\PSoC4/CapSense_Filter.c **** * \details
 972:Generated_Source\PSoC4/CapSense_Filter.c **** *  Initializes the Median filter history.
 973:Generated_Source\PSoC4/CapSense_Filter.c **** *
 974:Generated_Source\PSoC4/CapSense_Filter.c **** * \param widgetId
 975:Generated_Source\PSoC4/CapSense_Filter.c **** *  Specifies the ID number of the widget.
 976:Generated_Source\PSoC4/CapSense_Filter.c **** *
 977:Generated_Source\PSoC4/CapSense_Filter.c **** * \param sensorId
 978:Generated_Source\PSoC4/CapSense_Filter.c **** *  Specifies the ID number of the sensor in the widget.
 979:Generated_Source\PSoC4/CapSense_Filter.c **** *
 980:Generated_Source\PSoC4/CapSense_Filter.c **** *******************************************************************************/
 981:Generated_Source\PSoC4/CapSense_Filter.c **** void CapSense_InitializeMedian(uint32 widgetId, uint32 sensorId)
 982:Generated_Source\PSoC4/CapSense_Filter.c **** {
 983:Generated_Source\PSoC4/CapSense_Filter.c ****     CapSense_FLASH_WD_STRUCT const *ptrWidget = &CapSense_dsFlash.wdgtArray[widgetId];
 984:Generated_Source\PSoC4/CapSense_Filter.c ****     CapSense_RAM_SNS_STRUCT *ptrSensor = NULL;
 985:Generated_Source\PSoC4/CapSense_Filter.c ****     CapSense_PTR_FILTER_VARIANT ptrFilterHistObj;
 986:Generated_Source\PSoC4/CapSense_Filter.c **** 
 987:Generated_Source\PSoC4/CapSense_Filter.c ****     /* Find pointer to specified sensor object */
 988:Generated_Source\PSoC4/CapSense_Filter.c ****     ptrSensor = ptrWidget->ptr2SnsRam;
 989:Generated_Source\PSoC4/CapSense_Filter.c ****     ptrSensor = &ptrSensor[sensorId];
 990:Generated_Source\PSoC4/CapSense_Filter.c **** 
 991:Generated_Source\PSoC4/CapSense_Filter.c ****     /* Find pointer to specified filter sensor object */
 992:Generated_Source\PSoC4/CapSense_Filter.c ****     ptrFilterHistObj.ptr = ptrWidget->ptr2FltrHistory;
 993:Generated_Source\PSoC4/CapSense_Filter.c **** 
 994:Generated_Source\PSoC4/CapSense_Filter.c ****     if ((CapSense_WD_TYPE_ENUM)ptrWidget->wdgtType != CapSense_WD_PROXIMITY_E)
 995:Generated_Source\PSoC4/CapSense_Filter.c ****     {
 996:Generated_Source\PSoC4/CapSense_Filter.c ****         #if (CapSense_REGULAR_SENSOR_EN)
 997:Generated_Source\PSoC4/CapSense_Filter.c ****             ptrFilterHistObj.ptrRegular = &ptrFilterHistObj.ptrRegular[sensorId];
 998:Generated_Source\PSoC4/CapSense_Filter.c ****         #endif /* (CapSense_REGULAR_SENSOR_EN) */
 999:Generated_Source\PSoC4/CapSense_Filter.c ****     }
ARM GAS  C:\Users\mstai\AppData\Local\Temp\cc5JzFax.s 			page 24


1000:Generated_Source\PSoC4/CapSense_Filter.c ****     else
1001:Generated_Source\PSoC4/CapSense_Filter.c ****     {
1002:Generated_Source\PSoC4/CapSense_Filter.c ****         #if (CapSense_PROXIMITY_SENSOR_EN)
1003:Generated_Source\PSoC4/CapSense_Filter.c ****             ptrFilterHistObj.ptrProx = &ptrFilterHistObj.ptrProx[sensorId];
1004:Generated_Source\PSoC4/CapSense_Filter.c ****         #endif /* (CapSense_PROXIMITY_SENSOR_EN) */
1005:Generated_Source\PSoC4/CapSense_Filter.c ****     }
1006:Generated_Source\PSoC4/CapSense_Filter.c **** 
1007:Generated_Source\PSoC4/CapSense_Filter.c ****     CapSense_InitializeMedianInternal(ptrFilterHistObj, ptrSensor, (uint32)ptrWidget->wdgtType);
1008:Generated_Source\PSoC4/CapSense_Filter.c **** }
1009:Generated_Source\PSoC4/CapSense_Filter.c **** 
1010:Generated_Source\PSoC4/CapSense_Filter.c **** 
1011:Generated_Source\PSoC4/CapSense_Filter.c **** /*******************************************************************************
1012:Generated_Source\PSoC4/CapSense_Filter.c **** * Function Name: CapSense_RunMedian
1013:Generated_Source\PSoC4/CapSense_Filter.c **** ****************************************************************************//**
1014:Generated_Source\PSoC4/CapSense_Filter.c **** *
1015:Generated_Source\PSoC4/CapSense_Filter.c **** * \brief
1016:Generated_Source\PSoC4/CapSense_Filter.c **** *  Executes the Median filter algorithm on a sensor indicated by an input
1017:Generated_Source\PSoC4/CapSense_Filter.c **** *  parameter.
1018:Generated_Source\PSoC4/CapSense_Filter.c **** *
1019:Generated_Source\PSoC4/CapSense_Filter.c **** * \details
1020:Generated_Source\PSoC4/CapSense_Filter.c **** *  Executes the Median filter algorithm on a sensor indicated by an input
1021:Generated_Source\PSoC4/CapSense_Filter.c **** *  parameter.
1022:Generated_Source\PSoC4/CapSense_Filter.c **** *
1023:Generated_Source\PSoC4/CapSense_Filter.c **** * \param widgetId
1024:Generated_Source\PSoC4/CapSense_Filter.c **** *  Specifies the ID number of the widget.
1025:Generated_Source\PSoC4/CapSense_Filter.c **** *
1026:Generated_Source\PSoC4/CapSense_Filter.c **** * \param sensorId
1027:Generated_Source\PSoC4/CapSense_Filter.c **** *  Specifies the ID number of the sensor in the widget.
1028:Generated_Source\PSoC4/CapSense_Filter.c **** *
1029:Generated_Source\PSoC4/CapSense_Filter.c **** *******************************************************************************/
1030:Generated_Source\PSoC4/CapSense_Filter.c **** void CapSense_RunMedian(uint32 widgetId, uint32 sensorId)
1031:Generated_Source\PSoC4/CapSense_Filter.c **** {
1032:Generated_Source\PSoC4/CapSense_Filter.c ****     CapSense_FLASH_WD_STRUCT const *ptrWidget = &CapSense_dsFlash.wdgtArray[widgetId];
1033:Generated_Source\PSoC4/CapSense_Filter.c ****     CapSense_RAM_SNS_STRUCT *ptrSensor = NULL;
1034:Generated_Source\PSoC4/CapSense_Filter.c ****     CapSense_PTR_FILTER_VARIANT ptrFilterHistObj;
1035:Generated_Source\PSoC4/CapSense_Filter.c **** 
1036:Generated_Source\PSoC4/CapSense_Filter.c ****     /* Find pointer to specified sensor object */
1037:Generated_Source\PSoC4/CapSense_Filter.c ****     ptrSensor = ptrWidget->ptr2SnsRam;
1038:Generated_Source\PSoC4/CapSense_Filter.c ****     ptrSensor = &ptrSensor[sensorId];
1039:Generated_Source\PSoC4/CapSense_Filter.c **** 
1040:Generated_Source\PSoC4/CapSense_Filter.c ****     /* Find pointer to specified filter sensor object */
1041:Generated_Source\PSoC4/CapSense_Filter.c ****     ptrFilterHistObj.ptr = ptrWidget->ptr2FltrHistory;
1042:Generated_Source\PSoC4/CapSense_Filter.c **** 
1043:Generated_Source\PSoC4/CapSense_Filter.c ****     if ((CapSense_WD_TYPE_ENUM)ptrWidget->wdgtType != CapSense_WD_PROXIMITY_E)
1044:Generated_Source\PSoC4/CapSense_Filter.c ****     {
1045:Generated_Source\PSoC4/CapSense_Filter.c ****         #if (CapSense_REGULAR_SENSOR_EN)
1046:Generated_Source\PSoC4/CapSense_Filter.c ****             ptrFilterHistObj.ptrRegular = &ptrFilterHistObj.ptrRegular[sensorId];
1047:Generated_Source\PSoC4/CapSense_Filter.c ****         #endif /* (CapSense_REGULAR_SENSOR_EN) */
1048:Generated_Source\PSoC4/CapSense_Filter.c ****     }
1049:Generated_Source\PSoC4/CapSense_Filter.c ****     else
1050:Generated_Source\PSoC4/CapSense_Filter.c ****     {
1051:Generated_Source\PSoC4/CapSense_Filter.c ****         #if (CapSense_PROXIMITY_SENSOR_EN)
1052:Generated_Source\PSoC4/CapSense_Filter.c ****             ptrFilterHistObj.ptrProx = &ptrFilterHistObj.ptrProx[sensorId];
1053:Generated_Source\PSoC4/CapSense_Filter.c ****         #endif /* (CapSense_PROXIMITY_SENSOR_EN) */
1054:Generated_Source\PSoC4/CapSense_Filter.c ****     }
1055:Generated_Source\PSoC4/CapSense_Filter.c **** 
1056:Generated_Source\PSoC4/CapSense_Filter.c ****     CapSense_RunMedianInternal(ptrFilterHistObj, ptrSensor, (uint32)ptrWidget->wdgtType);
ARM GAS  C:\Users\mstai\AppData\Local\Temp\cc5JzFax.s 			page 25


1057:Generated_Source\PSoC4/CapSense_Filter.c **** }
1058:Generated_Source\PSoC4/CapSense_Filter.c **** 
1059:Generated_Source\PSoC4/CapSense_Filter.c **** 
1060:Generated_Source\PSoC4/CapSense_Filter.c **** /*******************************************************************************
1061:Generated_Source\PSoC4/CapSense_Filter.c **** * Function Name: CapSense_InitializeMedianInternal
1062:Generated_Source\PSoC4/CapSense_Filter.c **** ****************************************************************************//**
1063:Generated_Source\PSoC4/CapSense_Filter.c **** *
1064:Generated_Source\PSoC4/CapSense_Filter.c **** * \brief
1065:Generated_Source\PSoC4/CapSense_Filter.c **** *  Initializes the Median filter.
1066:Generated_Source\PSoC4/CapSense_Filter.c **** *
1067:Generated_Source\PSoC4/CapSense_Filter.c **** * \details
1068:Generated_Source\PSoC4/CapSense_Filter.c **** *  Initializes the Median filter.
1069:Generated_Source\PSoC4/CapSense_Filter.c **** *
1070:Generated_Source\PSoC4/CapSense_Filter.c **** * \param ptrFilterHistObj
1071:Generated_Source\PSoC4/CapSense_Filter.c **** *  The pointer to the filter RAM object of the sensor.
1072:Generated_Source\PSoC4/CapSense_Filter.c **** *
1073:Generated_Source\PSoC4/CapSense_Filter.c **** * \param ptrSensorObj
1074:Generated_Source\PSoC4/CapSense_Filter.c **** *  The pointer to the sensor RAM object of the sensor.
1075:Generated_Source\PSoC4/CapSense_Filter.c **** *
1076:Generated_Source\PSoC4/CapSense_Filter.c **** * \param wdType
1077:Generated_Source\PSoC4/CapSense_Filter.c **** *  Specifies the type of a widget.
1078:Generated_Source\PSoC4/CapSense_Filter.c **** *
1079:Generated_Source\PSoC4/CapSense_Filter.c **** *******************************************************************************/
1080:Generated_Source\PSoC4/CapSense_Filter.c **** void CapSense_InitializeMedianInternal(CapSense_PTR_FILTER_VARIANT ptrFilterHistObj,
1081:Generated_Source\PSoC4/CapSense_Filter.c ****                                                CapSense_RAM_SNS_STRUCT *ptrSensorObj, uint32 wdType
1082:Generated_Source\PSoC4/CapSense_Filter.c **** {
1083:Generated_Source\PSoC4/CapSense_Filter.c ****     uint32 freqChannel;
1084:Generated_Source\PSoC4/CapSense_Filter.c **** 
1085:Generated_Source\PSoC4/CapSense_Filter.c ****     for(freqChannel = CapSense_NUM_SCAN_FREQS; freqChannel-- > 0u;)
1086:Generated_Source\PSoC4/CapSense_Filter.c ****     {
1087:Generated_Source\PSoC4/CapSense_Filter.c ****         if ((CapSense_WD_TYPE_ENUM)wdType != CapSense_WD_PROXIMITY_E)
1088:Generated_Source\PSoC4/CapSense_Filter.c ****         {
1089:Generated_Source\PSoC4/CapSense_Filter.c ****             #if (CapSense_REGULAR_SENSOR_EN && CapSense_REGULAR_RC_MEDIAN_FILTER_EN)
1090:Generated_Source\PSoC4/CapSense_Filter.c ****                 ptrFilterHistObj.ptrRegular->regularChannel[freqChannel].medHistory[0u] = ptrSensor
1091:Generated_Source\PSoC4/CapSense_Filter.c ****                 ptrFilterHistObj.ptrRegular->regularChannel[freqChannel].medHistory[1u] = ptrSensor
1092:Generated_Source\PSoC4/CapSense_Filter.c ****             #endif /* (CapSense_REGULAR_SENSOR_EN) */
1093:Generated_Source\PSoC4/CapSense_Filter.c ****         }
1094:Generated_Source\PSoC4/CapSense_Filter.c ****         else
1095:Generated_Source\PSoC4/CapSense_Filter.c ****         {
1096:Generated_Source\PSoC4/CapSense_Filter.c ****             #if (CapSense_PROXIMITY_SENSOR_EN && CapSense_PROX_RC_MEDIAN_FILTER_EN)
1097:Generated_Source\PSoC4/CapSense_Filter.c ****                 ptrFilterHistObj.ptrProx->proxChannel[freqChannel].medHistory[0u] = ptrSensorObj->r
1098:Generated_Source\PSoC4/CapSense_Filter.c ****                 ptrFilterHistObj.ptrProx->proxChannel[freqChannel].medHistory[1u] = ptrSensorObj->r
1099:Generated_Source\PSoC4/CapSense_Filter.c ****             #endif /* (CapSense_PROXIMITY_SENSOR_EN) */
1100:Generated_Source\PSoC4/CapSense_Filter.c ****         }
1101:Generated_Source\PSoC4/CapSense_Filter.c ****     }
1102:Generated_Source\PSoC4/CapSense_Filter.c **** }
1103:Generated_Source\PSoC4/CapSense_Filter.c **** 
1104:Generated_Source\PSoC4/CapSense_Filter.c **** 
1105:Generated_Source\PSoC4/CapSense_Filter.c **** /*******************************************************************************
1106:Generated_Source\PSoC4/CapSense_Filter.c **** * Function Name: CapSense_RunMedianInternal
1107:Generated_Source\PSoC4/CapSense_Filter.c **** ****************************************************************************//**
1108:Generated_Source\PSoC4/CapSense_Filter.c **** *
1109:Generated_Source\PSoC4/CapSense_Filter.c **** * \brief
1110:Generated_Source\PSoC4/CapSense_Filter.c **** *  Runs the Median filter.
1111:Generated_Source\PSoC4/CapSense_Filter.c **** *
1112:Generated_Source\PSoC4/CapSense_Filter.c **** * \details
1113:Generated_Source\PSoC4/CapSense_Filter.c **** *  Runs the Median filter.
ARM GAS  C:\Users\mstai\AppData\Local\Temp\cc5JzFax.s 			page 26


1114:Generated_Source\PSoC4/CapSense_Filter.c **** *
1115:Generated_Source\PSoC4/CapSense_Filter.c **** * \param ptrFilterHistObj
1116:Generated_Source\PSoC4/CapSense_Filter.c **** *  The pointer to the filter RAM object of the sensor.
1117:Generated_Source\PSoC4/CapSense_Filter.c **** *
1118:Generated_Source\PSoC4/CapSense_Filter.c **** * \param ptrSensorObj
1119:Generated_Source\PSoC4/CapSense_Filter.c **** *  The pointer to the sensor RAM object of the sensor.
1120:Generated_Source\PSoC4/CapSense_Filter.c **** *
1121:Generated_Source\PSoC4/CapSense_Filter.c **** * \param wdType
1122:Generated_Source\PSoC4/CapSense_Filter.c **** *  Specifies the type of a widget.
1123:Generated_Source\PSoC4/CapSense_Filter.c **** *
1124:Generated_Source\PSoC4/CapSense_Filter.c **** *******************************************************************************/
1125:Generated_Source\PSoC4/CapSense_Filter.c **** void CapSense_RunMedianInternal(CapSense_PTR_FILTER_VARIANT ptrFilterHistObj,
1126:Generated_Source\PSoC4/CapSense_Filter.c ****                                         CapSense_RAM_SNS_STRUCT *ptrSensorObj, uint32 wdType)
1127:Generated_Source\PSoC4/CapSense_Filter.c **** {
1128:Generated_Source\PSoC4/CapSense_Filter.c ****     uint32 freqChannel;
1129:Generated_Source\PSoC4/CapSense_Filter.c **** 
1130:Generated_Source\PSoC4/CapSense_Filter.c ****     #if ((CapSense_REGULAR_SENSOR_EN && CapSense_REGULAR_RC_MEDIAN_FILTER_EN) || \
1131:Generated_Source\PSoC4/CapSense_Filter.c ****          (CapSense_PROXIMITY_SENSOR_EN && CapSense_PROX_RC_MEDIAN_FILTER_EN))
1132:Generated_Source\PSoC4/CapSense_Filter.c ****         uint32 temp;
1133:Generated_Source\PSoC4/CapSense_Filter.c ****     #endif
1134:Generated_Source\PSoC4/CapSense_Filter.c **** 
1135:Generated_Source\PSoC4/CapSense_Filter.c ****     for(freqChannel = CapSense_NUM_SCAN_FREQS; freqChannel-- > 0u;)
1136:Generated_Source\PSoC4/CapSense_Filter.c ****     {
1137:Generated_Source\PSoC4/CapSense_Filter.c ****         if ((CapSense_WD_TYPE_ENUM)wdType != CapSense_WD_PROXIMITY_E)
1138:Generated_Source\PSoC4/CapSense_Filter.c ****         {
1139:Generated_Source\PSoC4/CapSense_Filter.c ****             #if (CapSense_REGULAR_SENSOR_EN && CapSense_REGULAR_RC_MEDIAN_FILTER_EN)
1140:Generated_Source\PSoC4/CapSense_Filter.c ****                 temp = CapSense_FtMedian((uint32)ptrSensorObj->raw[freqChannel],\
1141:Generated_Source\PSoC4/CapSense_Filter.c ****                                                  (uint32)ptrFilterHistObj.ptrRegular->regularChanne
1142:Generated_Source\PSoC4/CapSense_Filter.c ****                                                  (uint32)ptrFilterHistObj.ptrRegular->regularChanne
1143:Generated_Source\PSoC4/CapSense_Filter.c ****                 ptrFilterHistObj.ptrRegular->regularChannel[freqChannel].medHistory[1u] = \
1144:Generated_Source\PSoC4/CapSense_Filter.c ****                 ptrFilterHistObj.ptrRegular->regularChannel[freqChannel].medHistory[0u];
1145:Generated_Source\PSoC4/CapSense_Filter.c ****                 ptrFilterHistObj.ptrRegular->regularChannel[freqChannel].medHistory[0u] = ptrSensor
1146:Generated_Source\PSoC4/CapSense_Filter.c ****                 ptrSensorObj->raw[freqChannel] = LO16(temp);
1147:Generated_Source\PSoC4/CapSense_Filter.c ****             #endif /* (CapSense_REGULAR_SENSOR_EN) */
1148:Generated_Source\PSoC4/CapSense_Filter.c ****         }
1149:Generated_Source\PSoC4/CapSense_Filter.c ****         else
1150:Generated_Source\PSoC4/CapSense_Filter.c ****         {
1151:Generated_Source\PSoC4/CapSense_Filter.c ****             #if (CapSense_PROXIMITY_SENSOR_EN && CapSense_PROX_RC_MEDIAN_FILTER_EN)
1152:Generated_Source\PSoC4/CapSense_Filter.c ****                 temp = CapSense_FtMedian((uint32)ptrSensorObj->raw[freqChannel],\
1153:Generated_Source\PSoC4/CapSense_Filter.c ****                                                  (uint32)ptrFilterHistObj.ptrProx->proxChannel[freq
1154:Generated_Source\PSoC4/CapSense_Filter.c ****                                                  (uint32)ptrFilterHistObj.ptrProx->proxChannel[freq
1155:Generated_Source\PSoC4/CapSense_Filter.c ****                 ptrFilterHistObj.ptrProx->proxChannel[freqChannel].medHistory[1u] = \
1156:Generated_Source\PSoC4/CapSense_Filter.c ****                 ptrFilterHistObj.ptrProx->proxChannel[freqChannel].medHistory[0u];
1157:Generated_Source\PSoC4/CapSense_Filter.c ****                 ptrFilterHistObj.ptrProx->proxChannel[freqChannel].medHistory[0u] = ptrSensorObj->r
1158:Generated_Source\PSoC4/CapSense_Filter.c ****                 ptrSensorObj->raw[freqChannel] = LO16(temp);
1159:Generated_Source\PSoC4/CapSense_Filter.c ****             #endif /* (CapSense_PROXIMITY_SENSOR_EN) */
1160:Generated_Source\PSoC4/CapSense_Filter.c ****         }
1161:Generated_Source\PSoC4/CapSense_Filter.c ****     }
1162:Generated_Source\PSoC4/CapSense_Filter.c **** }
1163:Generated_Source\PSoC4/CapSense_Filter.c **** #endif /* (CapSense_REGULAR_RC_MEDIAN_FILTER_EN || CapSense_PROX_RC_MEDIAN_FILTER_EN) */
1164:Generated_Source\PSoC4/CapSense_Filter.c **** 
1165:Generated_Source\PSoC4/CapSense_Filter.c **** 
1166:Generated_Source\PSoC4/CapSense_Filter.c **** #if (CapSense_REGULAR_RC_AVERAGE_FILTER_EN || CapSense_PROX_RC_AVERAGE_FILTER_EN)
1167:Generated_Source\PSoC4/CapSense_Filter.c **** 
1168:Generated_Source\PSoC4/CapSense_Filter.c **** /*******************************************************************************
1169:Generated_Source\PSoC4/CapSense_Filter.c **** * Function Name: CapSense_InitializeAverage
1170:Generated_Source\PSoC4/CapSense_Filter.c **** ****************************************************************************//**
ARM GAS  C:\Users\mstai\AppData\Local\Temp\cc5JzFax.s 			page 27


1171:Generated_Source\PSoC4/CapSense_Filter.c **** *
1172:Generated_Source\PSoC4/CapSense_Filter.c **** * \brief
1173:Generated_Source\PSoC4/CapSense_Filter.c **** *  Initializes the average filter history.
1174:Generated_Source\PSoC4/CapSense_Filter.c **** *
1175:Generated_Source\PSoC4/CapSense_Filter.c **** * \details
1176:Generated_Source\PSoC4/CapSense_Filter.c **** *  Initializes the average filter history.
1177:Generated_Source\PSoC4/CapSense_Filter.c **** *
1178:Generated_Source\PSoC4/CapSense_Filter.c **** * \param widgetId
1179:Generated_Source\PSoC4/CapSense_Filter.c **** *  Specifies the ID number of the widget.
1180:Generated_Source\PSoC4/CapSense_Filter.c **** *
1181:Generated_Source\PSoC4/CapSense_Filter.c **** * \param sensorId
1182:Generated_Source\PSoC4/CapSense_Filter.c **** *  Specifies the ID number of the sensor in the widget.
1183:Generated_Source\PSoC4/CapSense_Filter.c **** *
1184:Generated_Source\PSoC4/CapSense_Filter.c **** *******************************************************************************/
1185:Generated_Source\PSoC4/CapSense_Filter.c **** void CapSense_InitializeAverage(uint32 widgetId, uint32 sensorId)
1186:Generated_Source\PSoC4/CapSense_Filter.c **** {
1187:Generated_Source\PSoC4/CapSense_Filter.c ****     CapSense_FLASH_WD_STRUCT const *ptrWidget = &CapSense_dsFlash.wdgtArray[widgetId];
1188:Generated_Source\PSoC4/CapSense_Filter.c ****     CapSense_RAM_SNS_STRUCT *ptrSensor = NULL;
1189:Generated_Source\PSoC4/CapSense_Filter.c ****     CapSense_PTR_FILTER_VARIANT ptrFilterHistObj;
1190:Generated_Source\PSoC4/CapSense_Filter.c **** 
1191:Generated_Source\PSoC4/CapSense_Filter.c ****     /* Find pointer to specified sensor object */
1192:Generated_Source\PSoC4/CapSense_Filter.c ****     ptrSensor = ptrWidget->ptr2SnsRam;
1193:Generated_Source\PSoC4/CapSense_Filter.c ****     ptrSensor = &ptrSensor[sensorId];
1194:Generated_Source\PSoC4/CapSense_Filter.c **** 
1195:Generated_Source\PSoC4/CapSense_Filter.c ****     /* Find pointer to specified filter sensor object */
1196:Generated_Source\PSoC4/CapSense_Filter.c ****     ptrFilterHistObj.ptr = ptrWidget->ptr2FltrHistory;
1197:Generated_Source\PSoC4/CapSense_Filter.c **** 
1198:Generated_Source\PSoC4/CapSense_Filter.c ****     if ((CapSense_WD_TYPE_ENUM)ptrWidget->wdgtType != CapSense_WD_PROXIMITY_E)
1199:Generated_Source\PSoC4/CapSense_Filter.c ****     {
1200:Generated_Source\PSoC4/CapSense_Filter.c ****         #if (CapSense_REGULAR_SENSOR_EN)
1201:Generated_Source\PSoC4/CapSense_Filter.c ****             ptrFilterHistObj.ptrRegular = &ptrFilterHistObj.ptrRegular[sensorId];
1202:Generated_Source\PSoC4/CapSense_Filter.c ****         #endif /* (CapSense_REGULAR_SENSOR_EN) */
1203:Generated_Source\PSoC4/CapSense_Filter.c ****     }
1204:Generated_Source\PSoC4/CapSense_Filter.c ****     else
1205:Generated_Source\PSoC4/CapSense_Filter.c ****     {
1206:Generated_Source\PSoC4/CapSense_Filter.c ****         #if (CapSense_PROXIMITY_SENSOR_EN)
1207:Generated_Source\PSoC4/CapSense_Filter.c ****             ptrFilterHistObj.ptrProx = &ptrFilterHistObj.ptrProx[sensorId];
1208:Generated_Source\PSoC4/CapSense_Filter.c ****         #endif /* (CapSense_PROXIMITY_SENSOR_EN) */
1209:Generated_Source\PSoC4/CapSense_Filter.c ****     }
1210:Generated_Source\PSoC4/CapSense_Filter.c **** 
1211:Generated_Source\PSoC4/CapSense_Filter.c ****     CapSense_InitializeAverageInternal(ptrFilterHistObj, ptrSensor, (uint32)ptrWidget->wdgtType);
1212:Generated_Source\PSoC4/CapSense_Filter.c **** }
1213:Generated_Source\PSoC4/CapSense_Filter.c **** 
1214:Generated_Source\PSoC4/CapSense_Filter.c **** 
1215:Generated_Source\PSoC4/CapSense_Filter.c **** /*******************************************************************************
1216:Generated_Source\PSoC4/CapSense_Filter.c **** * Function Name: CapSense_RunAverage
1217:Generated_Source\PSoC4/CapSense_Filter.c **** ****************************************************************************//**
1218:Generated_Source\PSoC4/CapSense_Filter.c **** *
1219:Generated_Source\PSoC4/CapSense_Filter.c **** * \brief
1220:Generated_Source\PSoC4/CapSense_Filter.c **** *  Executes the average filter algorithm on a sensor indicated by an input
1221:Generated_Source\PSoC4/CapSense_Filter.c **** *  parameter.
1222:Generated_Source\PSoC4/CapSense_Filter.c **** *
1223:Generated_Source\PSoC4/CapSense_Filter.c **** * \details
1224:Generated_Source\PSoC4/CapSense_Filter.c **** *  Executes the average filter algorithm on a sensor indicated by an input
1225:Generated_Source\PSoC4/CapSense_Filter.c **** *  parameter.
1226:Generated_Source\PSoC4/CapSense_Filter.c **** *
1227:Generated_Source\PSoC4/CapSense_Filter.c **** * \param widgetId
ARM GAS  C:\Users\mstai\AppData\Local\Temp\cc5JzFax.s 			page 28


1228:Generated_Source\PSoC4/CapSense_Filter.c **** *  Specifies the ID number of the widget.
1229:Generated_Source\PSoC4/CapSense_Filter.c **** *
1230:Generated_Source\PSoC4/CapSense_Filter.c **** * \param sensorId
1231:Generated_Source\PSoC4/CapSense_Filter.c **** *  Specifies the ID number of the sensor in the widget.
1232:Generated_Source\PSoC4/CapSense_Filter.c **** *
1233:Generated_Source\PSoC4/CapSense_Filter.c **** *******************************************************************************/
1234:Generated_Source\PSoC4/CapSense_Filter.c **** void CapSense_RunAverage(uint32 widgetId, uint32 sensorId)
1235:Generated_Source\PSoC4/CapSense_Filter.c **** {
1236:Generated_Source\PSoC4/CapSense_Filter.c ****     CapSense_FLASH_WD_STRUCT const *ptrWidget = &CapSense_dsFlash.wdgtArray[widgetId];
1237:Generated_Source\PSoC4/CapSense_Filter.c ****     CapSense_RAM_SNS_STRUCT *ptrSensor = NULL;
1238:Generated_Source\PSoC4/CapSense_Filter.c ****     CapSense_PTR_FILTER_VARIANT ptrFilterHistObj;
1239:Generated_Source\PSoC4/CapSense_Filter.c **** 
1240:Generated_Source\PSoC4/CapSense_Filter.c ****     /* Find pointer to specified sensor object */
1241:Generated_Source\PSoC4/CapSense_Filter.c ****     ptrSensor = ptrWidget->ptr2SnsRam;
1242:Generated_Source\PSoC4/CapSense_Filter.c ****     ptrSensor = &ptrSensor[sensorId];
1243:Generated_Source\PSoC4/CapSense_Filter.c **** 
1244:Generated_Source\PSoC4/CapSense_Filter.c ****     /* Find pointer to specified filter sensor object */
1245:Generated_Source\PSoC4/CapSense_Filter.c ****     ptrFilterHistObj.ptr = ptrWidget->ptr2FltrHistory;
1246:Generated_Source\PSoC4/CapSense_Filter.c **** 
1247:Generated_Source\PSoC4/CapSense_Filter.c ****     if ((CapSense_WD_TYPE_ENUM)ptrWidget->wdgtType != CapSense_WD_PROXIMITY_E)
1248:Generated_Source\PSoC4/CapSense_Filter.c ****     {
1249:Generated_Source\PSoC4/CapSense_Filter.c ****         #if (CapSense_REGULAR_SENSOR_EN)
1250:Generated_Source\PSoC4/CapSense_Filter.c ****             ptrFilterHistObj.ptrRegular = &ptrFilterHistObj.ptrRegular[sensorId];
1251:Generated_Source\PSoC4/CapSense_Filter.c ****         #endif /* (CapSense_REGULAR_SENSOR_EN) */
1252:Generated_Source\PSoC4/CapSense_Filter.c ****     }
1253:Generated_Source\PSoC4/CapSense_Filter.c ****     else
1254:Generated_Source\PSoC4/CapSense_Filter.c ****     {
1255:Generated_Source\PSoC4/CapSense_Filter.c ****         #if (CapSense_PROXIMITY_SENSOR_EN)
1256:Generated_Source\PSoC4/CapSense_Filter.c ****             ptrFilterHistObj.ptrProx = &ptrFilterHistObj.ptrProx[sensorId];
1257:Generated_Source\PSoC4/CapSense_Filter.c ****         #endif /* (CapSense_PROXIMITY_SENSOR_EN) */
1258:Generated_Source\PSoC4/CapSense_Filter.c ****     }
1259:Generated_Source\PSoC4/CapSense_Filter.c **** 
1260:Generated_Source\PSoC4/CapSense_Filter.c ****     CapSense_RunAverageInternal(ptrFilterHistObj, ptrSensor, (uint32)ptrWidget->wdgtType);
1261:Generated_Source\PSoC4/CapSense_Filter.c **** }
1262:Generated_Source\PSoC4/CapSense_Filter.c **** 
1263:Generated_Source\PSoC4/CapSense_Filter.c **** 
1264:Generated_Source\PSoC4/CapSense_Filter.c **** /*******************************************************************************
1265:Generated_Source\PSoC4/CapSense_Filter.c **** * Function Name: CapSense_InitializeAverageInternal
1266:Generated_Source\PSoC4/CapSense_Filter.c **** ****************************************************************************//**
1267:Generated_Source\PSoC4/CapSense_Filter.c **** *
1268:Generated_Source\PSoC4/CapSense_Filter.c **** * \brief
1269:Generated_Source\PSoC4/CapSense_Filter.c **** *  Initializes the average filter.
1270:Generated_Source\PSoC4/CapSense_Filter.c **** *
1271:Generated_Source\PSoC4/CapSense_Filter.c **** * \details
1272:Generated_Source\PSoC4/CapSense_Filter.c **** *  Initializes the average filter.
1273:Generated_Source\PSoC4/CapSense_Filter.c **** *
1274:Generated_Source\PSoC4/CapSense_Filter.c **** * \param ptrFilterHistObj
1275:Generated_Source\PSoC4/CapSense_Filter.c **** *  The pointer to the filter RAM object of the sensor.
1276:Generated_Source\PSoC4/CapSense_Filter.c **** *
1277:Generated_Source\PSoC4/CapSense_Filter.c **** * \param ptrSensorObj
1278:Generated_Source\PSoC4/CapSense_Filter.c **** *  The pointer to the sensor RAM object of the sensor.
1279:Generated_Source\PSoC4/CapSense_Filter.c **** *
1280:Generated_Source\PSoC4/CapSense_Filter.c **** * \param wdType
1281:Generated_Source\PSoC4/CapSense_Filter.c **** *  Specifies the type of a widget.
1282:Generated_Source\PSoC4/CapSense_Filter.c **** *
1283:Generated_Source\PSoC4/CapSense_Filter.c **** *******************************************************************************/
1284:Generated_Source\PSoC4/CapSense_Filter.c **** void CapSense_InitializeAverageInternal(CapSense_PTR_FILTER_VARIANT ptrFilterHistObj,\
ARM GAS  C:\Users\mstai\AppData\Local\Temp\cc5JzFax.s 			page 29


1285:Generated_Source\PSoC4/CapSense_Filter.c ****                                                   CapSense_RAM_SNS_STRUCT *ptrSensorObj, uint32 wdT
1286:Generated_Source\PSoC4/CapSense_Filter.c **** {
1287:Generated_Source\PSoC4/CapSense_Filter.c ****     uint32 freqChannel;
1288:Generated_Source\PSoC4/CapSense_Filter.c **** 
1289:Generated_Source\PSoC4/CapSense_Filter.c ****     for(freqChannel = CapSense_NUM_SCAN_FREQS; freqChannel-- > 0u;)
1290:Generated_Source\PSoC4/CapSense_Filter.c ****     {
1291:Generated_Source\PSoC4/CapSense_Filter.c ****         if ((CapSense_WD_TYPE_ENUM)wdType != CapSense_WD_PROXIMITY_E)
1292:Generated_Source\PSoC4/CapSense_Filter.c ****         {
1293:Generated_Source\PSoC4/CapSense_Filter.c ****             #if (CapSense_REGULAR_SENSOR_EN && CapSense_REGULAR_RC_AVERAGE_FILTER_EN)
1294:Generated_Source\PSoC4/CapSense_Filter.c ****                 ptrFilterHistObj.ptrRegular->regularChannel[freqChannel].avgHistory[0] = ptrSensorO
1295:Generated_Source\PSoC4/CapSense_Filter.c ****                 #if (CapSense_REGULAR_AVERAGE_LEN == CapSense_AVERAGE_FILTER_LEN_4)
1296:Generated_Source\PSoC4/CapSense_Filter.c ****                     ptrFilterHistObj.ptrRegular->regularChannel[freqChannel].avgHistory[1u] = ptrSe
1297:Generated_Source\PSoC4/CapSense_Filter.c ****                     ptrFilterHistObj.ptrRegular->regularChannel[freqChannel].avgHistory[2u] = ptrSe
1298:Generated_Source\PSoC4/CapSense_Filter.c ****                 #endif /* CapSense_REGULAR_AVERAGE_LEN == CapSense_AVERAGE_FILTER_LEN_4 */
1299:Generated_Source\PSoC4/CapSense_Filter.c ****             #endif /* (CapSense_REGULAR_SENSOR_EN) */
1300:Generated_Source\PSoC4/CapSense_Filter.c ****         }
1301:Generated_Source\PSoC4/CapSense_Filter.c ****         else
1302:Generated_Source\PSoC4/CapSense_Filter.c ****         {
1303:Generated_Source\PSoC4/CapSense_Filter.c ****             #if (CapSense_PROXIMITY_SENSOR_EN && CapSense_PROX_RC_AVERAGE_FILTER_EN)
1304:Generated_Source\PSoC4/CapSense_Filter.c ****                 ptrFilterHistObj.ptrProx->proxChannel[freqChannel].avgHistory[0] = ptrSensorObj->ra
1305:Generated_Source\PSoC4/CapSense_Filter.c ****                     #if (CapSense_PROX_AVERAGE_LEN == CapSense_AVERAGE_FILTER_LEN_4)
1306:Generated_Source\PSoC4/CapSense_Filter.c ****                         ptrFilterHistObj.ptrProx->proxChannel[freqChannel].avgHistory[1u] = ptrSens
1307:Generated_Source\PSoC4/CapSense_Filter.c ****                         ptrFilterHistObj.ptrProx->proxChannel[freqChannel].avgHistory[2u] = ptrSens
1308:Generated_Source\PSoC4/CapSense_Filter.c ****                     #endif /* CapSense_REGULAR_AVERAGE_LEN == CapSense_AVERAGE_FILTER_LEN_4 */
1309:Generated_Source\PSoC4/CapSense_Filter.c ****             #endif /* (CapSense_PROXIMITY_SENSOR_EN) */
1310:Generated_Source\PSoC4/CapSense_Filter.c ****         }
1311:Generated_Source\PSoC4/CapSense_Filter.c ****     }
1312:Generated_Source\PSoC4/CapSense_Filter.c **** }
1313:Generated_Source\PSoC4/CapSense_Filter.c **** 
1314:Generated_Source\PSoC4/CapSense_Filter.c **** 
1315:Generated_Source\PSoC4/CapSense_Filter.c **** /*******************************************************************************
1316:Generated_Source\PSoC4/CapSense_Filter.c **** * Function Name: CapSense_RunAverageInternal
1317:Generated_Source\PSoC4/CapSense_Filter.c **** ****************************************************************************//**
1318:Generated_Source\PSoC4/CapSense_Filter.c **** *
1319:Generated_Source\PSoC4/CapSense_Filter.c **** * \brief
1320:Generated_Source\PSoC4/CapSense_Filter.c **** *  Runs the average filter.
1321:Generated_Source\PSoC4/CapSense_Filter.c **** *
1322:Generated_Source\PSoC4/CapSense_Filter.c **** * \details
1323:Generated_Source\PSoC4/CapSense_Filter.c **** *  Runs the average filter.
1324:Generated_Source\PSoC4/CapSense_Filter.c **** *
1325:Generated_Source\PSoC4/CapSense_Filter.c **** * \param ptrFilterHistObj
1326:Generated_Source\PSoC4/CapSense_Filter.c **** *  The pointer to the filter RAM object of the sensor.
1327:Generated_Source\PSoC4/CapSense_Filter.c **** *
1328:Generated_Source\PSoC4/CapSense_Filter.c **** * \param ptrSensorObj
1329:Generated_Source\PSoC4/CapSense_Filter.c **** *  The pointer to the sensor RAM object of the sensor.
1330:Generated_Source\PSoC4/CapSense_Filter.c **** *
1331:Generated_Source\PSoC4/CapSense_Filter.c **** * \param wdType
1332:Generated_Source\PSoC4/CapSense_Filter.c **** *  Specifies the type of a widget.
1333:Generated_Source\PSoC4/CapSense_Filter.c **** *
1334:Generated_Source\PSoC4/CapSense_Filter.c **** *******************************************************************************/
1335:Generated_Source\PSoC4/CapSense_Filter.c **** void CapSense_RunAverageInternal(CapSense_PTR_FILTER_VARIANT ptrFilterHistObj,\
1336:Generated_Source\PSoC4/CapSense_Filter.c ****                                            CapSense_RAM_SNS_STRUCT *ptrSensorObj, uint32 wdType)
1337:Generated_Source\PSoC4/CapSense_Filter.c **** {
1338:Generated_Source\PSoC4/CapSense_Filter.c ****     uint32 freqChannel;
1339:Generated_Source\PSoC4/CapSense_Filter.c ****     uint32 temp;
1340:Generated_Source\PSoC4/CapSense_Filter.c **** 
1341:Generated_Source\PSoC4/CapSense_Filter.c ****     for(freqChannel = CapSense_NUM_SCAN_FREQS; freqChannel-- > 0u;)
ARM GAS  C:\Users\mstai\AppData\Local\Temp\cc5JzFax.s 			page 30


1342:Generated_Source\PSoC4/CapSense_Filter.c ****     {
1343:Generated_Source\PSoC4/CapSense_Filter.c ****         if ((CapSense_WD_TYPE_ENUM)wdType != CapSense_WD_PROXIMITY_E)
1344:Generated_Source\PSoC4/CapSense_Filter.c ****         {
1345:Generated_Source\PSoC4/CapSense_Filter.c ****             #if (CapSense_REGULAR_SENSOR_EN && CapSense_REGULAR_RC_AVERAGE_FILTER_EN)
1346:Generated_Source\PSoC4/CapSense_Filter.c ****                 #if (CapSense_REGULAR_AVERAGE_LEN == CapSense_AVERAGE_FILTER_LEN_2)
1347:Generated_Source\PSoC4/CapSense_Filter.c ****                     temp = ((uint32)ptrSensorObj->raw[freqChannel] +
1348:Generated_Source\PSoC4/CapSense_Filter.c ****                             (uint32)ptrFilterHistObj.ptrRegular->regularChannel[freqChannel].avgHis
1349:Generated_Source\PSoC4/CapSense_Filter.c ****                     ptrFilterHistObj.ptrRegular->regularChannel[freqChannel].avgHistory[0] = ptrSen
1350:Generated_Source\PSoC4/CapSense_Filter.c ****                     ptrSensorObj->raw[freqChannel] = LO16(temp);
1351:Generated_Source\PSoC4/CapSense_Filter.c ****                 #else
1352:Generated_Source\PSoC4/CapSense_Filter.c ****                     temp = ((uint32)ptrSensorObj->raw[freqChannel] +
1353:Generated_Source\PSoC4/CapSense_Filter.c ****                             (uint32)ptrFilterHistObj.ptrRegular->regularChannel[freqChannel].avgHis
1354:Generated_Source\PSoC4/CapSense_Filter.c ****                             (uint32)ptrFilterHistObj.ptrRegular->regularChannel[freqChannel].avgHis
1355:Generated_Source\PSoC4/CapSense_Filter.c ****                             (uint32)ptrFilterHistObj.ptrRegular->regularChannel[freqChannel].avgHis
1356:Generated_Source\PSoC4/CapSense_Filter.c **** 
1357:Generated_Source\PSoC4/CapSense_Filter.c ****                     ptrFilterHistObj.ptrRegular->regularChannel[freqChannel].avgHistory[2u] =
1358:Generated_Source\PSoC4/CapSense_Filter.c ****                     ptrFilterHistObj.ptrRegular->regularChannel[freqChannel].avgHistory[1u];
1359:Generated_Source\PSoC4/CapSense_Filter.c ****                     ptrFilterHistObj.ptrRegular->regularChannel[freqChannel].avgHistory[1u] =
1360:Generated_Source\PSoC4/CapSense_Filter.c ****                     ptrFilterHistObj.ptrRegular->regularChannel[freqChannel].avgHistory[0];
1361:Generated_Source\PSoC4/CapSense_Filter.c ****                     ptrFilterHistObj.ptrRegular->regularChannel[freqChannel].avgHistory[0] = ptrSen
1362:Generated_Source\PSoC4/CapSense_Filter.c ****                     ptrSensorObj->raw[freqChannel] = LO16(temp);
1363:Generated_Source\PSoC4/CapSense_Filter.c ****                 #endif /* CapSense_REGULAR_AVERAGE_LEN == CapSense_AVERAGE_FILTER_LEN_4 */
1364:Generated_Source\PSoC4/CapSense_Filter.c ****             #endif /* (CapSense_REGULAR_SENSOR_EN) */
1365:Generated_Source\PSoC4/CapSense_Filter.c ****         }
1366:Generated_Source\PSoC4/CapSense_Filter.c ****         else
1367:Generated_Source\PSoC4/CapSense_Filter.c ****         {
1368:Generated_Source\PSoC4/CapSense_Filter.c ****             #if (CapSense_PROXIMITY_SENSOR_EN && CapSense_PROX_RC_AVERAGE_FILTER_EN)
1369:Generated_Source\PSoC4/CapSense_Filter.c ****                 #if (CapSense_PROX_AVERAGE_LEN == CapSense_AVERAGE_FILTER_LEN_2)
1370:Generated_Source\PSoC4/CapSense_Filter.c ****                     temp = ((uint32)ptrSensorObj->raw[freqChannel] +
1371:Generated_Source\PSoC4/CapSense_Filter.c ****                             (uint32)ptrFilterHistObj.ptrProx->proxChannel[freqChannel].avgHistory[0
1372:Generated_Source\PSoC4/CapSense_Filter.c ****                     ptrFilterHistObj.ptrProx->proxChannel[freqChannel].avgHistory[0] = ptrSensorObj
1373:Generated_Source\PSoC4/CapSense_Filter.c ****                     ptrSensorObj->raw[freqChannel] = LO16(temp);
1374:Generated_Source\PSoC4/CapSense_Filter.c ****                 #else
1375:Generated_Source\PSoC4/CapSense_Filter.c ****                     temp = ((uint32)ptrSensorObj->raw[freqChannel] +
1376:Generated_Source\PSoC4/CapSense_Filter.c ****                             (uint32)ptrFilterHistObj.ptrProx->proxChannel[freqChannel].avgHistory[0
1377:Generated_Source\PSoC4/CapSense_Filter.c ****                             (uint32)ptrFilterHistObj.ptrProx->proxChannel[freqChannel].avgHistory[1
1378:Generated_Source\PSoC4/CapSense_Filter.c ****                             (uint32)ptrFilterHistObj.ptrProx->proxChannel[freqChannel].avgHistory[2
1379:Generated_Source\PSoC4/CapSense_Filter.c **** 
1380:Generated_Source\PSoC4/CapSense_Filter.c ****                     ptrFilterHistObj.ptrProx->proxChannel[freqChannel].avgHistory[2u] =
1381:Generated_Source\PSoC4/CapSense_Filter.c ****                     ptrFilterHistObj.ptrProx->proxChannel[freqChannel].avgHistory[1u];
1382:Generated_Source\PSoC4/CapSense_Filter.c ****                     ptrFilterHistObj.ptrProx->proxChannel[freqChannel].avgHistory[1u] =
1383:Generated_Source\PSoC4/CapSense_Filter.c ****                     ptrFilterHistObj.ptrProx->proxChannel[freqChannel].avgHistory[0];
1384:Generated_Source\PSoC4/CapSense_Filter.c ****                     ptrFilterHistObj.ptrProx->proxChannel[freqChannel].avgHistory[0] = ptrSensorObj
1385:Generated_Source\PSoC4/CapSense_Filter.c ****                     ptrSensorObj->raw[freqChannel] = LO16(temp);
1386:Generated_Source\PSoC4/CapSense_Filter.c ****                 #endif /* CapSense_PROX_AVERAGE_LEN == CapSense_AVERAGE_FILTER_LEN_4 */
1387:Generated_Source\PSoC4/CapSense_Filter.c ****             #endif /* (CapSense_PROXIMITY_SENSOR_EN) */
1388:Generated_Source\PSoC4/CapSense_Filter.c ****         }
1389:Generated_Source\PSoC4/CapSense_Filter.c ****     }
1390:Generated_Source\PSoC4/CapSense_Filter.c **** }
1391:Generated_Source\PSoC4/CapSense_Filter.c **** #endif /* (CapSense_REGULAR_RC_AVERAGE_FILTER_EN || CapSense_PROX_RC_AVERAGE_FILTER_EN) */
1392:Generated_Source\PSoC4/CapSense_Filter.c **** 
1393:Generated_Source\PSoC4/CapSense_Filter.c **** #if (CapSense_ENABLE == CapSense_ALP_FILTER_EN)
1394:Generated_Source\PSoC4/CapSense_Filter.c **** /*******************************************************************************
1395:Generated_Source\PSoC4/CapSense_Filter.c **** * Function Name: CapSense_InitializeALP
1396:Generated_Source\PSoC4/CapSense_Filter.c **** ****************************************************************************//**
1397:Generated_Source\PSoC4/CapSense_Filter.c **** *
1398:Generated_Source\PSoC4/CapSense_Filter.c **** * \brief
ARM GAS  C:\Users\mstai\AppData\Local\Temp\cc5JzFax.s 			page 31


1399:Generated_Source\PSoC4/CapSense_Filter.c **** *  Initializes the ALP filter history.
1400:Generated_Source\PSoC4/CapSense_Filter.c **** *
1401:Generated_Source\PSoC4/CapSense_Filter.c **** * \details
1402:Generated_Source\PSoC4/CapSense_Filter.c **** *  Initializes the ALP filter history.
1403:Generated_Source\PSoC4/CapSense_Filter.c **** *
1404:Generated_Source\PSoC4/CapSense_Filter.c **** * \param widgetId
1405:Generated_Source\PSoC4/CapSense_Filter.c **** *  Specifies the ID number of the widget.
1406:Generated_Source\PSoC4/CapSense_Filter.c **** *
1407:Generated_Source\PSoC4/CapSense_Filter.c **** * \param sensorId
1408:Generated_Source\PSoC4/CapSense_Filter.c **** *  Specifies the ID number of the sensor in the widget.
1409:Generated_Source\PSoC4/CapSense_Filter.c **** *
1410:Generated_Source\PSoC4/CapSense_Filter.c **** *******************************************************************************/
1411:Generated_Source\PSoC4/CapSense_Filter.c **** void CapSense_InitializeALP(uint32 widgetId, uint32 sensorId)
1412:Generated_Source\PSoC4/CapSense_Filter.c **** {
1413:Generated_Source\PSoC4/CapSense_Filter.c ****     CapSense_FLASH_WD_STRUCT const *ptrWidget = &CapSense_dsFlash.wdgtArray[widgetId];
1414:Generated_Source\PSoC4/CapSense_Filter.c ****     CapSense_RAM_SNS_STRUCT *ptrSensor = NULL;
1415:Generated_Source\PSoC4/CapSense_Filter.c ****     CapSense_PTR_FILTER_VARIANT ptrFilterHistObj;
1416:Generated_Source\PSoC4/CapSense_Filter.c **** 
1417:Generated_Source\PSoC4/CapSense_Filter.c ****     /* Find pointer to specified sensor object */
1418:Generated_Source\PSoC4/CapSense_Filter.c ****     ptrSensor = ptrWidget->ptr2SnsRam;
1419:Generated_Source\PSoC4/CapSense_Filter.c ****     ptrSensor = &ptrSensor[sensorId];
1420:Generated_Source\PSoC4/CapSense_Filter.c **** 
1421:Generated_Source\PSoC4/CapSense_Filter.c ****     /* Find pointer to specified filter sensor object */
1422:Generated_Source\PSoC4/CapSense_Filter.c ****     ptrFilterHistObj.ptr = ptrWidget->ptr2FltrHistory;
1423:Generated_Source\PSoC4/CapSense_Filter.c ****     ptrFilterHistObj.ptrAlp = &ptrFilterHistObj.ptrAlp[sensorId];
1424:Generated_Source\PSoC4/CapSense_Filter.c ****     CapSense_InitializeALPInternal(ptrFilterHistObj, ptrSensor, (uint32)ptrWidget->wdgtType);
1425:Generated_Source\PSoC4/CapSense_Filter.c **** }
1426:Generated_Source\PSoC4/CapSense_Filter.c **** 
1427:Generated_Source\PSoC4/CapSense_Filter.c **** 
1428:Generated_Source\PSoC4/CapSense_Filter.c **** /*******************************************************************************
1429:Generated_Source\PSoC4/CapSense_Filter.c **** * Function Name: CapSense_RunALP
1430:Generated_Source\PSoC4/CapSense_Filter.c **** ****************************************************************************//**
1431:Generated_Source\PSoC4/CapSense_Filter.c **** *
1432:Generated_Source\PSoC4/CapSense_Filter.c **** * \brief
1433:Generated_Source\PSoC4/CapSense_Filter.c **** *  Executes the ALP filter algorithm on a sensor indicated by an input
1434:Generated_Source\PSoC4/CapSense_Filter.c **** *  parameter.
1435:Generated_Source\PSoC4/CapSense_Filter.c **** *
1436:Generated_Source\PSoC4/CapSense_Filter.c **** * \details
1437:Generated_Source\PSoC4/CapSense_Filter.c **** *  Executes the ALP filter algorithm on a sensor indicated by an input
1438:Generated_Source\PSoC4/CapSense_Filter.c **** *  parameter.
1439:Generated_Source\PSoC4/CapSense_Filter.c **** *
1440:Generated_Source\PSoC4/CapSense_Filter.c **** * \param widgetId
1441:Generated_Source\PSoC4/CapSense_Filter.c **** *  Specifies the ID number of the widget.
1442:Generated_Source\PSoC4/CapSense_Filter.c **** *
1443:Generated_Source\PSoC4/CapSense_Filter.c **** * \param sensorId
1444:Generated_Source\PSoC4/CapSense_Filter.c **** *  Specifies the ID number of the sensor in the widget.
1445:Generated_Source\PSoC4/CapSense_Filter.c **** *
1446:Generated_Source\PSoC4/CapSense_Filter.c **** *******************************************************************************/
1447:Generated_Source\PSoC4/CapSense_Filter.c **** void CapSense_RunALP(uint32 widgetId, uint32 sensorId)
1448:Generated_Source\PSoC4/CapSense_Filter.c **** {
1449:Generated_Source\PSoC4/CapSense_Filter.c ****     CapSense_FLASH_WD_STRUCT const *ptrWidget = &CapSense_dsFlash.wdgtArray[widgetId];
1450:Generated_Source\PSoC4/CapSense_Filter.c ****     CapSense_RAM_SNS_STRUCT *ptrSensor = NULL;
1451:Generated_Source\PSoC4/CapSense_Filter.c ****     CapSense_PTR_FILTER_VARIANT ptrFilterHistObj;
1452:Generated_Source\PSoC4/CapSense_Filter.c ****     ALP_FLTR_CONFIG_STRUCT alpFilterConfig;
1453:Generated_Source\PSoC4/CapSense_Filter.c ****     ALP_FLTR_CONFIG_STRUCT *ptrAlpFilterConfig = &alpFilterConfig;
1454:Generated_Source\PSoC4/CapSense_Filter.c ****     CapSense_RAM_WD_BASE_STRUCT *ptrRamWidget = ptrWidget->ptr2WdgtRam;
1455:Generated_Source\PSoC4/CapSense_Filter.c **** 
ARM GAS  C:\Users\mstai\AppData\Local\Temp\cc5JzFax.s 			page 32


1456:Generated_Source\PSoC4/CapSense_Filter.c ****     /* Find pointer to specified sensor object */
1457:Generated_Source\PSoC4/CapSense_Filter.c ****     ptrSensor = ptrWidget->ptr2SnsRam;
1458:Generated_Source\PSoC4/CapSense_Filter.c ****     ptrSensor = &ptrSensor[sensorId];
1459:Generated_Source\PSoC4/CapSense_Filter.c **** 
1460:Generated_Source\PSoC4/CapSense_Filter.c ****     ptrAlpFilterConfig->configParam0 = ptrRamWidget->alpOnTh;
1461:Generated_Source\PSoC4/CapSense_Filter.c ****     ptrAlpFilterConfig->configParam1 = ptrRamWidget->alpOffTh;
1462:Generated_Source\PSoC4/CapSense_Filter.c ****     ptrAlpFilterConfig->configParam2 = ptrRamWidget->fingerTh;
1463:Generated_Source\PSoC4/CapSense_Filter.c ****     ptrAlpFilterConfig->configParam3 = ptrRamWidget->noiseTh;
1464:Generated_Source\PSoC4/CapSense_Filter.c ****     ptrAlpFilterConfig->configParam4 = ptrRamWidget->hysteresis;
1465:Generated_Source\PSoC4/CapSense_Filter.c **** 
1466:Generated_Source\PSoC4/CapSense_Filter.c ****     /* Find pointer to specified filter sensor object */
1467:Generated_Source\PSoC4/CapSense_Filter.c ****     ptrFilterHistObj.ptr = ptrWidget->ptr2FltrHistory;
1468:Generated_Source\PSoC4/CapSense_Filter.c ****     ptrFilterHistObj.ptrAlp = &ptrFilterHistObj.ptrAlp[sensorId];
1469:Generated_Source\PSoC4/CapSense_Filter.c **** 
1470:Generated_Source\PSoC4/CapSense_Filter.c ****     if ((CapSense_WD_TYPE_ENUM)ptrWidget->wdgtType != CapSense_WD_PROXIMITY_E)
1471:Generated_Source\PSoC4/CapSense_Filter.c ****     {
1472:Generated_Source\PSoC4/CapSense_Filter.c ****         #if (CapSense_REGULAR_SENSOR_EN)
1473:Generated_Source\PSoC4/CapSense_Filter.c ****             ptrAlpFilterConfig->configParam5 = CapSense_REGULAR_RC_ALP_FILTER_COEFF;
1474:Generated_Source\PSoC4/CapSense_Filter.c ****         #endif /* (CapSense_REGULAR_SENSOR_EN) */
1475:Generated_Source\PSoC4/CapSense_Filter.c ****     }
1476:Generated_Source\PSoC4/CapSense_Filter.c ****     else
1477:Generated_Source\PSoC4/CapSense_Filter.c ****     {
1478:Generated_Source\PSoC4/CapSense_Filter.c ****         #if (CapSense_PROXIMITY_SENSOR_EN)
1479:Generated_Source\PSoC4/CapSense_Filter.c ****             ptrAlpFilterConfig->configParam5 = CapSense_PROX_RC_ALP_FILTER_COEFF;
1480:Generated_Source\PSoC4/CapSense_Filter.c ****         #endif /* (CapSense_PROXIMITY_SENSOR_EN) */
1481:Generated_Source\PSoC4/CapSense_Filter.c ****     }
1482:Generated_Source\PSoC4/CapSense_Filter.c ****     CapSense_RunALPInternal(ptrFilterHistObj, ptrAlpFilterConfig, ptrSensor, (uint32)ptrWidget->wdg
1483:Generated_Source\PSoC4/CapSense_Filter.c **** }
1484:Generated_Source\PSoC4/CapSense_Filter.c **** 
1485:Generated_Source\PSoC4/CapSense_Filter.c **** 
1486:Generated_Source\PSoC4/CapSense_Filter.c **** /*******************************************************************************
1487:Generated_Source\PSoC4/CapSense_Filter.c **** * Function Name: CapSense_InitializeALPInternal
1488:Generated_Source\PSoC4/CapSense_Filter.c **** ****************************************************************************//**
1489:Generated_Source\PSoC4/CapSense_Filter.c **** *
1490:Generated_Source\PSoC4/CapSense_Filter.c **** * \brief
1491:Generated_Source\PSoC4/CapSense_Filter.c **** *  Initializes the ALP filter.
1492:Generated_Source\PSoC4/CapSense_Filter.c **** *
1493:Generated_Source\PSoC4/CapSense_Filter.c **** * \details
1494:Generated_Source\PSoC4/CapSense_Filter.c **** *  Initializes the ALP filter.
1495:Generated_Source\PSoC4/CapSense_Filter.c **** *
1496:Generated_Source\PSoC4/CapSense_Filter.c **** * \param ptrFilterHistObj
1497:Generated_Source\PSoC4/CapSense_Filter.c **** *  The pointer to the filter RAM object of the sensor.
1498:Generated_Source\PSoC4/CapSense_Filter.c **** *
1499:Generated_Source\PSoC4/CapSense_Filter.c **** * \param ptrSensorObj
1500:Generated_Source\PSoC4/CapSense_Filter.c **** *  The pointer to the sensor RAM object of the sensor.
1501:Generated_Source\PSoC4/CapSense_Filter.c **** *
1502:Generated_Source\PSoC4/CapSense_Filter.c **** * \param wdType
1503:Generated_Source\PSoC4/CapSense_Filter.c **** *  Specifies the type of a widget.
1504:Generated_Source\PSoC4/CapSense_Filter.c **** *
1505:Generated_Source\PSoC4/CapSense_Filter.c **** *
1506:Generated_Source\PSoC4/CapSense_Filter.c **** *******************************************************************************/
1507:Generated_Source\PSoC4/CapSense_Filter.c **** void CapSense_InitializeALPInternal(CapSense_PTR_FILTER_VARIANT ptrFilterHistObj,
1508:Generated_Source\PSoC4/CapSense_Filter.c ****                                             CapSense_RAM_SNS_STRUCT *ptrSensorObj,
1509:Generated_Source\PSoC4/CapSense_Filter.c ****                                             uint32 wdType)
1510:Generated_Source\PSoC4/CapSense_Filter.c **** {
1511:Generated_Source\PSoC4/CapSense_Filter.c ****     uint32 freqChannel;
1512:Generated_Source\PSoC4/CapSense_Filter.c **** 
ARM GAS  C:\Users\mstai\AppData\Local\Temp\cc5JzFax.s 			page 33


1513:Generated_Source\PSoC4/CapSense_Filter.c ****     for(freqChannel = CapSense_NUM_SCAN_FREQS; freqChannel-- > 0u;)
1514:Generated_Source\PSoC4/CapSense_Filter.c ****     {
1515:Generated_Source\PSoC4/CapSense_Filter.c ****         if ((CapSense_WD_TYPE_ENUM)wdType != CapSense_WD_PROXIMITY_E)
1516:Generated_Source\PSoC4/CapSense_Filter.c ****         {
1517:Generated_Source\PSoC4/CapSense_Filter.c ****             #if (CapSense_REGULAR_SENSOR_EN && CapSense_REGULAR_RC_ALP_FILTER_EN)
1518:Generated_Source\PSoC4/CapSense_Filter.c ****                 ALP_Initialize(&ptrFilterHistObj.ptrAlp->channel[freqChannel], &ptrSensorObj->raw[f
1519:Generated_Source\PSoC4/CapSense_Filter.c ****             #endif
1520:Generated_Source\PSoC4/CapSense_Filter.c ****         }
1521:Generated_Source\PSoC4/CapSense_Filter.c ****         else
1522:Generated_Source\PSoC4/CapSense_Filter.c ****         {
1523:Generated_Source\PSoC4/CapSense_Filter.c ****             #if (CapSense_PROXIMITY_SENSOR_EN && CapSense_PROX_RC_ALP_FILTER_EN)
1524:Generated_Source\PSoC4/CapSense_Filter.c ****                 ALP_Initialize(&ptrFilterHistObj.ptrAlp->channel[freqChannel], &ptrSensorObj->raw[f
1525:Generated_Source\PSoC4/CapSense_Filter.c ****             #endif
1526:Generated_Source\PSoC4/CapSense_Filter.c ****         }
1527:Generated_Source\PSoC4/CapSense_Filter.c ****     }
1528:Generated_Source\PSoC4/CapSense_Filter.c **** }
1529:Generated_Source\PSoC4/CapSense_Filter.c **** 
1530:Generated_Source\PSoC4/CapSense_Filter.c **** /*******************************************************************************
1531:Generated_Source\PSoC4/CapSense_Filter.c **** * Function Name: CapSense_ConfigRunALPInternal
1532:Generated_Source\PSoC4/CapSense_Filter.c **** ****************************************************************************//**
1533:Generated_Source\PSoC4/CapSense_Filter.c **** *
1534:Generated_Source\PSoC4/CapSense_Filter.c **** * \brief
1535:Generated_Source\PSoC4/CapSense_Filter.c **** *  Prepares ALP configuration structure and runs the filter.
1536:Generated_Source\PSoC4/CapSense_Filter.c **** *
1537:Generated_Source\PSoC4/CapSense_Filter.c **** * \details
1538:Generated_Source\PSoC4/CapSense_Filter.c **** *  Prepares ALP configuration structure and runs the filter.
1539:Generated_Source\PSoC4/CapSense_Filter.c **** *
1540:Generated_Source\PSoC4/CapSense_Filter.c **** * \param ptrFilterHistObj
1541:Generated_Source\PSoC4/CapSense_Filter.c **** *  The pointer to the filter RAM object of the sensor.
1542:Generated_Source\PSoC4/CapSense_Filter.c **** *
1543:Generated_Source\PSoC4/CapSense_Filter.c **** * \param ptrRamWdgt
1544:Generated_Source\PSoC4/CapSense_Filter.c **** *  The pointer to the RAM widget object.
1545:Generated_Source\PSoC4/CapSense_Filter.c **** *
1546:Generated_Source\PSoC4/CapSense_Filter.c **** * \param ptrSensorObj
1547:Generated_Source\PSoC4/CapSense_Filter.c **** *  The pointer to the sensor RAM object of the sensor.
1548:Generated_Source\PSoC4/CapSense_Filter.c **** *
1549:Generated_Source\PSoC4/CapSense_Filter.c **** * \param wdType
1550:Generated_Source\PSoC4/CapSense_Filter.c **** *  Specifies the type of a widget.
1551:Generated_Source\PSoC4/CapSense_Filter.c **** *
1552:Generated_Source\PSoC4/CapSense_Filter.c **** *******************************************************************************/
1553:Generated_Source\PSoC4/CapSense_Filter.c **** void CapSense_ConfigRunALPInternal(CapSense_PTR_FILTER_VARIANT ptrFilterHistObj,
1554:Generated_Source\PSoC4/CapSense_Filter.c ****                                     CapSense_RAM_WD_BASE_STRUCT *ptrRamWdgt,
1555:Generated_Source\PSoC4/CapSense_Filter.c ****                                     CapSense_RAM_SNS_STRUCT *ptrSensorObj,
1556:Generated_Source\PSoC4/CapSense_Filter.c ****                                     uint32 wdType)
1557:Generated_Source\PSoC4/CapSense_Filter.c **** {
1558:Generated_Source\PSoC4/CapSense_Filter.c ****     ALP_FLTR_CONFIG_STRUCT alpFilterConfig;
1559:Generated_Source\PSoC4/CapSense_Filter.c **** 
1560:Generated_Source\PSoC4/CapSense_Filter.c ****     alpFilterConfig.configParam0 = ptrRamWdgt->alpOnTh;
1561:Generated_Source\PSoC4/CapSense_Filter.c ****     alpFilterConfig.configParam1 = ptrRamWdgt->alpOffTh;
1562:Generated_Source\PSoC4/CapSense_Filter.c ****     alpFilterConfig.configParam2 = ptrRamWdgt->fingerTh;
1563:Generated_Source\PSoC4/CapSense_Filter.c ****     alpFilterConfig.configParam3 = ptrRamWdgt->noiseTh;
1564:Generated_Source\PSoC4/CapSense_Filter.c ****     alpFilterConfig.configParam4 = ptrRamWdgt->hysteresis;
1565:Generated_Source\PSoC4/CapSense_Filter.c **** 
1566:Generated_Source\PSoC4/CapSense_Filter.c ****     CapSense_RunALPInternal(ptrFilterHistObj, &alpFilterConfig, ptrSensorObj, wdType);
1567:Generated_Source\PSoC4/CapSense_Filter.c **** }
1568:Generated_Source\PSoC4/CapSense_Filter.c **** 
1569:Generated_Source\PSoC4/CapSense_Filter.c **** /*******************************************************************************
ARM GAS  C:\Users\mstai\AppData\Local\Temp\cc5JzFax.s 			page 34


1570:Generated_Source\PSoC4/CapSense_Filter.c **** * Function Name: CapSense_RunALPInternal
1571:Generated_Source\PSoC4/CapSense_Filter.c **** ****************************************************************************//**
1572:Generated_Source\PSoC4/CapSense_Filter.c **** *
1573:Generated_Source\PSoC4/CapSense_Filter.c **** * \brief
1574:Generated_Source\PSoC4/CapSense_Filter.c **** *  Runs the ALP filter.
1575:Generated_Source\PSoC4/CapSense_Filter.c **** *
1576:Generated_Source\PSoC4/CapSense_Filter.c **** * \details
1577:Generated_Source\PSoC4/CapSense_Filter.c **** *  Runs the ALP filter.
1578:Generated_Source\PSoC4/CapSense_Filter.c **** *
1579:Generated_Source\PSoC4/CapSense_Filter.c **** * \param ptrFilterHistObj
1580:Generated_Source\PSoC4/CapSense_Filter.c **** *  The pointer to the filter RAM object of the sensor.
1581:Generated_Source\PSoC4/CapSense_Filter.c **** *
1582:Generated_Source\PSoC4/CapSense_Filter.c **** * \param ptrAlpFilterConfig
1583:Generated_Source\PSoC4/CapSense_Filter.c **** *  The pointer to the filter configuration object of the sensor.
1584:Generated_Source\PSoC4/CapSense_Filter.c **** *
1585:Generated_Source\PSoC4/CapSense_Filter.c **** * \param ptrSensorObj
1586:Generated_Source\PSoC4/CapSense_Filter.c **** *  The pointer to the sensor RAM object of the sensor.
1587:Generated_Source\PSoC4/CapSense_Filter.c **** *
1588:Generated_Source\PSoC4/CapSense_Filter.c **** * \param wdType
1589:Generated_Source\PSoC4/CapSense_Filter.c **** *  Specifies the type of a widget.
1590:Generated_Source\PSoC4/CapSense_Filter.c **** *
1591:Generated_Source\PSoC4/CapSense_Filter.c **** *******************************************************************************/
1592:Generated_Source\PSoC4/CapSense_Filter.c **** void CapSense_RunALPInternal(CapSense_PTR_FILTER_VARIANT ptrFilterHistObj,
1593:Generated_Source\PSoC4/CapSense_Filter.c ****                                     ALP_FLTR_CONFIG_STRUCT *ptrAlpFilterConfig,
1594:Generated_Source\PSoC4/CapSense_Filter.c ****                                     CapSense_RAM_SNS_STRUCT *ptrSensorObj,
1595:Generated_Source\PSoC4/CapSense_Filter.c ****                                     uint32 wdType)
1596:Generated_Source\PSoC4/CapSense_Filter.c **** {
1597:Generated_Source\PSoC4/CapSense_Filter.c ****     uint32 freqChannel;
1598:Generated_Source\PSoC4/CapSense_Filter.c **** 
1599:Generated_Source\PSoC4/CapSense_Filter.c ****     for(freqChannel = CapSense_NUM_SCAN_FREQS; freqChannel-- > 0u;)
1600:Generated_Source\PSoC4/CapSense_Filter.c ****     {
1601:Generated_Source\PSoC4/CapSense_Filter.c ****         if ((CapSense_WD_TYPE_ENUM)wdType != CapSense_WD_PROXIMITY_E)
1602:Generated_Source\PSoC4/CapSense_Filter.c ****         {
1603:Generated_Source\PSoC4/CapSense_Filter.c ****             #if (CapSense_REGULAR_SENSOR_EN && CapSense_REGULAR_RC_ALP_FILTER_EN)
1604:Generated_Source\PSoC4/CapSense_Filter.c ****                 ptrAlpFilterConfig->configParam5 = CapSense_REGULAR_RC_ALP_FILTER_COEFF;
1605:Generated_Source\PSoC4/CapSense_Filter.c ****                 ALP_Run(&ptrFilterHistObj.ptrAlp->channel[freqChannel], ptrAlpFilterConfig, &ptrSen
1606:Generated_Source\PSoC4/CapSense_Filter.c ****             #endif
1607:Generated_Source\PSoC4/CapSense_Filter.c ****         }
1608:Generated_Source\PSoC4/CapSense_Filter.c ****         else
1609:Generated_Source\PSoC4/CapSense_Filter.c ****         {
1610:Generated_Source\PSoC4/CapSense_Filter.c ****             #if (CapSense_PROXIMITY_SENSOR_EN && CapSense_PROX_RC_ALP_FILTER_EN)
1611:Generated_Source\PSoC4/CapSense_Filter.c ****                 ptrAlpFilterConfig->configParam5 = CapSense_PROX_RC_ALP_FILTER_COEFF;
1612:Generated_Source\PSoC4/CapSense_Filter.c ****                 ALP_Run(&ptrFilterHistObj.ptrAlp->channel[freqChannel], ptrAlpFilterConfig, &ptrSen
1613:Generated_Source\PSoC4/CapSense_Filter.c ****             #endif
1614:Generated_Source\PSoC4/CapSense_Filter.c ****         }
1615:Generated_Source\PSoC4/CapSense_Filter.c ****     }
1616:Generated_Source\PSoC4/CapSense_Filter.c **** }
1617:Generated_Source\PSoC4/CapSense_Filter.c **** #endif /* (CapSense_ENABLE == CapSense_ALP_FILTER_EN) */
1618:Generated_Source\PSoC4/CapSense_Filter.c **** 
1619:Generated_Source\PSoC4/CapSense_Filter.c **** #if (CapSense_ENABLE == CapSense_RC_FILTER_EN)
1620:Generated_Source\PSoC4/CapSense_Filter.c **** /*******************************************************************************
1621:Generated_Source\PSoC4/CapSense_Filter.c **** * Function Name: CapSense_FtRunEnabledFilters
1622:Generated_Source\PSoC4/CapSense_Filter.c **** ****************************************************************************//**
1623:Generated_Source\PSoC4/CapSense_Filter.c **** *
1624:Generated_Source\PSoC4/CapSense_Filter.c **** * \brief
1625:Generated_Source\PSoC4/CapSense_Filter.c **** *  Runs all enabled filters.
1626:Generated_Source\PSoC4/CapSense_Filter.c **** *
ARM GAS  C:\Users\mstai\AppData\Local\Temp\cc5JzFax.s 			page 35


1627:Generated_Source\PSoC4/CapSense_Filter.c **** * \details
1628:Generated_Source\PSoC4/CapSense_Filter.c **** *  Runs all enabled filters.
1629:Generated_Source\PSoC4/CapSense_Filter.c **** *
1630:Generated_Source\PSoC4/CapSense_Filter.c **** * \param widgetId
1631:Generated_Source\PSoC4/CapSense_Filter.c **** *  Specifies the ID number of a widget to update the IIR filter history.
1632:Generated_Source\PSoC4/CapSense_Filter.c **** *
1633:Generated_Source\PSoC4/CapSense_Filter.c **** * \param sensorId
1634:Generated_Source\PSoC4/CapSense_Filter.c **** *  Specifies the ID number of a sensor in the widget to update the IIR
1635:Generated_Source\PSoC4/CapSense_Filter.c **** *  filter history.
1636:Generated_Source\PSoC4/CapSense_Filter.c **** *
1637:Generated_Source\PSoC4/CapSense_Filter.c **** *******************************************************************************/
1638:Generated_Source\PSoC4/CapSense_Filter.c **** void CapSense_FtRunEnabledFilters(uint32 widgetId, uint32 sensorId)
1639:Generated_Source\PSoC4/CapSense_Filter.c **** {
1640:Generated_Source\PSoC4/CapSense_Filter.c ****     CapSense_FLASH_WD_STRUCT const *ptrWidget = &CapSense_dsFlash.wdgtArray[widgetId];
1641:Generated_Source\PSoC4/CapSense_Filter.c ****     CapSense_RAM_SNS_STRUCT *ptrSensor = NULL;
1642:Generated_Source\PSoC4/CapSense_Filter.c ****     CapSense_PTR_FILTER_VARIANT ptrFilterHistObj;
1643:Generated_Source\PSoC4/CapSense_Filter.c **** 
1644:Generated_Source\PSoC4/CapSense_Filter.c ****     /* Find pointer to specified sensor object */
1645:Generated_Source\PSoC4/CapSense_Filter.c ****     ptrSensor = ptrWidget->ptr2SnsRam;
1646:Generated_Source\PSoC4/CapSense_Filter.c ****     ptrSensor = &ptrSensor[sensorId];
1647:Generated_Source\PSoC4/CapSense_Filter.c **** 
1648:Generated_Source\PSoC4/CapSense_Filter.c ****     /* Find pointer to specified filter sensor object */
1649:Generated_Source\PSoC4/CapSense_Filter.c ****     ptrFilterHistObj.ptr = ptrWidget->ptr2FltrHistory;
1650:Generated_Source\PSoC4/CapSense_Filter.c **** 
1651:Generated_Source\PSoC4/CapSense_Filter.c ****     if ((CapSense_WD_TYPE_ENUM)ptrWidget->wdgtType != CapSense_WD_PROXIMITY_E)
1652:Generated_Source\PSoC4/CapSense_Filter.c ****     {
1653:Generated_Source\PSoC4/CapSense_Filter.c ****         #if (0u != CapSense_REGULAR_RC_ALP_FILTER_EN)
1654:Generated_Source\PSoC4/CapSense_Filter.c ****             ptrFilterHistObj.ptr = &ptrFilterHistObj.ptrAlp[sensorId];
1655:Generated_Source\PSoC4/CapSense_Filter.c ****         #elif (0u != CapSense_REGULAR_RC_FILTER_EN)
1656:Generated_Source\PSoC4/CapSense_Filter.c ****             ptrFilterHistObj.ptr = &ptrFilterHistObj.ptrRegular[sensorId];
1657:Generated_Source\PSoC4/CapSense_Filter.c ****         #endif
1658:Generated_Source\PSoC4/CapSense_Filter.c ****     }
1659:Generated_Source\PSoC4/CapSense_Filter.c ****     else
1660:Generated_Source\PSoC4/CapSense_Filter.c ****     {
1661:Generated_Source\PSoC4/CapSense_Filter.c ****         #if (0u != CapSense_PROX_RC_ALP_FILTER_EN)
1662:Generated_Source\PSoC4/CapSense_Filter.c ****             ptrFilterHistObj.ptr = &ptrFilterHistObj.ptrAlp[sensorId];
1663:Generated_Source\PSoC4/CapSense_Filter.c ****         #elif (0u != CapSense_PROX_RC_FILTER_EN)
1664:Generated_Source\PSoC4/CapSense_Filter.c ****             ptrFilterHistObj.ptr = &ptrFilterHistObj.ptrProx[sensorId];
1665:Generated_Source\PSoC4/CapSense_Filter.c ****         #endif
1666:Generated_Source\PSoC4/CapSense_Filter.c ****     }
1667:Generated_Source\PSoC4/CapSense_Filter.c **** 
1668:Generated_Source\PSoC4/CapSense_Filter.c ****     CapSense_FtRunEnabledFiltersInternal(ptrFilterHistObj, ptrSensor, (uint32)ptrWidget->wdgtType);
1669:Generated_Source\PSoC4/CapSense_Filter.c ****     #if (CapSense_ALP_FILTER_EN)
1670:Generated_Source\PSoC4/CapSense_Filter.c ****         CapSense_ConfigRunALPInternal(ptrFilterHistObj, ptrWidget->ptr2WdgtRam, ptrSensor, (uint32)
1671:Generated_Source\PSoC4/CapSense_Filter.c ****     #endif
1672:Generated_Source\PSoC4/CapSense_Filter.c **** }
1673:Generated_Source\PSoC4/CapSense_Filter.c **** 
1674:Generated_Source\PSoC4/CapSense_Filter.c **** 
1675:Generated_Source\PSoC4/CapSense_Filter.c **** /*******************************************************************************
1676:Generated_Source\PSoC4/CapSense_Filter.c **** * Function Name: CapSense_FtRunEnabledFiltersInternal
1677:Generated_Source\PSoC4/CapSense_Filter.c **** ****************************************************************************//**
1678:Generated_Source\PSoC4/CapSense_Filter.c **** *
1679:Generated_Source\PSoC4/CapSense_Filter.c **** * \brief
1680:Generated_Source\PSoC4/CapSense_Filter.c **** *  Runs all enabled filters.
1681:Generated_Source\PSoC4/CapSense_Filter.c **** *
1682:Generated_Source\PSoC4/CapSense_Filter.c **** * \details
1683:Generated_Source\PSoC4/CapSense_Filter.c **** *  Runs all enabled filters.
ARM GAS  C:\Users\mstai\AppData\Local\Temp\cc5JzFax.s 			page 36


1684:Generated_Source\PSoC4/CapSense_Filter.c **** *
1685:Generated_Source\PSoC4/CapSense_Filter.c **** * \param ptrFilterHistObj
1686:Generated_Source\PSoC4/CapSense_Filter.c **** *  The pointer to the filter RAM object of the sensor.
1687:Generated_Source\PSoC4/CapSense_Filter.c **** *
1688:Generated_Source\PSoC4/CapSense_Filter.c **** * \param ptrSensorObj
1689:Generated_Source\PSoC4/CapSense_Filter.c **** *  The pointer to the sensor RAM object of the sensor.
1690:Generated_Source\PSoC4/CapSense_Filter.c **** *
1691:Generated_Source\PSoC4/CapSense_Filter.c **** * \param wdType
1692:Generated_Source\PSoC4/CapSense_Filter.c **** *  Specifies the type of a widget.
1693:Generated_Source\PSoC4/CapSense_Filter.c **** *
1694:Generated_Source\PSoC4/CapSense_Filter.c **** *******************************************************************************/
1695:Generated_Source\PSoC4/CapSense_Filter.c **** void CapSense_FtRunEnabledFiltersInternal(CapSense_PTR_FILTER_VARIANT ptrFilterHistObj,
1696:Generated_Source\PSoC4/CapSense_Filter.c ****                                                   CapSense_RAM_SNS_STRUCT *ptrSensorObj, uint32 wdT
1697:Generated_Source\PSoC4/CapSense_Filter.c **** {
1698:Generated_Source\PSoC4/CapSense_Filter.c ****     #if (CapSense_REGULAR_RC_MEDIAN_FILTER_EN || CapSense_PROX_RC_MEDIAN_FILTER_EN)
1699:Generated_Source\PSoC4/CapSense_Filter.c ****         CapSense_RunMedianInternal(ptrFilterHistObj, ptrSensorObj, wdType);
1700:Generated_Source\PSoC4/CapSense_Filter.c ****     #endif /* (CapSense_REGULAR_RC_MEDIAN_FILTER_EN || CapSense_PROX_RC_MEDIAN_FILTER_EN) */
1701:Generated_Source\PSoC4/CapSense_Filter.c **** 
1702:Generated_Source\PSoC4/CapSense_Filter.c ****     #if (CapSense_REGULAR_RC_IIR_FILTER_EN || CapSense_PROX_RC_IIR_FILTER_EN)
1703:Generated_Source\PSoC4/CapSense_Filter.c ****         CapSense_RunIIRInternal(ptrFilterHistObj, ptrSensorObj, wdType);
1704:Generated_Source\PSoC4/CapSense_Filter.c ****     #endif /* (CapSense_REGULAR_RC_IIR_FILTER_EN || CapSense_PROX_RC_IIR_FILTER_EN) */
1705:Generated_Source\PSoC4/CapSense_Filter.c **** 
1706:Generated_Source\PSoC4/CapSense_Filter.c ****     #if (CapSense_REGULAR_RC_AVERAGE_FILTER_EN || CapSense_PROX_RC_AVERAGE_FILTER_EN)
1707:Generated_Source\PSoC4/CapSense_Filter.c ****         CapSense_RunAverageInternal(ptrFilterHistObj, ptrSensorObj, wdType);
1708:Generated_Source\PSoC4/CapSense_Filter.c ****     #endif /* (CapSense_REGULAR_RC_AVERAGE_FILTER_EN || CapSense_PROX_RC_AVERAGE_FILTER_EN) */
1709:Generated_Source\PSoC4/CapSense_Filter.c **** }
1710:Generated_Source\PSoC4/CapSense_Filter.c **** #endif /* (CapSense_ENABLE == CapSense_RC_FILTER_EN) */
1711:Generated_Source\PSoC4/CapSense_Filter.c **** 
1712:Generated_Source\PSoC4/CapSense_Filter.c **** 
1713:Generated_Source\PSoC4/CapSense_Filter.c **** #if (0u != (CapSense_CSD_AUTOTUNE & CapSense_CSD_SS_TH_EN))
1714:Generated_Source\PSoC4/CapSense_Filter.c **** /*******************************************************************************
1715:Generated_Source\PSoC4/CapSense_Filter.c **** * Function Name: CapSense_RunNoiseEnvelope
1716:Generated_Source\PSoC4/CapSense_Filter.c **** ****************************************************************************//**
1717:Generated_Source\PSoC4/CapSense_Filter.c **** *
1718:Generated_Source\PSoC4/CapSense_Filter.c **** * \brief
1719:Generated_Source\PSoC4/CapSense_Filter.c **** *  Executes the noise envelope  filter algorithm on a sensor indicated by
1720:Generated_Source\PSoC4/CapSense_Filter.c **** *  an input parameter to measure the pk-to-pk noise in the sensor raw count.
1721:Generated_Source\PSoC4/CapSense_Filter.c **** *
1722:Generated_Source\PSoC4/CapSense_Filter.c **** * \details
1723:Generated_Source\PSoC4/CapSense_Filter.c **** *  Executes the noise envelope  filter algorithm on a sensor indicated by
1724:Generated_Source\PSoC4/CapSense_Filter.c **** *  an input parameter to measure the pk-to-pk noise in the sensor raw count.
1725:Generated_Source\PSoC4/CapSense_Filter.c **** *
1726:Generated_Source\PSoC4/CapSense_Filter.c **** * \param widgetId
1727:Generated_Source\PSoC4/CapSense_Filter.c **** *  Specifies the ID number of the widget.
1728:Generated_Source\PSoC4/CapSense_Filter.c **** *
1729:Generated_Source\PSoC4/CapSense_Filter.c **** * \param sensorId
1730:Generated_Source\PSoC4/CapSense_Filter.c **** *  Specifies the ID number of the sensor in the widget.
1731:Generated_Source\PSoC4/CapSense_Filter.c **** *
1732:Generated_Source\PSoC4/CapSense_Filter.c **** *******************************************************************************/
1733:Generated_Source\PSoC4/CapSense_Filter.c **** void CapSense_RunNoiseEnvelope(uint32 widgetId, uint32 sensorId)
1734:Generated_Source\PSoC4/CapSense_Filter.c **** {
1735:Generated_Source\PSoC4/CapSense_Filter.c ****     CapSense_FLASH_WD_STRUCT const *ptrWidget = &CapSense_dsFlash.wdgtArray[widgetId];
1736:Generated_Source\PSoC4/CapSense_Filter.c ****     CapSense_RAM_WD_BASE_STRUCT *ptrWidgetRam = ptrWidget->ptr2WdgtRam;
1737:Generated_Source\PSoC4/CapSense_Filter.c ****     CapSense_RAM_SNS_STRUCT *ptrSensor = NULL;
1738:Generated_Source\PSoC4/CapSense_Filter.c ****     SMARTSENSE_CSD_NOISE_ENVELOPE_STRUCT *ptrNoiseEnvelope = NULL;
1739:Generated_Source\PSoC4/CapSense_Filter.c **** 
1740:Generated_Source\PSoC4/CapSense_Filter.c ****     /* Find pointer to specified sensor object */
ARM GAS  C:\Users\mstai\AppData\Local\Temp\cc5JzFax.s 			page 37


1741:Generated_Source\PSoC4/CapSense_Filter.c ****     ptrSensor = ptrWidget->ptr2SnsRam;
1742:Generated_Source\PSoC4/CapSense_Filter.c ****     ptrSensor = &ptrSensor[sensorId];
1743:Generated_Source\PSoC4/CapSense_Filter.c **** 
1744:Generated_Source\PSoC4/CapSense_Filter.c ****     /* Find pointer to specified filter sensor object */
1745:Generated_Source\PSoC4/CapSense_Filter.c ****     ptrNoiseEnvelope = ptrWidget->ptr2NoiseEnvlp;
1746:Generated_Source\PSoC4/CapSense_Filter.c ****     ptrNoiseEnvelope = &ptrNoiseEnvelope[sensorId];
1747:Generated_Source\PSoC4/CapSense_Filter.c **** 
1748:Generated_Source\PSoC4/CapSense_Filter.c ****     SmartSense_RunNoiseEnvelope(ptrSensor->raw[0u], ptrWidgetRam->sigPFC, ptrNoiseEnvelope);
1749:Generated_Source\PSoC4/CapSense_Filter.c **** }
1750:Generated_Source\PSoC4/CapSense_Filter.c **** 
1751:Generated_Source\PSoC4/CapSense_Filter.c **** 
1752:Generated_Source\PSoC4/CapSense_Filter.c **** /*******************************************************************************
1753:Generated_Source\PSoC4/CapSense_Filter.c **** * Function Name: CapSense_InitializeNoiseEnvelope
1754:Generated_Source\PSoC4/CapSense_Filter.c **** ****************************************************************************//**
1755:Generated_Source\PSoC4/CapSense_Filter.c **** *
1756:Generated_Source\PSoC4/CapSense_Filter.c **** * \brief
1757:Generated_Source\PSoC4/CapSense_Filter.c **** *  Initializes the noise-envelope filter
1758:Generated_Source\PSoC4/CapSense_Filter.c **** *
1759:Generated_Source\PSoC4/CapSense_Filter.c **** * \details
1760:Generated_Source\PSoC4/CapSense_Filter.c **** *  Initializes the noise-envelope filter
1761:Generated_Source\PSoC4/CapSense_Filter.c **** *
1762:Generated_Source\PSoC4/CapSense_Filter.c **** * \param widgetId
1763:Generated_Source\PSoC4/CapSense_Filter.c **** *  Specifies the ID number of the widget.
1764:Generated_Source\PSoC4/CapSense_Filter.c **** *
1765:Generated_Source\PSoC4/CapSense_Filter.c **** * \param sensorId
1766:Generated_Source\PSoC4/CapSense_Filter.c **** *  Specifies the ID number of the sensor in the widget.
1767:Generated_Source\PSoC4/CapSense_Filter.c **** *
1768:Generated_Source\PSoC4/CapSense_Filter.c **** *******************************************************************************/
1769:Generated_Source\PSoC4/CapSense_Filter.c **** void CapSense_InitializeNoiseEnvelope(uint32 widgetId, uint32 sensorId)
1770:Generated_Source\PSoC4/CapSense_Filter.c **** {
1771:Generated_Source\PSoC4/CapSense_Filter.c ****     CapSense_FLASH_WD_STRUCT const *ptrWidget = &CapSense_dsFlash.wdgtArray[widgetId];
1772:Generated_Source\PSoC4/CapSense_Filter.c ****     CapSense_RAM_WD_BASE_STRUCT *ptrWidgetRam = ptrWidget->ptr2WdgtRam;
1773:Generated_Source\PSoC4/CapSense_Filter.c ****     CapSense_RAM_SNS_STRUCT *ptrSensor = NULL;
1774:Generated_Source\PSoC4/CapSense_Filter.c ****     SMARTSENSE_CSD_NOISE_ENVELOPE_STRUCT *ptrNoiseEnvelope = NULL;
1775:Generated_Source\PSoC4/CapSense_Filter.c **** 
1776:Generated_Source\PSoC4/CapSense_Filter.c ****     /* Find pointer to specified sensor object */
1777:Generated_Source\PSoC4/CapSense_Filter.c ****     ptrSensor = ptrWidget->ptr2SnsRam;
1778:Generated_Source\PSoC4/CapSense_Filter.c ****     ptrSensor = &ptrSensor[sensorId];
1779:Generated_Source\PSoC4/CapSense_Filter.c **** 
1780:Generated_Source\PSoC4/CapSense_Filter.c ****     /* Find pointer to specified filter sensor object */
1781:Generated_Source\PSoC4/CapSense_Filter.c ****     ptrNoiseEnvelope = ptrWidget->ptr2NoiseEnvlp;
1782:Generated_Source\PSoC4/CapSense_Filter.c ****     ptrNoiseEnvelope = &ptrNoiseEnvelope[sensorId];
1783:Generated_Source\PSoC4/CapSense_Filter.c **** 
1784:Generated_Source\PSoC4/CapSense_Filter.c ****     SmartSense_InitializeNoiseEnvelope(ptrSensor->raw[0u], ptrWidgetRam->sigPFC, ptrNoiseEnvelope);
1785:Generated_Source\PSoC4/CapSense_Filter.c **** }
1786:Generated_Source\PSoC4/CapSense_Filter.c **** #endif /* (0u != (CapSense_CSD_AUTOTUNE & CapSense_CSD_SS_TH_EN)) */
1787:Generated_Source\PSoC4/CapSense_Filter.c **** 
1788:Generated_Source\PSoC4/CapSense_Filter.c **** 
1789:Generated_Source\PSoC4/CapSense_Filter.c **** #if (CapSense_POS_MEDIAN_FILTER_EN || CapSense_REGULAR_RC_MEDIAN_FILTER_EN || CapSense_PROX_RC_MEDI
1790:Generated_Source\PSoC4/CapSense_Filter.c **** /*******************************************************************************
1791:Generated_Source\PSoC4/CapSense_Filter.c **** * Function Name: CapSense_FtMedian
1792:Generated_Source\PSoC4/CapSense_Filter.c **** ****************************************************************************//**
1793:Generated_Source\PSoC4/CapSense_Filter.c **** *
1794:Generated_Source\PSoC4/CapSense_Filter.c **** * \brief
1795:Generated_Source\PSoC4/CapSense_Filter.c **** *  Return the median value from the three passed arguments.
1796:Generated_Source\PSoC4/CapSense_Filter.c **** *
1797:Generated_Source\PSoC4/CapSense_Filter.c **** * \details
ARM GAS  C:\Users\mstai\AppData\Local\Temp\cc5JzFax.s 			page 38


1798:Generated_Source\PSoC4/CapSense_Filter.c **** *  Return the median value from the three passed arguments.
1799:Generated_Source\PSoC4/CapSense_Filter.c **** *
1800:Generated_Source\PSoC4/CapSense_Filter.c **** * \param x1
1801:Generated_Source\PSoC4/CapSense_Filter.c **** *  The first value to be compared.
1802:Generated_Source\PSoC4/CapSense_Filter.c **** *
1803:Generated_Source\PSoC4/CapSense_Filter.c **** * \param x2
1804:Generated_Source\PSoC4/CapSense_Filter.c **** *  The second value to be compared.
1805:Generated_Source\PSoC4/CapSense_Filter.c **** *
1806:Generated_Source\PSoC4/CapSense_Filter.c **** * \param x3
1807:Generated_Source\PSoC4/CapSense_Filter.c **** *  The third value to be compared.
1808:Generated_Source\PSoC4/CapSense_Filter.c **** *
1809:Generated_Source\PSoC4/CapSense_Filter.c **** * \return
1810:Generated_Source\PSoC4/CapSense_Filter.c **** *  Returns the median value of input arguments.
1811:Generated_Source\PSoC4/CapSense_Filter.c **** *
1812:Generated_Source\PSoC4/CapSense_Filter.c **** *******************************************************************************/
1813:Generated_Source\PSoC4/CapSense_Filter.c **** uint32 CapSense_FtMedian(uint32 x1, uint32 x2, uint32 x3)
1814:Generated_Source\PSoC4/CapSense_Filter.c **** {
1815:Generated_Source\PSoC4/CapSense_Filter.c ****     uint32 tmp;
1816:Generated_Source\PSoC4/CapSense_Filter.c **** 
1817:Generated_Source\PSoC4/CapSense_Filter.c ****     if (x1 > x2)
1818:Generated_Source\PSoC4/CapSense_Filter.c ****     {
1819:Generated_Source\PSoC4/CapSense_Filter.c ****         tmp = x2;
1820:Generated_Source\PSoC4/CapSense_Filter.c ****         x2 = x1;
1821:Generated_Source\PSoC4/CapSense_Filter.c ****         x1 = tmp;
1822:Generated_Source\PSoC4/CapSense_Filter.c ****     }
1823:Generated_Source\PSoC4/CapSense_Filter.c **** 
1824:Generated_Source\PSoC4/CapSense_Filter.c ****     if (x2 > x3)
1825:Generated_Source\PSoC4/CapSense_Filter.c ****     {
1826:Generated_Source\PSoC4/CapSense_Filter.c ****         x2 = x3;
1827:Generated_Source\PSoC4/CapSense_Filter.c ****     }
1828:Generated_Source\PSoC4/CapSense_Filter.c **** 
1829:Generated_Source\PSoC4/CapSense_Filter.c ****     return ((x1 > x2) ? x1 : x2);
1830:Generated_Source\PSoC4/CapSense_Filter.c **** }
1831:Generated_Source\PSoC4/CapSense_Filter.c **** #endif /*CapSense_POS_MEDIAN_FILTER_EN || CapSense_REGULAR_RC_MEDIAN_FILTER_EN || CapSense_PROX_RC_
1832:Generated_Source\PSoC4/CapSense_Filter.c **** 
1833:Generated_Source\PSoC4/CapSense_Filter.c **** 
1834:Generated_Source\PSoC4/CapSense_Filter.c **** /*******************************************************************************
1835:Generated_Source\PSoC4/CapSense_Filter.c **** * Function Name: CapSense_FtIIR1stOrder
1836:Generated_Source\PSoC4/CapSense_Filter.c **** ****************************************************************************//**
1837:Generated_Source\PSoC4/CapSense_Filter.c **** *
1838:Generated_Source\PSoC4/CapSense_Filter.c **** * \brief
1839:Generated_Source\PSoC4/CapSense_Filter.c **** *  Return the filtered data by the IIR 1-st order algorithm
1840:Generated_Source\PSoC4/CapSense_Filter.c **** *
1841:Generated_Source\PSoC4/CapSense_Filter.c **** * \details
1842:Generated_Source\PSoC4/CapSense_Filter.c **** *  Return the filtered data by the IIR 1-st order algorithm
1843:Generated_Source\PSoC4/CapSense_Filter.c **** *
1844:Generated_Source\PSoC4/CapSense_Filter.c **** * \param input
1845:Generated_Source\PSoC4/CapSense_Filter.c **** *  The data to be filtered.
1846:Generated_Source\PSoC4/CapSense_Filter.c **** *
1847:Generated_Source\PSoC4/CapSense_Filter.c **** * \param prevOutput
1848:Generated_Source\PSoC4/CapSense_Filter.c **** *  The previous filtered data.
1849:Generated_Source\PSoC4/CapSense_Filter.c **** *
1850:Generated_Source\PSoC4/CapSense_Filter.c **** * \param n
1851:Generated_Source\PSoC4/CapSense_Filter.c **** *  The IIR filter coefficient (n/256).
1852:Generated_Source\PSoC4/CapSense_Filter.c **** *
1853:Generated_Source\PSoC4/CapSense_Filter.c **** * \param shift
1854:Generated_Source\PSoC4/CapSense_Filter.c **** *  The parameter is used to shift input data to have free LSB
ARM GAS  C:\Users\mstai\AppData\Local\Temp\cc5JzFax.s 			page 39


1855:Generated_Source\PSoC4/CapSense_Filter.c **** *  bits for a fraction storage of the filter output calculation.
1856:Generated_Source\PSoC4/CapSense_Filter.c **** *
1857:Generated_Source\PSoC4/CapSense_Filter.c **** * \return
1858:Generated_Source\PSoC4/CapSense_Filter.c **** *  Returns the filtered data.
1859:Generated_Source\PSoC4/CapSense_Filter.c **** *
1860:Generated_Source\PSoC4/CapSense_Filter.c **** *******************************************************************************/
1861:Generated_Source\PSoC4/CapSense_Filter.c **** uint32 CapSense_FtIIR1stOrder(uint32 input, uint32 prevOutput, uint32 n, uint32 shift)
1862:Generated_Source\PSoC4/CapSense_Filter.c **** {
 289              		.loc 1 1862 0
 290              		.cfi_startproc
 291              		@ args = 0, pretend = 0, frame = 0
 292              		@ frame_needed = 0, uses_anonymous_args = 0
 293              		@ link register save eliminated.
 294              	.LVL35:
1863:Generated_Source\PSoC4/CapSense_Filter.c ****     uint32 filteredOutput;
1864:Generated_Source\PSoC4/CapSense_Filter.c **** 
1865:Generated_Source\PSoC4/CapSense_Filter.c ****     /*
1866:Generated_Source\PSoC4/CapSense_Filter.c ****     * n - IIR filter coefficient (n/256)
1867:Generated_Source\PSoC4/CapSense_Filter.c ****     * shift - Used to shift input data to have free LSB bits
1868:Generated_Source\PSoC4/CapSense_Filter.c ****     * for fraction storage of filter output calculation
1869:Generated_Source\PSoC4/CapSense_Filter.c ****     */
1870:Generated_Source\PSoC4/CapSense_Filter.c ****     filteredOutput = ((n * (input << shift)) + ((CapSense_IIR_COEFFICIENT_K - n) * prevOutput)) >> 
 295              		.loc 1 1870 0
 296 0000 9840     		lsls	r0, r0, r3
 297              	.LVL36:
 298 0002 5043     		muls	r0, r2
 299 0004 8023     		movs	r3, #128
 300              	.LVL37:
 301 0006 5B00     		lsls	r3, r3, #1
 302 0008 9A1A     		subs	r2, r3, r2
 303              	.LVL38:
 304 000a 5143     		muls	r1, r2
 305              	.LVL39:
 306 000c 4018     		adds	r0, r0, r1
 307 000e 000A     		lsrs	r0, r0, #8
 308              	.LVL40:
1871:Generated_Source\PSoC4/CapSense_Filter.c **** 
1872:Generated_Source\PSoC4/CapSense_Filter.c ****     /* Shift operation of output will be done in upper level API if needed */
1873:Generated_Source\PSoC4/CapSense_Filter.c ****     return filteredOutput;
1874:Generated_Source\PSoC4/CapSense_Filter.c **** }
 309              		.loc 1 1874 0
 310              		@ sp needed
 311 0010 7047     		bx	lr
 312              		.cfi_endproc
 313              	.LFE11:
 314              		.size	CapSense_FtIIR1stOrder, .-CapSense_FtIIR1stOrder
 315 0012 C046     		.section	.text.CapSense_FtUpdateBaseline,"ax",%progbits
 316              		.align	2
 317              		.global	CapSense_FtUpdateBaseline
 318              		.code	16
 319              		.thumb_func
 320              		.type	CapSense_FtUpdateBaseline, %function
 321              	CapSense_FtUpdateBaseline:
 322              	.LFB5:
 259:Generated_Source\PSoC4/CapSense_Filter.c ****     uint32 sign;
 323              		.loc 1 259 0
 324              		.cfi_startproc
ARM GAS  C:\Users\mstai\AppData\Local\Temp\cc5JzFax.s 			page 40


 325              		@ args = 0, pretend = 0, frame = 8
 326              		@ frame_needed = 0, uses_anonymous_args = 0
 327              	.LVL41:
 328 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 329              		.cfi_def_cfa_offset 20
 330              		.cfi_offset 4, -20
 331              		.cfi_offset 5, -16
 332              		.cfi_offset 6, -12
 333              		.cfi_offset 7, -8
 334              		.cfi_offset 14, -4
 335 0002 4F46     		mov	r7, r9
 336 0004 80B4     		push	{r7}
 337              		.cfi_def_cfa_offset 24
 338              		.cfi_offset 9, -24
 339 0006 82B0     		sub	sp, sp, #8
 340              		.cfi_def_cfa_offset 32
 341 0008 0500     		movs	r5, r0
 342 000a 0E00     		movs	r6, r1
 343 000c 0192     		str	r2, [sp, #4]
 344              	.LVL42:
 264:Generated_Source\PSoC4/CapSense_Filter.c **** 
 345              		.loc 1 264 0
 346 000e 0024     		movs	r4, #0
 271:Generated_Source\PSoC4/CapSense_Filter.c ****     {
 347              		.loc 1 271 0
 348 0010 0123     		movs	r3, #1
 349 0012 4EE0     		b	.L20
 350              	.LVL43:
 351              	.L28:
 274:Generated_Source\PSoC4/CapSense_Filter.c ****             {
 352              		.loc 1 274 0
 353 0014 7B00     		lsls	r3, r7, #1
 354 0016 F318     		adds	r3, r6, r3
 355 0018 9A88     		ldrh	r2, [r3, #4]
 356 001a 5988     		ldrh	r1, [r3, #2]
 357 001c CB43     		mvns	r3, r1
 358 001e 9BB2     		uxth	r3, r3
 359 0020 9A42     		cmp	r2, r3
 360 0022 43D1     		bne	.L29
 283:Generated_Source\PSoC4/CapSense_Filter.c ****         {
 361              		.loc 1 283 0
 362 0024 7B00     		lsls	r3, r7, #1
 363 0026 985B     		ldrh	r0, [r3, r6]
 364 0028 8142     		cmp	r1, r0
 365 002a 06D8     		bhi	.L22
 285:Generated_Source\PSoC4/CapSense_Filter.c ****             sign = 1u;
 366              		.loc 1 285 0
 367 002c 431A     		subs	r3, r0, r1
 368 002e 9946     		mov	r9, r3
 369              	.LVL44:
 287:Generated_Source\PSoC4/CapSense_Filter.c ****         }
 370              		.loc 1 287 0
 371 0030 F219     		adds	r2, r6, r7
 372 0032 0023     		movs	r3, #0
 373              	.LVL45:
 374 0034 9372     		strb	r3, [r2, #10]
 286:Generated_Source\PSoC4/CapSense_Filter.c ****             ptrSensor->negBslnRstCnt[freqChannel] = 0u;
ARM GAS  C:\Users\mstai\AppData\Local\Temp\cc5JzFax.s 			page 41


 375              		.loc 1 286 0
 376 0036 0122     		movs	r2, #1
 377 0038 02E0     		b	.L23
 378              	.LVL46:
 379              	.L22:
 291:Generated_Source\PSoC4/CapSense_Filter.c ****             sign = 0u;
 380              		.loc 1 291 0
 381 003a 0B1A     		subs	r3, r1, r0
 382 003c 9946     		mov	r9, r3
 383              	.LVL47:
 292:Generated_Source\PSoC4/CapSense_Filter.c ****         }
 384              		.loc 1 292 0
 385 003e 0022     		movs	r2, #0
 386              	.LVL48:
 387              	.L23:
 296:Generated_Source\PSoC4/CapSense_Filter.c ****         {
 388              		.loc 1 296 0
 389 0040 002A     		cmp	r2, #0
 390 0042 11D1     		bne	.L24
 296:Generated_Source\PSoC4/CapSense_Filter.c ****         {
 391              		.loc 1 296 0 is_stmt 0 discriminator 1
 392 0044 EB79     		ldrb	r3, [r5, #7]
 393 0046 9945     		cmp	r9, r3
 394 0048 0ED9     		bls	.L24
 298:Generated_Source\PSoC4/CapSense_Filter.c ****             {
 395              		.loc 1 298 0 is_stmt 1
 396 004a F319     		adds	r3, r6, r7
 397 004c 9B7A     		ldrb	r3, [r3, #10]
 398 004e AA7A     		ldrb	r2, [r5, #10]
 399              	.LVL49:
 400 0050 9342     		cmp	r3, r2
 401 0052 05D3     		bcc	.L25
 300:Generated_Source\PSoC4/CapSense_Filter.c ****             }
 402              		.loc 1 300 0
 403 0054 3A00     		movs	r2, r7
 404 0056 0199     		ldr	r1, [sp, #4]
 405 0058 3000     		movs	r0, r6
 406 005a FFF7FEFF 		bl	CapSense_FtInitializeBaselineChannel
 407              	.LVL50:
 408 005e 1FE0     		b	.L26
 409              	.L25:
 304:Generated_Source\PSoC4/CapSense_Filter.c ****             }
 410              		.loc 1 304 0
 411 0060 F219     		adds	r2, r6, r7
 412 0062 0133     		adds	r3, r3, #1
 413 0064 9372     		strb	r3, [r2, #10]
 414 0066 1BE0     		b	.L26
 415              	.LVL51:
 416              	.L24:
 311:Generated_Source\PSoC4/CapSense_Filter.c ****                     ((difference <= (uint32) ptrWidgetRam->nNoiseTh) && (sign == 0u)))
 417              		.loc 1 311 0
 418 0068 AB79     		ldrb	r3, [r5, #6]
 419 006a 9945     		cmp	r9, r3
 420 006c 04D9     		bls	.L27
 312:Generated_Source\PSoC4/CapSense_Filter.c ****                 {
 421              		.loc 1 312 0 discriminator 1
 422 006e EB79     		ldrb	r3, [r5, #7]
ARM GAS  C:\Users\mstai\AppData\Local\Temp\cc5JzFax.s 			page 42


 311:Generated_Source\PSoC4/CapSense_Filter.c ****                     ((difference <= (uint32) ptrWidgetRam->nNoiseTh) && (sign == 0u)))
 423              		.loc 1 311 0 discriminator 1
 424 0070 9945     		cmp	r9, r3
 425 0072 15D8     		bhi	.L26
 312:Generated_Source\PSoC4/CapSense_Filter.c ****                 {
 426              		.loc 1 312 0
 427 0074 002A     		cmp	r2, #0
 428 0076 13D1     		bne	.L26
 429              	.L27:
 318:Generated_Source\PSoC4/CapSense_Filter.c ****                 {
 430              		.loc 1 318 0
 431 0078 FF23     		movs	r3, #255
 432 007a 019A     		ldr	r2, [sp, #4]
 433              	.LVL52:
 434 007c 1340     		ands	r3, r2
 435 007e 062B     		cmp	r3, #6
 436 0080 0ED0     		beq	.L26
 322:Generated_Source\PSoC4/CapSense_Filter.c ****                             history |= ptrSensor->bslnExt[freqChannel];
 437              		.loc 1 322 0
 438 0082 0902     		lsls	r1, r1, #8
 439              	.LVL53:
 323:Generated_Source\PSoC4/CapSense_Filter.c ****                         #else
 440              		.loc 1 323 0
 441 0084 F319     		adds	r3, r6, r7
 442 0086 9946     		mov	r9, r3
 443              	.LVL54:
 444 0088 9B79     		ldrb	r3, [r3, #6]
 445 008a 1943     		orrs	r1, r3
 446              	.LVL55:
 334:Generated_Source\PSoC4/CapSense_Filter.c ****                                         (uint32)ptrSensor->raw[freqChannel],
 447              		.loc 1 334 0
 448 008c 0823     		movs	r3, #8
 449 008e 0122     		movs	r2, #1
 450 0090 FFF7FEFF 		bl	CapSense_FtIIR1stOrder
 451              	.LVL56:
 340:Generated_Source\PSoC4/CapSense_Filter.c ****                             ptrSensor->bslnExt[freqChannel] = LO8(history);
 452              		.loc 1 340 0
 453 0094 020A     		lsrs	r2, r0, #8
 454 0096 7B00     		lsls	r3, r7, #1
 455 0098 F318     		adds	r3, r6, r3
 456 009a 5A80     		strh	r2, [r3, #2]
 341:Generated_Source\PSoC4/CapSense_Filter.c ****                         #else
 457              		.loc 1 341 0
 458 009c 4B46     		mov	r3, r9
 459 009e 9871     		strb	r0, [r3, #6]
 460              	.LVL57:
 461              	.L26:
 392:Generated_Source\PSoC4/CapSense_Filter.c ****             }
 462              		.loc 1 392 0
 463 00a0 7B00     		lsls	r3, r7, #1
 464 00a2 F318     		adds	r3, r6, r3
 465 00a4 5A88     		ldrh	r2, [r3, #2]
 466 00a6 D243     		mvns	r2, r2
 467 00a8 9A80     		strh	r2, [r3, #4]
 468 00aa 01E0     		b	.L21
 469              	.L29:
 276:Generated_Source\PSoC4/CapSense_Filter.c ****             }
ARM GAS  C:\Users\mstai\AppData\Local\Temp\cc5JzFax.s 			page 43


 470              		.loc 1 276 0
 471 00ac 8024     		movs	r4, #128
 472              	.LVL58:
 473 00ae 2406     		lsls	r4, r4, #24
 474              	.L21:
 475 00b0 3B00     		movs	r3, r7
 476              	.LVL59:
 477              	.L20:
 271:Generated_Source\PSoC4/CapSense_Filter.c ****     {
 478              		.loc 1 271 0 discriminator 1
 479 00b2 5F1E     		subs	r7, r3, #1
 480              	.LVL60:
 481 00b4 002B     		cmp	r3, #0
 482 00b6 ADD1     		bne	.L28
 398:Generated_Source\PSoC4/CapSense_Filter.c **** 
 483              		.loc 1 398 0
 484 00b8 2000     		movs	r0, r4
 485 00ba 02B0     		add	sp, sp, #8
 486              		@ sp needed
 487              	.LVL61:
 488              	.LVL62:
 489              	.LVL63:
 490              	.LVL64:
 491 00bc 04BC     		pop	{r2}
 492 00be 9146     		mov	r9, r2
 493 00c0 F0BD     		pop	{r4, r5, r6, r7, pc}
 494              		.cfi_endproc
 495              	.LFE5:
 496              		.size	CapSense_FtUpdateBaseline, .-CapSense_FtUpdateBaseline
 497 00c2 C046     		.section	.text.CapSense_UpdateSensorBaseline,"ax",%progbits
 498              		.align	2
 499              		.global	CapSense_UpdateSensorBaseline
 500              		.code	16
 501              		.thumb_func
 502              		.type	CapSense_UpdateSensorBaseline, %function
 503              	CapSense_UpdateSensorBaseline:
 504              	.LFB4:
 201:Generated_Source\PSoC4/CapSense_Filter.c ****     uint32 result = CYRET_SUCCESS;
 505              		.loc 1 201 0
 506              		.cfi_startproc
 507              		@ args = 0, pretend = 0, frame = 0
 508              		@ frame_needed = 0, uses_anonymous_args = 0
 509              	.LVL65:
 510 0000 70B5     		push	{r4, r5, r6, lr}
 511              		.cfi_def_cfa_offset 16
 512              		.cfi_offset 4, -16
 513              		.cfi_offset 5, -12
 514              		.cfi_offset 6, -8
 515              		.cfi_offset 14, -4
 516 0002 0400     		movs	r4, r0
 517 0004 0D00     		movs	r5, r1
 518              	.LVL66:
 206:Generated_Source\PSoC4/CapSense_Filter.c **** 
 519              		.loc 1 206 0
 520 0006 4301     		lsls	r3, r0, #5
 521 0008 094A     		ldr	r2, .L32
 522 000a D318     		adds	r3, r2, r3
ARM GAS  C:\Users\mstai\AppData\Local\Temp\cc5JzFax.s 			page 44


 523              	.LVL67:
 524 000c 5868     		ldr	r0, [r3, #4]
 525              	.LVL68:
 210:Generated_Source\PSoC4/CapSense_Filter.c ****     result = CapSense_FtUpdateBaseline(ptrWidgetRam, ptrSensor, (uint32)ptrWidget->wdgtType);
 526              		.loc 1 210 0
 527 000e 4A00     		lsls	r2, r1, #1
 528 0010 5218     		adds	r2, r2, r1
 529 0012 9100     		lsls	r1, r2, #2
 530              	.LVL69:
 531 0014 9A68     		ldr	r2, [r3, #8]
 532 0016 9446     		mov	ip, r2
 533 0018 6144     		add	r1, r1, ip
 534              	.LVL70:
 211:Generated_Source\PSoC4/CapSense_Filter.c **** 
 535              		.loc 1 211 0
 536 001a 9A7E     		ldrb	r2, [r3, #26]
 537 001c FFF7FEFF 		bl	CapSense_FtUpdateBaseline
 538              	.LVL71:
 214:Generated_Source\PSoC4/CapSense_Filter.c ****         {
 539              		.loc 1 214 0
 540 0020 0028     		cmp	r0, #0
 541 0022 04D0     		beq	.L31
 542              	.LVL72:
 217:Generated_Source\PSoC4/CapSense_Filter.c ****         }
 543              		.loc 1 217 0
 544 0024 2900     		movs	r1, r5
 545 0026 2000     		movs	r0, r4
 546 0028 FFF7FEFF 		bl	CapSense_UpdateTestResultBaselineDuplication
 547              	.LVL73:
 216:Generated_Source\PSoC4/CapSense_Filter.c ****             CapSense_UpdateTestResultBaselineDuplication(widgetId, sensorId);
 548              		.loc 1 216 0
 549 002c 0620     		movs	r0, #6
 550              	.LVL74:
 551              	.L31:
 222:Generated_Source\PSoC4/CapSense_Filter.c **** 
 552              		.loc 1 222 0
 553              		@ sp needed
 554              	.LVL75:
 555              	.LVL76:
 556 002e 70BD     		pop	{r4, r5, r6, pc}
 557              	.L33:
 558              		.align	2
 559              	.L32:
 560 0030 00000000 		.word	CapSense_dsFlash
 561              		.cfi_endproc
 562              	.LFE4:
 563              		.size	CapSense_UpdateSensorBaseline, .-CapSense_UpdateSensorBaseline
 564              		.section	.text.CapSense_UpdateWidgetBaseline,"ax",%progbits
 565              		.align	2
 566              		.global	CapSense_UpdateWidgetBaseline
 567              		.code	16
 568              		.thumb_func
 569              		.type	CapSense_UpdateWidgetBaseline, %function
 570              	CapSense_UpdateWidgetBaseline:
 571              	.LFB3:
 144:Generated_Source\PSoC4/CapSense_Filter.c ****     uint32 sensorId;
 572              		.loc 1 144 0
ARM GAS  C:\Users\mstai\AppData\Local\Temp\cc5JzFax.s 			page 45


 573              		.cfi_startproc
 574              		@ args = 0, pretend = 0, frame = 0
 575              		@ frame_needed = 0, uses_anonymous_args = 0
 576              	.LVL77:
 577 0000 70B5     		push	{r4, r5, r6, lr}
 578              		.cfi_def_cfa_offset 16
 579              		.cfi_offset 4, -16
 580              		.cfi_offset 5, -12
 581              		.cfi_offset 6, -8
 582              		.cfi_offset 14, -4
 583 0002 0600     		movs	r6, r0
 584              	.LVL78:
 152:Generated_Source\PSoC4/CapSense_Filter.c **** 
 585              		.loc 1 152 0
 586 0004 4301     		lsls	r3, r0, #5
 587 0006 084A     		ldr	r2, .L37
 588 0008 D318     		adds	r3, r2, r3
 589              	.LVL79:
 590 000a 1B8B     		ldrh	r3, [r3, #24]
 591              	.LVL80:
 149:Generated_Source\PSoC4/CapSense_Filter.c **** 
 592              		.loc 1 149 0
 593 000c 0025     		movs	r5, #0
 154:Generated_Source\PSoC4/CapSense_Filter.c ****     {
 594              		.loc 1 154 0
 595 000e 05E0     		b	.L35
 596              	.LVL81:
 597              	.L36:
 156:Generated_Source\PSoC4/CapSense_Filter.c ****     }
 598              		.loc 1 156 0
 599 0010 2100     		movs	r1, r4
 600 0012 3000     		movs	r0, r6
 601 0014 FFF7FEFF 		bl	CapSense_UpdateSensorBaseline
 602              	.LVL82:
 603 0018 0543     		orrs	r5, r0
 604              	.LVL83:
 154:Generated_Source\PSoC4/CapSense_Filter.c ****     {
 605              		.loc 1 154 0
 606 001a 2300     		movs	r3, r4
 607              	.LVL84:
 608              	.L35:
 154:Generated_Source\PSoC4/CapSense_Filter.c ****     {
 609              		.loc 1 154 0 is_stmt 0 discriminator 1
 610 001c 5C1E     		subs	r4, r3, #1
 611              	.LVL85:
 612 001e 002B     		cmp	r3, #0
 613 0020 F6D1     		bne	.L36
 160:Generated_Source\PSoC4/CapSense_Filter.c **** 
 614              		.loc 1 160 0 is_stmt 1
 615 0022 2800     		movs	r0, r5
 616              		@ sp needed
 617              	.LVL86:
 618              	.LVL87:
 619              	.LVL88:
 620 0024 70BD     		pop	{r4, r5, r6, pc}
 621              	.L38:
 622 0026 C046     		.align	2
ARM GAS  C:\Users\mstai\AppData\Local\Temp\cc5JzFax.s 			page 46


 623              	.L37:
 624 0028 00000000 		.word	CapSense_dsFlash
 625              		.cfi_endproc
 626              	.LFE3:
 627              		.size	CapSense_UpdateWidgetBaseline, .-CapSense_UpdateWidgetBaseline
 628              		.section	.text.CapSense_UpdateAllBaselines,"ax",%progbits
 629              		.align	2
 630              		.global	CapSense_UpdateAllBaselines
 631              		.code	16
 632              		.thumb_func
 633              		.type	CapSense_UpdateAllBaselines, %function
 634              	CapSense_UpdateAllBaselines:
 635              	.LFB2:
  98:Generated_Source\PSoC4/CapSense_Filter.c ****     uint32 widgetId;
 636              		.loc 1 98 0
 637              		.cfi_startproc
 638              		@ args = 0, pretend = 0, frame = 0
 639              		@ frame_needed = 0, uses_anonymous_args = 0
 640 0000 70B5     		push	{r4, r5, r6, lr}
 641              		.cfi_def_cfa_offset 16
 642              		.cfi_offset 4, -16
 643              		.cfi_offset 5, -12
 644              		.cfi_offset 6, -8
 645              		.cfi_offset 14, -4
 646              	.LVL89:
 100:Generated_Source\PSoC4/CapSense_Filter.c **** 
 647              		.loc 1 100 0
 648 0002 0024     		movs	r4, #0
 102:Generated_Source\PSoC4/CapSense_Filter.c ****     {
 649              		.loc 1 102 0
 650 0004 0123     		movs	r3, #1
 651 0006 04E0     		b	.L40
 652              	.LVL90:
 653              	.L41:
 104:Generated_Source\PSoC4/CapSense_Filter.c ****     }
 654              		.loc 1 104 0
 655 0008 2800     		movs	r0, r5
 656 000a FFF7FEFF 		bl	CapSense_UpdateWidgetBaseline
 657              	.LVL91:
 658 000e 0443     		orrs	r4, r0
 659              	.LVL92:
 102:Generated_Source\PSoC4/CapSense_Filter.c ****     {
 660              		.loc 1 102 0
 661 0010 2B00     		movs	r3, r5
 662              	.LVL93:
 663              	.L40:
 102:Generated_Source\PSoC4/CapSense_Filter.c ****     {
 664              		.loc 1 102 0 is_stmt 0 discriminator 1
 665 0012 5D1E     		subs	r5, r3, #1
 666              	.LVL94:
 667 0014 002B     		cmp	r3, #0
 668 0016 F7D1     		bne	.L41
 108:Generated_Source\PSoC4/CapSense_Filter.c **** 
 669              		.loc 1 108 0 is_stmt 1
 670 0018 2000     		movs	r0, r4
 671              		@ sp needed
 672              	.LVL95:
ARM GAS  C:\Users\mstai\AppData\Local\Temp\cc5JzFax.s 			page 47


 673              	.LVL96:
 674 001a 70BD     		pop	{r4, r5, r6, pc}
 675              		.cfi_endproc
 676              	.LFE2:
 677              		.size	CapSense_UpdateAllBaselines, .-CapSense_UpdateAllBaselines
 678              		.text
 679              	.Letext0:
 680              		.file 2 "Generated_Source\\PSoC4\\cytypes.h"
 681              		.file 3 "Generated_Source\\PSoC4\\CapSense_Configuration.h"
 682              		.file 4 "Generated_Source\\PSoC4\\CapSense_Structure.h"
 683              		.file 5 "Generated_Source\\PSoC4\\CapSense_SelfTest.h"
 684              		.section	.debug_info,"",%progbits
 685              	.Ldebug_info0:
 686 0000 C6070000 		.4byte	0x7c6
 687 0004 0400     		.2byte	0x4
 688 0006 00000000 		.4byte	.Ldebug_abbrev0
 689 000a 04       		.byte	0x4
 690 000b 01       		.uleb128 0x1
 691 000c C8000000 		.4byte	.LASF89
 692 0010 0C       		.byte	0xc
 693 0011 33060000 		.4byte	.LASF90
 694 0015 CA020000 		.4byte	.LASF91
 695 0019 00000000 		.4byte	.Ldebug_ranges0+0
 696 001d 00000000 		.4byte	0
 697 0021 00000000 		.4byte	.Ldebug_line0
 698 0025 02       		.uleb128 0x2
 699 0026 01       		.byte	0x1
 700 0027 06       		.byte	0x6
 701 0028 3A030000 		.4byte	.LASF0
 702 002c 02       		.uleb128 0x2
 703 002d 01       		.byte	0x1
 704 002e 08       		.byte	0x8
 705 002f 22030000 		.4byte	.LASF1
 706 0033 02       		.uleb128 0x2
 707 0034 02       		.byte	0x2
 708 0035 05       		.byte	0x5
 709 0036 7D000000 		.4byte	.LASF2
 710 003a 02       		.uleb128 0x2
 711 003b 02       		.byte	0x2
 712 003c 07       		.byte	0x7
 713 003d 4A040000 		.4byte	.LASF3
 714 0041 02       		.uleb128 0x2
 715 0042 04       		.byte	0x4
 716 0043 05       		.byte	0x5
 717 0044 7B020000 		.4byte	.LASF4
 718 0048 02       		.uleb128 0x2
 719 0049 04       		.byte	0x4
 720 004a 07       		.byte	0x7
 721 004b F9040000 		.4byte	.LASF5
 722 004f 02       		.uleb128 0x2
 723 0050 08       		.byte	0x8
 724 0051 05       		.byte	0x5
 725 0052 61020000 		.4byte	.LASF6
 726 0056 02       		.uleb128 0x2
 727 0057 08       		.byte	0x8
 728 0058 07       		.byte	0x7
 729 0059 46030000 		.4byte	.LASF7
ARM GAS  C:\Users\mstai\AppData\Local\Temp\cc5JzFax.s 			page 48


 730 005d 03       		.uleb128 0x3
 731 005e 04       		.byte	0x4
 732 005f 05       		.byte	0x5
 733 0060 696E7400 		.ascii	"int\000"
 734 0064 02       		.uleb128 0x2
 735 0065 04       		.byte	0x4
 736 0066 07       		.byte	0x7
 737 0067 6A030000 		.4byte	.LASF8
 738 006b 04       		.uleb128 0x4
 739 006c E2010000 		.4byte	.LASF9
 740 0070 02       		.byte	0x2
 741 0071 E401     		.2byte	0x1e4
 742 0073 2C000000 		.4byte	0x2c
 743 0077 04       		.uleb128 0x4
 744 0078 AD010000 		.4byte	.LASF10
 745 007c 02       		.byte	0x2
 746 007d E501     		.2byte	0x1e5
 747 007f 3A000000 		.4byte	0x3a
 748 0083 04       		.uleb128 0x4
 749 0084 F2040000 		.4byte	.LASF11
 750 0088 02       		.byte	0x2
 751 0089 E601     		.2byte	0x1e6
 752 008b 48000000 		.4byte	0x48
 753 008f 02       		.uleb128 0x2
 754 0090 04       		.byte	0x4
 755 0091 04       		.byte	0x4
 756 0092 5B020000 		.4byte	.LASF12
 757 0096 02       		.uleb128 0x2
 758 0097 08       		.byte	0x8
 759 0098 04       		.byte	0x4
 760 0099 10050000 		.4byte	.LASF13
 761 009d 02       		.uleb128 0x2
 762 009e 01       		.byte	0x1
 763 009f 08       		.byte	0x8
 764 00a0 76020000 		.4byte	.LASF14
 765 00a4 04       		.uleb128 0x4
 766 00a5 10040000 		.4byte	.LASF15
 767 00a9 02       		.byte	0x2
 768 00aa 8602     		.2byte	0x286
 769 00ac 48000000 		.4byte	0x48
 770 00b0 02       		.uleb128 0x2
 771 00b1 08       		.byte	0x8
 772 00b2 04       		.byte	0x4
 773 00b3 16030000 		.4byte	.LASF16
 774 00b7 02       		.uleb128 0x2
 775 00b8 04       		.byte	0x4
 776 00b9 07       		.byte	0x7
 777 00ba 93020000 		.4byte	.LASF17
 778 00be 05       		.uleb128 0x5
 779 00bf 04       		.byte	0x4
 780 00c0 04       		.uleb128 0x4
 781 00c1 DA040000 		.4byte	.LASF18
 782 00c5 03       		.byte	0x3
 783 00c6 1E01     		.2byte	0x11e
 784 00c8 77000000 		.4byte	0x77
 785 00cc 04       		.uleb128 0x4
 786 00cd B9030000 		.4byte	.LASF19
ARM GAS  C:\Users\mstai\AppData\Local\Temp\cc5JzFax.s 			page 49


 787 00d1 03       		.byte	0x3
 788 00d2 2201     		.2byte	0x122
 789 00d4 6B000000 		.4byte	0x6b
 790 00d8 06       		.uleb128 0x6
 791 00d9 01       		.byte	0x1
 792 00da 2C000000 		.4byte	0x2c
 793 00de 04       		.byte	0x4
 794 00df 61       		.byte	0x61
 795 00e0 0F010000 		.4byte	0x10f
 796 00e4 07       		.uleb128 0x7
 797 00e5 90010000 		.4byte	.LASF20
 798 00e9 01       		.byte	0x1
 799 00ea 07       		.uleb128 0x7
 800 00eb 77040000 		.4byte	.LASF21
 801 00ef 02       		.byte	0x2
 802 00f0 07       		.uleb128 0x7
 803 00f1 A6050000 		.4byte	.LASF22
 804 00f5 03       		.byte	0x3
 805 00f6 07       		.uleb128 0x7
 806 00f7 4D050000 		.4byte	.LASF23
 807 00fb 04       		.byte	0x4
 808 00fc 07       		.uleb128 0x7
 809 00fd 8D000000 		.4byte	.LASF24
 810 0101 05       		.byte	0x5
 811 0102 07       		.uleb128 0x7
 812 0103 43020000 		.4byte	.LASF25
 813 0107 06       		.byte	0x6
 814 0108 07       		.uleb128 0x7
 815 0109 5D040000 		.4byte	.LASF26
 816 010d 07       		.byte	0x7
 817 010e 00       		.byte	0
 818 010f 08       		.uleb128 0x8
 819 0110 2C050000 		.4byte	.LASF27
 820 0114 04       		.byte	0x4
 821 0115 69       		.byte	0x69
 822 0116 D8000000 		.4byte	0xd8
 823 011a 09       		.uleb128 0x9
 824 011b 12       		.byte	0x12
 825 011c 04       		.byte	0x4
 826 011d AD       		.byte	0xad
 827 011e B3010000 		.4byte	0x1b3
 828 0122 0A       		.uleb128 0xa
 829 0123 63726300 		.ascii	"crc\000"
 830 0127 04       		.byte	0x4
 831 0128 B2       		.byte	0xb2
 832 0129 77000000 		.4byte	0x77
 833 012d 00       		.byte	0
 834 012e 0B       		.uleb128 0xb
 835 012f 3F040000 		.4byte	.LASF28
 836 0133 04       		.byte	0x4
 837 0134 B7       		.byte	0xb7
 838 0135 77000000 		.4byte	0x77
 839 0139 02       		.byte	0x2
 840 013a 0B       		.uleb128 0xb
 841 013b 9C020000 		.4byte	.LASF29
 842 013f 04       		.byte	0x4
 843 0140 BC       		.byte	0xbc
ARM GAS  C:\Users\mstai\AppData\Local\Temp\cc5JzFax.s 			page 50


 844 0141 C0000000 		.4byte	0xc0
 845 0145 04       		.byte	0x4
 846 0146 0B       		.uleb128 0xb
 847 0147 A5010000 		.4byte	.LASF30
 848 014b 04       		.byte	0x4
 849 014c C1       		.byte	0xc1
 850 014d 6B000000 		.4byte	0x6b
 851 0151 06       		.byte	0x6
 852 0152 0B       		.uleb128 0xb
 853 0153 C3040000 		.4byte	.LASF31
 854 0157 04       		.byte	0x4
 855 0158 C6       		.byte	0xc6
 856 0159 6B000000 		.4byte	0x6b
 857 015d 07       		.byte	0x7
 858 015e 0B       		.uleb128 0xb
 859 015f 0B030000 		.4byte	.LASF32
 860 0163 04       		.byte	0x4
 861 0164 CC       		.byte	0xcc
 862 0165 6B000000 		.4byte	0x6b
 863 0169 08       		.byte	0x8
 864 016a 0B       		.uleb128 0xb
 865 016b BF020000 		.4byte	.LASF33
 866 016f 04       		.byte	0x4
 867 0170 D2       		.byte	0xd2
 868 0171 6B000000 		.4byte	0x6b
 869 0175 09       		.byte	0x9
 870 0176 0B       		.uleb128 0xb
 871 0177 39000000 		.4byte	.LASF34
 872 017b 04       		.byte	0x4
 873 017c D9       		.byte	0xd9
 874 017d CC000000 		.4byte	0xcc
 875 0181 0A       		.byte	0xa
 876 0182 0B       		.uleb128 0xb
 877 0183 75000000 		.4byte	.LASF35
 878 0187 04       		.byte	0x4
 879 0188 E0       		.byte	0xe0
 880 0189 B3010000 		.4byte	0x1b3
 881 018d 0B       		.byte	0xb
 882 018e 0B       		.uleb128 0xb
 883 018f 2B000000 		.4byte	.LASF36
 884 0193 04       		.byte	0x4
 885 0194 E5       		.byte	0xe5
 886 0195 6B000000 		.4byte	0x6b
 887 0199 0C       		.byte	0xc
 888 019a 0B       		.uleb128 0xb
 889 019b 00020000 		.4byte	.LASF37
 890 019f 04       		.byte	0x4
 891 01a0 ED       		.byte	0xed
 892 01a1 77000000 		.4byte	0x77
 893 01a5 0E       		.byte	0xe
 894 01a6 0B       		.uleb128 0xb
 895 01a7 7A010000 		.4byte	.LASF38
 896 01ab 04       		.byte	0x4
 897 01ac F2       		.byte	0xf2
 898 01ad 6B000000 		.4byte	0x6b
 899 01b1 10       		.byte	0x10
 900 01b2 00       		.byte	0
ARM GAS  C:\Users\mstai\AppData\Local\Temp\cc5JzFax.s 			page 51


 901 01b3 0C       		.uleb128 0xc
 902 01b4 6B000000 		.4byte	0x6b
 903 01b8 C3010000 		.4byte	0x1c3
 904 01bc 0D       		.uleb128 0xd
 905 01bd B7000000 		.4byte	0xb7
 906 01c1 00       		.byte	0
 907 01c2 00       		.byte	0
 908 01c3 08       		.uleb128 0x8
 909 01c4 D3050000 		.4byte	.LASF39
 910 01c8 04       		.byte	0x4
 911 01c9 F3       		.byte	0xf3
 912 01ca 1A010000 		.4byte	0x11a
 913 01ce 0E       		.uleb128 0xe
 914 01cf 0C       		.byte	0xc
 915 01d0 04       		.byte	0x4
 916 01d1 5001     		.2byte	0x150
 917 01d3 33020000 		.4byte	0x233
 918 01d7 0F       		.uleb128 0xf
 919 01d8 72617700 		.ascii	"raw\000"
 920 01dc 04       		.byte	0x4
 921 01dd 5501     		.2byte	0x155
 922 01df 33020000 		.4byte	0x233
 923 01e3 00       		.byte	0
 924 01e4 10       		.uleb128 0x10
 925 01e5 1D000000 		.4byte	.LASF40
 926 01e9 04       		.byte	0x4
 927 01ea 5A01     		.2byte	0x15a
 928 01ec 33020000 		.4byte	0x233
 929 01f0 02       		.byte	0x2
 930 01f1 10       		.uleb128 0x10
 931 01f2 19040000 		.4byte	.LASF41
 932 01f6 04       		.byte	0x4
 933 01f7 5F01     		.2byte	0x15f
 934 01f9 33020000 		.4byte	0x233
 935 01fd 04       		.byte	0x4
 936 01fe 10       		.uleb128 0x10
 937 01ff 17050000 		.4byte	.LASF42
 938 0203 04       		.byte	0x4
 939 0204 6501     		.2byte	0x165
 940 0206 B3010000 		.4byte	0x1b3
 941 020a 06       		.byte	0x6
 942 020b 10       		.uleb128 0x10
 943 020c 44000000 		.4byte	.LASF43
 944 0210 04       		.byte	0x4
 945 0211 6A01     		.2byte	0x16a
 946 0213 C0000000 		.4byte	0xc0
 947 0217 08       		.byte	0x8
 948 0218 10       		.uleb128 0x10
 949 0219 A5020000 		.4byte	.LASF44
 950 021d 04       		.byte	0x4
 951 021e 6F01     		.2byte	0x16f
 952 0220 43020000 		.4byte	0x243
 953 0224 0A       		.byte	0xa
 954 0225 10       		.uleb128 0x10
 955 0226 5A010000 		.4byte	.LASF45
 956 022a 04       		.byte	0x4
 957 022b 7401     		.2byte	0x174
ARM GAS  C:\Users\mstai\AppData\Local\Temp\cc5JzFax.s 			page 52


 958 022d B3010000 		.4byte	0x1b3
 959 0231 0B       		.byte	0xb
 960 0232 00       		.byte	0
 961 0233 0C       		.uleb128 0xc
 962 0234 77000000 		.4byte	0x77
 963 0238 43020000 		.4byte	0x243
 964 023c 0D       		.uleb128 0xd
 965 023d B7000000 		.4byte	0xb7
 966 0241 00       		.byte	0
 967 0242 00       		.byte	0
 968 0243 0C       		.uleb128 0xc
 969 0244 CC000000 		.4byte	0xcc
 970 0248 53020000 		.4byte	0x253
 971 024c 0D       		.uleb128 0xd
 972 024d B7000000 		.4byte	0xb7
 973 0251 00       		.byte	0
 974 0252 00       		.byte	0
 975 0253 04       		.uleb128 0x4
 976 0254 A1030000 		.4byte	.LASF46
 977 0258 04       		.byte	0x4
 978 0259 7501     		.2byte	0x175
 979 025b CE010000 		.4byte	0x1ce
 980 025f 0E       		.uleb128 0xe
 981 0260 20       		.byte	0x20
 982 0261 04       		.byte	0x4
 983 0262 3A03     		.2byte	0x33a
 984 0264 EB020000 		.4byte	0x2eb
 985 0268 10       		.uleb128 0x10
 986 0269 26060000 		.4byte	.LASF47
 987 026d 04       		.byte	0x4
 988 026e 4303     		.2byte	0x343
 989 0270 EB020000 		.4byte	0x2eb
 990 0274 00       		.byte	0
 991 0275 10       		.uleb128 0x10
 992 0276 B3020000 		.4byte	.LASF48
 993 027a 04       		.byte	0x4
 994 027b 4A03     		.2byte	0x34a
 995 027d BE000000 		.4byte	0xbe
 996 0281 04       		.byte	0x4
 997 0282 10       		.uleb128 0x10
 998 0283 69050000 		.4byte	.LASF49
 999 0287 04       		.byte	0x4
 1000 0288 5003     		.2byte	0x350
 1001 028a F2020000 		.4byte	0x2f2
 1002 028e 08       		.byte	0x8
 1003 028f 10       		.uleb128 0x10
 1004 0290 96050000 		.4byte	.LASF50
 1005 0294 04       		.byte	0x4
 1006 0295 5603     		.2byte	0x356
 1007 0297 BE000000 		.4byte	0xbe
 1008 029b 0C       		.byte	0xc
 1009 029c 10       		.uleb128 0x10
 1010 029d D2010000 		.4byte	.LASF51
 1011 02a1 04       		.byte	0x4
 1012 02a2 5D03     		.2byte	0x35d
 1013 02a4 F8020000 		.4byte	0x2f8
 1014 02a8 10       		.byte	0x10
ARM GAS  C:\Users\mstai\AppData\Local\Temp\cc5JzFax.s 			page 53


 1015 02a9 10       		.uleb128 0x10
 1016 02aa 5D030000 		.4byte	.LASF52
 1017 02ae 04       		.byte	0x4
 1018 02af 6203     		.2byte	0x362
 1019 02b1 83000000 		.4byte	0x83
 1020 02b5 14       		.byte	0x14
 1021 02b6 10       		.uleb128 0x10
 1022 02b7 49000000 		.4byte	.LASF53
 1023 02bb 04       		.byte	0x4
 1024 02bc 6903     		.2byte	0x369
 1025 02be 77000000 		.4byte	0x77
 1026 02c2 18       		.byte	0x18
 1027 02c3 10       		.uleb128 0x10
 1028 02c4 8A020000 		.4byte	.LASF54
 1029 02c8 04       		.byte	0x4
 1030 02c9 7003     		.2byte	0x370
 1031 02cb 6B000000 		.4byte	0x6b
 1032 02cf 1A       		.byte	0x1a
 1033 02d0 10       		.uleb128 0x10
 1034 02d1 03030000 		.4byte	.LASF55
 1035 02d5 04       		.byte	0x4
 1036 02d6 7A03     		.2byte	0x37a
 1037 02d8 6B000000 		.4byte	0x6b
 1038 02dc 1B       		.byte	0x1b
 1039 02dd 10       		.uleb128 0x10
 1040 02de 1F050000 		.4byte	.LASF56
 1041 02e2 04       		.byte	0x4
 1042 02e3 7F03     		.2byte	0x37f
 1043 02e5 FE020000 		.4byte	0x2fe
 1044 02e9 1C       		.byte	0x1c
 1045 02ea 00       		.byte	0
 1046 02eb 11       		.uleb128 0x11
 1047 02ec 04       		.byte	0x4
 1048 02ed F1020000 		.4byte	0x2f1
 1049 02f1 12       		.uleb128 0x12
 1050 02f2 11       		.uleb128 0x11
 1051 02f3 04       		.byte	0x4
 1052 02f4 53020000 		.4byte	0x253
 1053 02f8 11       		.uleb128 0x11
 1054 02f9 04       		.byte	0x4
 1055 02fa 6B000000 		.4byte	0x6b
 1056 02fe 11       		.uleb128 0x11
 1057 02ff 04       		.byte	0x4
 1058 0300 83000000 		.4byte	0x83
 1059 0304 04       		.uleb128 0x4
 1060 0305 A4000000 		.4byte	.LASF57
 1061 0309 04       		.byte	0x4
 1062 030a 8003     		.2byte	0x380
 1063 030c 5F020000 		.4byte	0x25f
 1064 0310 0E       		.uleb128 0xe
 1065 0311 20       		.byte	0x20
 1066 0312 04       		.byte	0x4
 1067 0313 8603     		.2byte	0x386
 1068 0315 27030000 		.4byte	0x327
 1069 0319 10       		.uleb128 0x10
 1070 031a EF050000 		.4byte	.LASF58
 1071 031e 04       		.byte	0x4
ARM GAS  C:\Users\mstai\AppData\Local\Temp\cc5JzFax.s 			page 54


 1072 031f 8B03     		.2byte	0x38b
 1073 0321 27030000 		.4byte	0x327
 1074 0325 00       		.byte	0
 1075 0326 00       		.byte	0
 1076 0327 0C       		.uleb128 0xc
 1077 0328 04030000 		.4byte	0x304
 1078 032c 37030000 		.4byte	0x337
 1079 0330 0D       		.uleb128 0xd
 1080 0331 B7000000 		.4byte	0xb7
 1081 0335 00       		.byte	0
 1082 0336 00       		.byte	0
 1083 0337 04       		.uleb128 0x4
 1084 0338 00000000 		.4byte	.LASF59
 1085 033c 04       		.byte	0x4
 1086 033d 8C03     		.2byte	0x38c
 1087 033f 10030000 		.4byte	0x310
 1088 0343 13       		.uleb128 0x13
 1089 0344 FA030000 		.4byte	.LASF92
 1090 0348 01       		.byte	0x1
 1091 0349 3E       		.byte	0x3e
 1092 034a 00000000 		.4byte	.LFB1
 1093 034e 02000000 		.4byte	.LFE1-.LFB1
 1094 0352 01       		.uleb128 0x1
 1095 0353 9C       		.byte	0x9c
 1096 0354 14       		.uleb128 0x14
 1097 0355 07020000 		.4byte	.LASF63
 1098 0359 01       		.byte	0x1
 1099 035a 3602     		.2byte	0x236
 1100 035c 00000000 		.4byte	.LFB10
 1101 0360 22000000 		.4byte	.LFE10-.LFB10
 1102 0364 01       		.uleb128 0x1
 1103 0365 9C       		.byte	0x9c
 1104 0366 99030000 		.4byte	0x399
 1105 036a 15       		.uleb128 0x15
 1106 036b F0030000 		.4byte	.LASF60
 1107 036f 01       		.byte	0x1
 1108 0370 3602     		.2byte	0x236
 1109 0372 F2020000 		.4byte	0x2f2
 1110 0376 01       		.uleb128 0x1
 1111 0377 50       		.byte	0x50
 1112 0378 16       		.uleb128 0x16
 1113 0379 6F020000 		.4byte	.LASF61
 1114 037d 01       		.byte	0x1
 1115 037e 3602     		.2byte	0x236
 1116 0380 83000000 		.4byte	0x83
 1117 0384 00000000 		.4byte	.LLST0
 1118 0388 16       		.uleb128 0x16
 1119 0389 93040000 		.4byte	.LASF62
 1120 038d 01       		.byte	0x1
 1121 038e 3602     		.2byte	0x236
 1122 0390 83000000 		.4byte	0x83
 1123 0394 21000000 		.4byte	.LLST1
 1124 0398 00       		.byte	0
 1125 0399 14       		.uleb128 0x14
 1126 039a 21040000 		.4byte	.LASF64
 1127 039e 01       		.byte	0x1
 1128 039f 1402     		.2byte	0x214
ARM GAS  C:\Users\mstai\AppData\Local\Temp\cc5JzFax.s 			page 55


 1129 03a1 00000000 		.4byte	.LFB9
 1130 03a5 1E000000 		.4byte	.LFE9-.LFB9
 1131 03a9 01       		.uleb128 0x1
 1132 03aa 9C       		.byte	0x9c
 1133 03ab FC030000 		.4byte	0x3fc
 1134 03af 16       		.uleb128 0x16
 1135 03b0 F0030000 		.4byte	.LASF60
 1136 03b4 01       		.byte	0x1
 1137 03b5 1402     		.2byte	0x214
 1138 03b7 F2020000 		.4byte	0x2f2
 1139 03bb 42000000 		.4byte	.LLST2
 1140 03bf 16       		.uleb128 0x16
 1141 03c0 6F020000 		.4byte	.LASF61
 1142 03c4 01       		.byte	0x1
 1143 03c5 1402     		.2byte	0x214
 1144 03c7 83000000 		.4byte	0x83
 1145 03cb 6E000000 		.4byte	.LLST3
 1146 03cf 17       		.uleb128 0x17
 1147 03d0 77030000 		.4byte	.LASF68
 1148 03d4 01       		.byte	0x1
 1149 03d5 1602     		.2byte	0x216
 1150 03d7 83000000 		.4byte	0x83
 1151 03db 9A000000 		.4byte	.LLST4
 1152 03df 18       		.uleb128 0x18
 1153 03e0 14000000 		.4byte	.LVL6
 1154 03e4 54030000 		.4byte	0x354
 1155 03e8 19       		.uleb128 0x19
 1156 03e9 01       		.uleb128 0x1
 1157 03ea 50       		.byte	0x50
 1158 03eb 02       		.uleb128 0x2
 1159 03ec 76       		.byte	0x76
 1160 03ed 00       		.sleb128 0
 1161 03ee 19       		.uleb128 0x19
 1162 03ef 01       		.uleb128 0x1
 1163 03f0 51       		.byte	0x51
 1164 03f1 02       		.uleb128 0x2
 1165 03f2 75       		.byte	0x75
 1166 03f3 00       		.sleb128 0
 1167 03f4 19       		.uleb128 0x19
 1168 03f5 01       		.uleb128 0x1
 1169 03f6 52       		.byte	0x52
 1170 03f7 02       		.uleb128 0x2
 1171 03f8 74       		.byte	0x74
 1172 03f9 00       		.sleb128 0
 1173 03fa 00       		.byte	0
 1174 03fb 00       		.byte	0
 1175 03fc 14       		.uleb128 0x14
 1176 03fd 5C060000 		.4byte	.LASF65
 1177 0401 01       		.byte	0x1
 1178 0402 F301     		.2byte	0x1f3
 1179 0404 00000000 		.4byte	.LFB8
 1180 0408 20000000 		.4byte	.LFE8-.LFB8
 1181 040c 01       		.uleb128 0x1
 1182 040d 9C       		.byte	0x9c
 1183 040e 5C040000 		.4byte	0x45c
 1184 0412 16       		.uleb128 0x16
 1185 0413 87010000 		.4byte	.LASF66
ARM GAS  C:\Users\mstai\AppData\Local\Temp\cc5JzFax.s 			page 56


 1186 0417 01       		.byte	0x1
 1187 0418 F301     		.2byte	0x1f3
 1188 041a 83000000 		.4byte	0x83
 1189 041e DC000000 		.4byte	.LLST5
 1190 0422 16       		.uleb128 0x16
 1191 0423 22000000 		.4byte	.LASF67
 1192 0427 01       		.byte	0x1
 1193 0428 F301     		.2byte	0x1f3
 1194 042a 83000000 		.4byte	0x83
 1195 042e FD000000 		.4byte	.LLST6
 1196 0432 17       		.uleb128 0x17
 1197 0433 F0030000 		.4byte	.LASF60
 1198 0437 01       		.byte	0x1
 1199 0438 F501     		.2byte	0x1f5
 1200 043a F2020000 		.4byte	0x2f2
 1201 043e 1E010000 		.4byte	.LLST7
 1202 0442 17       		.uleb128 0x17
 1203 0443 30030000 		.4byte	.LASF69
 1204 0447 01       		.byte	0x1
 1205 0448 F601     		.2byte	0x1f6
 1206 044a 5C040000 		.4byte	0x45c
 1207 044e 49010000 		.4byte	.LLST8
 1208 0452 1A       		.uleb128 0x1a
 1209 0453 1A000000 		.4byte	.LVL18
 1210 0457 99030000 		.4byte	0x399
 1211 045b 00       		.byte	0
 1212 045c 11       		.uleb128 0x11
 1213 045d 04       		.byte	0x4
 1214 045e 62040000 		.4byte	0x462
 1215 0462 1B       		.uleb128 0x1b
 1216 0463 04030000 		.4byte	0x304
 1217 0467 14       		.uleb128 0x14
 1218 0468 74050000 		.4byte	.LASF70
 1219 046c 01       		.byte	0x1
 1220 046d C701     		.2byte	0x1c7
 1221 046f 00000000 		.4byte	.LFB7
 1222 0473 24000000 		.4byte	.LFE7-.LFB7
 1223 0477 01       		.uleb128 0x1
 1224 0478 9C       		.byte	0x9c
 1225 0479 D4040000 		.4byte	0x4d4
 1226 047d 16       		.uleb128 0x16
 1227 047e 87010000 		.4byte	.LASF66
 1228 0482 01       		.byte	0x1
 1229 0483 C701     		.2byte	0x1c7
 1230 0485 83000000 		.4byte	0x83
 1231 0489 5C010000 		.4byte	.LLST9
 1232 048d 17       		.uleb128 0x17
 1233 048e 22000000 		.4byte	.LASF67
 1234 0492 01       		.byte	0x1
 1235 0493 C901     		.2byte	0x1c9
 1236 0495 83000000 		.4byte	0x83
 1237 0499 88010000 		.4byte	.LLST10
 1238 049d 17       		.uleb128 0x17
 1239 049e B5040000 		.4byte	.LASF71
 1240 04a2 01       		.byte	0x1
 1241 04a3 CA01     		.2byte	0x1ca
 1242 04a5 83000000 		.4byte	0x83
ARM GAS  C:\Users\mstai\AppData\Local\Temp\cc5JzFax.s 			page 57


 1243 04a9 C9010000 		.4byte	.LLST11
 1244 04ad 17       		.uleb128 0x17
 1245 04ae 30030000 		.4byte	.LASF69
 1246 04b2 01       		.byte	0x1
 1247 04b3 CC01     		.2byte	0x1cc
 1248 04b5 5C040000 		.4byte	0x45c
 1249 04b9 DC010000 		.4byte	.LLST12
 1250 04bd 18       		.uleb128 0x18
 1251 04be 16000000 		.4byte	.LVL24
 1252 04c2 FC030000 		.4byte	0x3fc
 1253 04c6 19       		.uleb128 0x19
 1254 04c7 01       		.uleb128 0x1
 1255 04c8 50       		.byte	0x50
 1256 04c9 02       		.uleb128 0x2
 1257 04ca 75       		.byte	0x75
 1258 04cb 00       		.sleb128 0
 1259 04cc 19       		.uleb128 0x19
 1260 04cd 01       		.uleb128 0x1
 1261 04ce 51       		.byte	0x51
 1262 04cf 02       		.uleb128 0x2
 1263 04d0 74       		.byte	0x74
 1264 04d1 00       		.sleb128 0
 1265 04d2 00       		.byte	0
 1266 04d3 00       		.byte	0
 1267 04d4 14       		.uleb128 0x14
 1268 04d5 55000000 		.4byte	.LASF72
 1269 04d9 01       		.byte	0x1
 1270 04da A301     		.2byte	0x1a3
 1271 04dc 00000000 		.4byte	.LFB6
 1272 04e0 16000000 		.4byte	.LFE6-.LFB6
 1273 04e4 01       		.uleb128 0x1
 1274 04e5 9C       		.byte	0x9c
 1275 04e6 0B050000 		.4byte	0x50b
 1276 04ea 17       		.uleb128 0x17
 1277 04eb 87010000 		.4byte	.LASF66
 1278 04ef 01       		.byte	0x1
 1279 04f0 A501     		.2byte	0x1a5
 1280 04f2 83000000 		.4byte	0x83
 1281 04f6 EF010000 		.4byte	.LLST13
 1282 04fa 18       		.uleb128 0x18
 1283 04fb 0C000000 		.4byte	.LVL31
 1284 04ff 67040000 		.4byte	0x467
 1285 0503 19       		.uleb128 0x19
 1286 0504 01       		.uleb128 0x1
 1287 0505 50       		.byte	0x50
 1288 0506 02       		.uleb128 0x2
 1289 0507 74       		.byte	0x74
 1290 0508 00       		.sleb128 0
 1291 0509 00       		.byte	0
 1292 050a 00       		.byte	0
 1293 050b 1C       		.uleb128 0x1c
 1294 050c 2C020000 		.4byte	.LASF77
 1295 0510 01       		.byte	0x1
 1296 0511 4507     		.2byte	0x745
 1297 0513 83000000 		.4byte	0x83
 1298 0517 00000000 		.4byte	.LFB11
 1299 051b 12000000 		.4byte	.LFE11-.LFB11
ARM GAS  C:\Users\mstai\AppData\Local\Temp\cc5JzFax.s 			page 58


 1300 051f 01       		.uleb128 0x1
 1301 0520 9C       		.byte	0x9c
 1302 0521 72050000 		.4byte	0x572
 1303 0525 16       		.uleb128 0x16
 1304 0526 87000000 		.4byte	.LASF73
 1305 052a 01       		.byte	0x1
 1306 052b 4507     		.2byte	0x745
 1307 052d 83000000 		.4byte	0x83
 1308 0531 31020000 		.4byte	.LLST14
 1309 0535 16       		.uleb128 0x16
 1310 0536 42050000 		.4byte	.LASF74
 1311 053a 01       		.byte	0x1
 1312 053b 4507     		.2byte	0x745
 1313 053d 83000000 		.4byte	0x83
 1314 0541 52020000 		.4byte	.LLST15
 1315 0545 1D       		.uleb128 0x1d
 1316 0546 6E00     		.ascii	"n\000"
 1317 0548 01       		.byte	0x1
 1318 0549 4507     		.2byte	0x745
 1319 054b 83000000 		.4byte	0x83
 1320 054f 73020000 		.4byte	.LLST16
 1321 0553 16       		.uleb128 0x16
 1322 0554 84020000 		.4byte	.LASF75
 1323 0558 01       		.byte	0x1
 1324 0559 4507     		.2byte	0x745
 1325 055b 83000000 		.4byte	0x83
 1326 055f 94020000 		.4byte	.LLST17
 1327 0563 1E       		.uleb128 0x1e
 1328 0564 63010000 		.4byte	.LASF76
 1329 0568 01       		.byte	0x1
 1330 0569 4707     		.2byte	0x747
 1331 056b 83000000 		.4byte	0x83
 1332 056f 01       		.uleb128 0x1
 1333 0570 50       		.byte	0x50
 1334 0571 00       		.byte	0
 1335 0572 1F       		.uleb128 0x1f
 1336 0573 9B040000 		.4byte	.LASF78
 1337 0577 01       		.byte	0x1
 1338 0578 FF       		.byte	0xff
 1339 0579 83000000 		.4byte	0x83
 1340 057d 00000000 		.4byte	.LFB5
 1341 0581 C2000000 		.4byte	.LFE5-.LFB5
 1342 0585 01       		.uleb128 0x1
 1343 0586 9C       		.byte	0x9c
 1344 0587 51060000 		.4byte	0x651
 1345 058b 16       		.uleb128 0x16
 1346 058c E8010000 		.4byte	.LASF79
 1347 0590 01       		.byte	0x1
 1348 0591 0001     		.2byte	0x100
 1349 0593 51060000 		.4byte	0x651
 1350 0597 B5020000 		.4byte	.LLST18
 1351 059b 16       		.uleb128 0x16
 1352 059c F0030000 		.4byte	.LASF60
 1353 05a0 01       		.byte	0x1
 1354 05a1 0101     		.2byte	0x101
 1355 05a3 F2020000 		.4byte	0x2f2
 1356 05a7 E1020000 		.4byte	.LLST19
ARM GAS  C:\Users\mstai\AppData\Local\Temp\cc5JzFax.s 			page 59


 1357 05ab 16       		.uleb128 0x16
 1358 05ac 6F020000 		.4byte	.LASF61
 1359 05b0 01       		.byte	0x1
 1360 05b1 0201     		.2byte	0x102
 1361 05b3 83000000 		.4byte	0x83
 1362 05b7 0D030000 		.4byte	.LLST20
 1363 05bb 17       		.uleb128 0x17
 1364 05bc 0B050000 		.4byte	.LASF80
 1365 05c0 01       		.byte	0x1
 1366 05c1 0401     		.2byte	0x104
 1367 05c3 83000000 		.4byte	0x83
 1368 05c7 2C030000 		.4byte	.LLST21
 1369 05cb 17       		.uleb128 0x17
 1370 05cc BD000000 		.4byte	.LASF81
 1371 05d0 01       		.byte	0x1
 1372 05d1 0501     		.2byte	0x105
 1373 05d3 83000000 		.4byte	0x83
 1374 05d7 62030000 		.4byte	.LLST22
 1375 05db 17       		.uleb128 0x17
 1376 05dc 77030000 		.4byte	.LASF68
 1377 05e0 01       		.byte	0x1
 1378 05e1 0601     		.2byte	0x106
 1379 05e3 83000000 		.4byte	0x83
 1380 05e7 96030000 		.4byte	.LLST23
 1381 05eb 17       		.uleb128 0x17
 1382 05ec CC040000 		.4byte	.LASF82
 1383 05f0 01       		.byte	0x1
 1384 05f1 0701     		.2byte	0x107
 1385 05f3 83000000 		.4byte	0x83
 1386 05f7 D8030000 		.4byte	.LLST24
 1387 05fb 17       		.uleb128 0x17
 1388 05fc 16000000 		.4byte	.LASF83
 1389 0600 01       		.byte	0x1
 1390 0601 0801     		.2byte	0x108
 1391 0603 83000000 		.4byte	0x83
 1392 0607 EC030000 		.4byte	.LLST25
 1393 060b 17       		.uleb128 0x17
 1394 060c 72010000 		.4byte	.LASF84
 1395 0610 01       		.byte	0x1
 1396 0611 0B01     		.2byte	0x10b
 1397 0613 83000000 		.4byte	0x83
 1398 0617 21040000 		.4byte	.LLST26
 1399 061b 20       		.uleb128 0x20
 1400 061c 5E000000 		.4byte	.LVL50
 1401 0620 54030000 		.4byte	0x354
 1402 0624 3C060000 		.4byte	0x63c
 1403 0628 19       		.uleb128 0x19
 1404 0629 01       		.uleb128 0x1
 1405 062a 50       		.byte	0x50
 1406 062b 02       		.uleb128 0x2
 1407 062c 76       		.byte	0x76
 1408 062d 00       		.sleb128 0
 1409 062e 19       		.uleb128 0x19
 1410 062f 01       		.uleb128 0x1
 1411 0630 51       		.byte	0x51
 1412 0631 03       		.uleb128 0x3
 1413 0632 91       		.byte	0x91
ARM GAS  C:\Users\mstai\AppData\Local\Temp\cc5JzFax.s 			page 60


 1414 0633 64       		.sleb128 -28
 1415 0634 06       		.byte	0x6
 1416 0635 19       		.uleb128 0x19
 1417 0636 01       		.uleb128 0x1
 1418 0637 52       		.byte	0x52
 1419 0638 02       		.uleb128 0x2
 1420 0639 77       		.byte	0x77
 1421 063a 00       		.sleb128 0
 1422 063b 00       		.byte	0
 1423 063c 18       		.uleb128 0x18
 1424 063d 94000000 		.4byte	.LVL56
 1425 0641 0B050000 		.4byte	0x50b
 1426 0645 19       		.uleb128 0x19
 1427 0646 01       		.uleb128 0x1
 1428 0647 52       		.byte	0x52
 1429 0648 01       		.uleb128 0x1
 1430 0649 31       		.byte	0x31
 1431 064a 19       		.uleb128 0x19
 1432 064b 01       		.uleb128 0x1
 1433 064c 53       		.byte	0x53
 1434 064d 01       		.uleb128 0x1
 1435 064e 38       		.byte	0x38
 1436 064f 00       		.byte	0
 1437 0650 00       		.byte	0
 1438 0651 11       		.uleb128 0x11
 1439 0652 04       		.byte	0x4
 1440 0653 C3010000 		.4byte	0x1c3
 1441 0657 1F       		.uleb128 0x1f
 1442 0658 B4010000 		.4byte	.LASF85
 1443 065c 01       		.byte	0x1
 1444 065d C8       		.byte	0xc8
 1445 065e A4000000 		.4byte	0xa4
 1446 0662 00000000 		.4byte	.LFB4
 1447 0666 34000000 		.4byte	.LFE4-.LFB4
 1448 066a 01       		.uleb128 0x1
 1449 066b 9C       		.byte	0x9c
 1450 066c EA060000 		.4byte	0x6ea
 1451 0670 21       		.uleb128 0x21
 1452 0671 87010000 		.4byte	.LASF66
 1453 0675 01       		.byte	0x1
 1454 0676 C8       		.byte	0xc8
 1455 0677 83000000 		.4byte	0x83
 1456 067b 3F040000 		.4byte	.LLST27
 1457 067f 21       		.uleb128 0x21
 1458 0680 22000000 		.4byte	.LASF67
 1459 0684 01       		.byte	0x1
 1460 0685 C8       		.byte	0xc8
 1461 0686 83000000 		.4byte	0x83
 1462 068a 6B040000 		.4byte	.LLST28
 1463 068e 22       		.uleb128 0x22
 1464 068f 16000000 		.4byte	.LASF83
 1465 0693 01       		.byte	0x1
 1466 0694 CA       		.byte	0xca
 1467 0695 83000000 		.4byte	0x83
 1468 0699 97040000 		.4byte	.LLST29
 1469 069d 22       		.uleb128 0x22
 1470 069e F0030000 		.4byte	.LASF60
ARM GAS  C:\Users\mstai\AppData\Local\Temp\cc5JzFax.s 			page 61


 1471 06a2 01       		.byte	0x1
 1472 06a3 CC       		.byte	0xcc
 1473 06a4 F2020000 		.4byte	0x2f2
 1474 06a8 CD040000 		.4byte	.LLST30
 1475 06ac 22       		.uleb128 0x22
 1476 06ad 30030000 		.4byte	.LASF69
 1477 06b1 01       		.byte	0x1
 1478 06b2 CD       		.byte	0xcd
 1479 06b3 5C040000 		.4byte	0x45c
 1480 06b7 F8040000 		.4byte	.LLST31
 1481 06bb 22       		.uleb128 0x22
 1482 06bc E8010000 		.4byte	.LASF79
 1483 06c0 01       		.byte	0x1
 1484 06c1 CE       		.byte	0xce
 1485 06c2 51060000 		.4byte	0x651
 1486 06c6 0B050000 		.4byte	.LLST32
 1487 06ca 1A       		.uleb128 0x1a
 1488 06cb 20000000 		.4byte	.LVL71
 1489 06cf 72050000 		.4byte	0x572
 1490 06d3 18       		.uleb128 0x18
 1491 06d4 2C000000 		.4byte	.LVL73
 1492 06d8 BE070000 		.4byte	0x7be
 1493 06dc 19       		.uleb128 0x19
 1494 06dd 01       		.uleb128 0x1
 1495 06de 50       		.byte	0x50
 1496 06df 02       		.uleb128 0x2
 1497 06e0 74       		.byte	0x74
 1498 06e1 00       		.sleb128 0
 1499 06e2 19       		.uleb128 0x19
 1500 06e3 01       		.uleb128 0x1
 1501 06e4 51       		.byte	0x51
 1502 06e5 02       		.uleb128 0x2
 1503 06e6 75       		.byte	0x75
 1504 06e7 00       		.sleb128 0
 1505 06e8 00       		.byte	0
 1506 06e9 00       		.byte	0
 1507 06ea 1F       		.uleb128 0x1f
 1508 06eb 83030000 		.4byte	.LASF86
 1509 06ef 01       		.byte	0x1
 1510 06f0 8F       		.byte	0x8f
 1511 06f1 A4000000 		.4byte	0xa4
 1512 06f5 00000000 		.4byte	.LFB3
 1513 06f9 2C000000 		.4byte	.LFE3-.LFB3
 1514 06fd 01       		.uleb128 0x1
 1515 06fe 9C       		.byte	0x9c
 1516 06ff 65070000 		.4byte	0x765
 1517 0703 21       		.uleb128 0x21
 1518 0704 87010000 		.4byte	.LASF66
 1519 0708 01       		.byte	0x1
 1520 0709 8F       		.byte	0x8f
 1521 070a 83000000 		.4byte	0x83
 1522 070e 1E050000 		.4byte	.LLST33
 1523 0712 22       		.uleb128 0x22
 1524 0713 22000000 		.4byte	.LASF67
 1525 0717 01       		.byte	0x1
 1526 0718 91       		.byte	0x91
 1527 0719 83000000 		.4byte	0x83
ARM GAS  C:\Users\mstai\AppData\Local\Temp\cc5JzFax.s 			page 62


 1528 071d 4A050000 		.4byte	.LLST34
 1529 0721 22       		.uleb128 0x22
 1530 0722 B5040000 		.4byte	.LASF71
 1531 0726 01       		.byte	0x1
 1532 0727 92       		.byte	0x92
 1533 0728 83000000 		.4byte	0x83
 1534 072c 8B050000 		.4byte	.LLST35
 1535 0730 22       		.uleb128 0x22
 1536 0731 30030000 		.4byte	.LASF69
 1537 0735 01       		.byte	0x1
 1538 0736 94       		.byte	0x94
 1539 0737 5C040000 		.4byte	0x45c
 1540 073b 9E050000 		.4byte	.LLST36
 1541 073f 22       		.uleb128 0x22
 1542 0740 F5010000 		.4byte	.LASF87
 1543 0744 01       		.byte	0x1
 1544 0745 95       		.byte	0x95
 1545 0746 A4000000 		.4byte	0xa4
 1546 074a B1050000 		.4byte	.LLST37
 1547 074e 18       		.uleb128 0x18
 1548 074f 18000000 		.4byte	.LVL82
 1549 0753 57060000 		.4byte	0x657
 1550 0757 19       		.uleb128 0x19
 1551 0758 01       		.uleb128 0x1
 1552 0759 50       		.byte	0x50
 1553 075a 02       		.uleb128 0x2
 1554 075b 76       		.byte	0x76
 1555 075c 00       		.sleb128 0
 1556 075d 19       		.uleb128 0x19
 1557 075e 01       		.uleb128 0x1
 1558 075f 51       		.byte	0x51
 1559 0760 02       		.uleb128 0x2
 1560 0761 74       		.byte	0x74
 1561 0762 00       		.sleb128 0
 1562 0763 00       		.byte	0
 1563 0764 00       		.byte	0
 1564 0765 1F       		.uleb128 0x1f
 1565 0766 D4030000 		.4byte	.LASF88
 1566 076a 01       		.byte	0x1
 1567 076b 61       		.byte	0x61
 1568 076c A4000000 		.4byte	0xa4
 1569 0770 00000000 		.4byte	.LFB2
 1570 0774 1C000000 		.4byte	.LFE2-.LFB2
 1571 0778 01       		.uleb128 0x1
 1572 0779 9C       		.byte	0x9c
 1573 077a AD070000 		.4byte	0x7ad
 1574 077e 22       		.uleb128 0x22
 1575 077f 87010000 		.4byte	.LASF66
 1576 0783 01       		.byte	0x1
 1577 0784 63       		.byte	0x63
 1578 0785 83000000 		.4byte	0x83
 1579 0789 DB050000 		.4byte	.LLST38
 1580 078d 22       		.uleb128 0x22
 1581 078e F5010000 		.4byte	.LASF87
 1582 0792 01       		.byte	0x1
 1583 0793 64       		.byte	0x64
 1584 0794 A4000000 		.4byte	0xa4
ARM GAS  C:\Users\mstai\AppData\Local\Temp\cc5JzFax.s 			page 63


 1585 0798 1D060000 		.4byte	.LLST39
 1586 079c 18       		.uleb128 0x18
 1587 079d 0E000000 		.4byte	.LVL91
 1588 07a1 EA060000 		.4byte	0x6ea
 1589 07a5 19       		.uleb128 0x19
 1590 07a6 01       		.uleb128 0x1
 1591 07a7 50       		.byte	0x50
 1592 07a8 02       		.uleb128 0x2
 1593 07a9 75       		.byte	0x75
 1594 07aa 00       		.sleb128 0
 1595 07ab 00       		.byte	0
 1596 07ac 00       		.byte	0
 1597 07ad 23       		.uleb128 0x23
 1598 07ae C2050000 		.4byte	.LASF93
 1599 07b2 04       		.byte	0x4
 1600 07b3 2105     		.2byte	0x521
 1601 07b5 B9070000 		.4byte	0x7b9
 1602 07b9 1B       		.uleb128 0x1b
 1603 07ba 37030000 		.4byte	0x337
 1604 07be 24       		.uleb128 0x24
 1605 07bf F9050000 		.4byte	.LASF94
 1606 07c3 F9050000 		.4byte	.LASF94
 1607 07c7 05       		.byte	0x5
 1608 07c8 89       		.byte	0x89
 1609 07c9 00       		.byte	0
 1610              		.section	.debug_abbrev,"",%progbits
 1611              	.Ldebug_abbrev0:
 1612 0000 01       		.uleb128 0x1
 1613 0001 11       		.uleb128 0x11
 1614 0002 01       		.byte	0x1
 1615 0003 25       		.uleb128 0x25
 1616 0004 0E       		.uleb128 0xe
 1617 0005 13       		.uleb128 0x13
 1618 0006 0B       		.uleb128 0xb
 1619 0007 03       		.uleb128 0x3
 1620 0008 0E       		.uleb128 0xe
 1621 0009 1B       		.uleb128 0x1b
 1622 000a 0E       		.uleb128 0xe
 1623 000b 55       		.uleb128 0x55
 1624 000c 17       		.uleb128 0x17
 1625 000d 11       		.uleb128 0x11
 1626 000e 01       		.uleb128 0x1
 1627 000f 10       		.uleb128 0x10
 1628 0010 17       		.uleb128 0x17
 1629 0011 00       		.byte	0
 1630 0012 00       		.byte	0
 1631 0013 02       		.uleb128 0x2
 1632 0014 24       		.uleb128 0x24
 1633 0015 00       		.byte	0
 1634 0016 0B       		.uleb128 0xb
 1635 0017 0B       		.uleb128 0xb
 1636 0018 3E       		.uleb128 0x3e
 1637 0019 0B       		.uleb128 0xb
 1638 001a 03       		.uleb128 0x3
 1639 001b 0E       		.uleb128 0xe
 1640 001c 00       		.byte	0
 1641 001d 00       		.byte	0
ARM GAS  C:\Users\mstai\AppData\Local\Temp\cc5JzFax.s 			page 64


 1642 001e 03       		.uleb128 0x3
 1643 001f 24       		.uleb128 0x24
 1644 0020 00       		.byte	0
 1645 0021 0B       		.uleb128 0xb
 1646 0022 0B       		.uleb128 0xb
 1647 0023 3E       		.uleb128 0x3e
 1648 0024 0B       		.uleb128 0xb
 1649 0025 03       		.uleb128 0x3
 1650 0026 08       		.uleb128 0x8
 1651 0027 00       		.byte	0
 1652 0028 00       		.byte	0
 1653 0029 04       		.uleb128 0x4
 1654 002a 16       		.uleb128 0x16
 1655 002b 00       		.byte	0
 1656 002c 03       		.uleb128 0x3
 1657 002d 0E       		.uleb128 0xe
 1658 002e 3A       		.uleb128 0x3a
 1659 002f 0B       		.uleb128 0xb
 1660 0030 3B       		.uleb128 0x3b
 1661 0031 05       		.uleb128 0x5
 1662 0032 49       		.uleb128 0x49
 1663 0033 13       		.uleb128 0x13
 1664 0034 00       		.byte	0
 1665 0035 00       		.byte	0
 1666 0036 05       		.uleb128 0x5
 1667 0037 0F       		.uleb128 0xf
 1668 0038 00       		.byte	0
 1669 0039 0B       		.uleb128 0xb
 1670 003a 0B       		.uleb128 0xb
 1671 003b 00       		.byte	0
 1672 003c 00       		.byte	0
 1673 003d 06       		.uleb128 0x6
 1674 003e 04       		.uleb128 0x4
 1675 003f 01       		.byte	0x1
 1676 0040 0B       		.uleb128 0xb
 1677 0041 0B       		.uleb128 0xb
 1678 0042 49       		.uleb128 0x49
 1679 0043 13       		.uleb128 0x13
 1680 0044 3A       		.uleb128 0x3a
 1681 0045 0B       		.uleb128 0xb
 1682 0046 3B       		.uleb128 0x3b
 1683 0047 0B       		.uleb128 0xb
 1684 0048 01       		.uleb128 0x1
 1685 0049 13       		.uleb128 0x13
 1686 004a 00       		.byte	0
 1687 004b 00       		.byte	0
 1688 004c 07       		.uleb128 0x7
 1689 004d 28       		.uleb128 0x28
 1690 004e 00       		.byte	0
 1691 004f 03       		.uleb128 0x3
 1692 0050 0E       		.uleb128 0xe
 1693 0051 1C       		.uleb128 0x1c
 1694 0052 0B       		.uleb128 0xb
 1695 0053 00       		.byte	0
 1696 0054 00       		.byte	0
 1697 0055 08       		.uleb128 0x8
 1698 0056 16       		.uleb128 0x16
ARM GAS  C:\Users\mstai\AppData\Local\Temp\cc5JzFax.s 			page 65


 1699 0057 00       		.byte	0
 1700 0058 03       		.uleb128 0x3
 1701 0059 0E       		.uleb128 0xe
 1702 005a 3A       		.uleb128 0x3a
 1703 005b 0B       		.uleb128 0xb
 1704 005c 3B       		.uleb128 0x3b
 1705 005d 0B       		.uleb128 0xb
 1706 005e 49       		.uleb128 0x49
 1707 005f 13       		.uleb128 0x13
 1708 0060 00       		.byte	0
 1709 0061 00       		.byte	0
 1710 0062 09       		.uleb128 0x9
 1711 0063 13       		.uleb128 0x13
 1712 0064 01       		.byte	0x1
 1713 0065 0B       		.uleb128 0xb
 1714 0066 0B       		.uleb128 0xb
 1715 0067 3A       		.uleb128 0x3a
 1716 0068 0B       		.uleb128 0xb
 1717 0069 3B       		.uleb128 0x3b
 1718 006a 0B       		.uleb128 0xb
 1719 006b 01       		.uleb128 0x1
 1720 006c 13       		.uleb128 0x13
 1721 006d 00       		.byte	0
 1722 006e 00       		.byte	0
 1723 006f 0A       		.uleb128 0xa
 1724 0070 0D       		.uleb128 0xd
 1725 0071 00       		.byte	0
 1726 0072 03       		.uleb128 0x3
 1727 0073 08       		.uleb128 0x8
 1728 0074 3A       		.uleb128 0x3a
 1729 0075 0B       		.uleb128 0xb
 1730 0076 3B       		.uleb128 0x3b
 1731 0077 0B       		.uleb128 0xb
 1732 0078 49       		.uleb128 0x49
 1733 0079 13       		.uleb128 0x13
 1734 007a 38       		.uleb128 0x38
 1735 007b 0B       		.uleb128 0xb
 1736 007c 00       		.byte	0
 1737 007d 00       		.byte	0
 1738 007e 0B       		.uleb128 0xb
 1739 007f 0D       		.uleb128 0xd
 1740 0080 00       		.byte	0
 1741 0081 03       		.uleb128 0x3
 1742 0082 0E       		.uleb128 0xe
 1743 0083 3A       		.uleb128 0x3a
 1744 0084 0B       		.uleb128 0xb
 1745 0085 3B       		.uleb128 0x3b
 1746 0086 0B       		.uleb128 0xb
 1747 0087 49       		.uleb128 0x49
 1748 0088 13       		.uleb128 0x13
 1749 0089 38       		.uleb128 0x38
 1750 008a 0B       		.uleb128 0xb
 1751 008b 00       		.byte	0
 1752 008c 00       		.byte	0
 1753 008d 0C       		.uleb128 0xc
 1754 008e 01       		.uleb128 0x1
 1755 008f 01       		.byte	0x1
ARM GAS  C:\Users\mstai\AppData\Local\Temp\cc5JzFax.s 			page 66


 1756 0090 49       		.uleb128 0x49
 1757 0091 13       		.uleb128 0x13
 1758 0092 01       		.uleb128 0x1
 1759 0093 13       		.uleb128 0x13
 1760 0094 00       		.byte	0
 1761 0095 00       		.byte	0
 1762 0096 0D       		.uleb128 0xd
 1763 0097 21       		.uleb128 0x21
 1764 0098 00       		.byte	0
 1765 0099 49       		.uleb128 0x49
 1766 009a 13       		.uleb128 0x13
 1767 009b 2F       		.uleb128 0x2f
 1768 009c 0B       		.uleb128 0xb
 1769 009d 00       		.byte	0
 1770 009e 00       		.byte	0
 1771 009f 0E       		.uleb128 0xe
 1772 00a0 13       		.uleb128 0x13
 1773 00a1 01       		.byte	0x1
 1774 00a2 0B       		.uleb128 0xb
 1775 00a3 0B       		.uleb128 0xb
 1776 00a4 3A       		.uleb128 0x3a
 1777 00a5 0B       		.uleb128 0xb
 1778 00a6 3B       		.uleb128 0x3b
 1779 00a7 05       		.uleb128 0x5
 1780 00a8 01       		.uleb128 0x1
 1781 00a9 13       		.uleb128 0x13
 1782 00aa 00       		.byte	0
 1783 00ab 00       		.byte	0
 1784 00ac 0F       		.uleb128 0xf
 1785 00ad 0D       		.uleb128 0xd
 1786 00ae 00       		.byte	0
 1787 00af 03       		.uleb128 0x3
 1788 00b0 08       		.uleb128 0x8
 1789 00b1 3A       		.uleb128 0x3a
 1790 00b2 0B       		.uleb128 0xb
 1791 00b3 3B       		.uleb128 0x3b
 1792 00b4 05       		.uleb128 0x5
 1793 00b5 49       		.uleb128 0x49
 1794 00b6 13       		.uleb128 0x13
 1795 00b7 38       		.uleb128 0x38
 1796 00b8 0B       		.uleb128 0xb
 1797 00b9 00       		.byte	0
 1798 00ba 00       		.byte	0
 1799 00bb 10       		.uleb128 0x10
 1800 00bc 0D       		.uleb128 0xd
 1801 00bd 00       		.byte	0
 1802 00be 03       		.uleb128 0x3
 1803 00bf 0E       		.uleb128 0xe
 1804 00c0 3A       		.uleb128 0x3a
 1805 00c1 0B       		.uleb128 0xb
 1806 00c2 3B       		.uleb128 0x3b
 1807 00c3 05       		.uleb128 0x5
 1808 00c4 49       		.uleb128 0x49
 1809 00c5 13       		.uleb128 0x13
 1810 00c6 38       		.uleb128 0x38
 1811 00c7 0B       		.uleb128 0xb
 1812 00c8 00       		.byte	0
ARM GAS  C:\Users\mstai\AppData\Local\Temp\cc5JzFax.s 			page 67


 1813 00c9 00       		.byte	0
 1814 00ca 11       		.uleb128 0x11
 1815 00cb 0F       		.uleb128 0xf
 1816 00cc 00       		.byte	0
 1817 00cd 0B       		.uleb128 0xb
 1818 00ce 0B       		.uleb128 0xb
 1819 00cf 49       		.uleb128 0x49
 1820 00d0 13       		.uleb128 0x13
 1821 00d1 00       		.byte	0
 1822 00d2 00       		.byte	0
 1823 00d3 12       		.uleb128 0x12
 1824 00d4 26       		.uleb128 0x26
 1825 00d5 00       		.byte	0
 1826 00d6 00       		.byte	0
 1827 00d7 00       		.byte	0
 1828 00d8 13       		.uleb128 0x13
 1829 00d9 2E       		.uleb128 0x2e
 1830 00da 00       		.byte	0
 1831 00db 3F       		.uleb128 0x3f
 1832 00dc 19       		.uleb128 0x19
 1833 00dd 03       		.uleb128 0x3
 1834 00de 0E       		.uleb128 0xe
 1835 00df 3A       		.uleb128 0x3a
 1836 00e0 0B       		.uleb128 0xb
 1837 00e1 3B       		.uleb128 0x3b
 1838 00e2 0B       		.uleb128 0xb
 1839 00e3 27       		.uleb128 0x27
 1840 00e4 19       		.uleb128 0x19
 1841 00e5 11       		.uleb128 0x11
 1842 00e6 01       		.uleb128 0x1
 1843 00e7 12       		.uleb128 0x12
 1844 00e8 06       		.uleb128 0x6
 1845 00e9 40       		.uleb128 0x40
 1846 00ea 18       		.uleb128 0x18
 1847 00eb 9742     		.uleb128 0x2117
 1848 00ed 19       		.uleb128 0x19
 1849 00ee 00       		.byte	0
 1850 00ef 00       		.byte	0
 1851 00f0 14       		.uleb128 0x14
 1852 00f1 2E       		.uleb128 0x2e
 1853 00f2 01       		.byte	0x1
 1854 00f3 3F       		.uleb128 0x3f
 1855 00f4 19       		.uleb128 0x19
 1856 00f5 03       		.uleb128 0x3
 1857 00f6 0E       		.uleb128 0xe
 1858 00f7 3A       		.uleb128 0x3a
 1859 00f8 0B       		.uleb128 0xb
 1860 00f9 3B       		.uleb128 0x3b
 1861 00fa 05       		.uleb128 0x5
 1862 00fb 27       		.uleb128 0x27
 1863 00fc 19       		.uleb128 0x19
 1864 00fd 11       		.uleb128 0x11
 1865 00fe 01       		.uleb128 0x1
 1866 00ff 12       		.uleb128 0x12
 1867 0100 06       		.uleb128 0x6
 1868 0101 40       		.uleb128 0x40
 1869 0102 18       		.uleb128 0x18
ARM GAS  C:\Users\mstai\AppData\Local\Temp\cc5JzFax.s 			page 68


 1870 0103 9742     		.uleb128 0x2117
 1871 0105 19       		.uleb128 0x19
 1872 0106 01       		.uleb128 0x1
 1873 0107 13       		.uleb128 0x13
 1874 0108 00       		.byte	0
 1875 0109 00       		.byte	0
 1876 010a 15       		.uleb128 0x15
 1877 010b 05       		.uleb128 0x5
 1878 010c 00       		.byte	0
 1879 010d 03       		.uleb128 0x3
 1880 010e 0E       		.uleb128 0xe
 1881 010f 3A       		.uleb128 0x3a
 1882 0110 0B       		.uleb128 0xb
 1883 0111 3B       		.uleb128 0x3b
 1884 0112 05       		.uleb128 0x5
 1885 0113 49       		.uleb128 0x49
 1886 0114 13       		.uleb128 0x13
 1887 0115 02       		.uleb128 0x2
 1888 0116 18       		.uleb128 0x18
 1889 0117 00       		.byte	0
 1890 0118 00       		.byte	0
 1891 0119 16       		.uleb128 0x16
 1892 011a 05       		.uleb128 0x5
 1893 011b 00       		.byte	0
 1894 011c 03       		.uleb128 0x3
 1895 011d 0E       		.uleb128 0xe
 1896 011e 3A       		.uleb128 0x3a
 1897 011f 0B       		.uleb128 0xb
 1898 0120 3B       		.uleb128 0x3b
 1899 0121 05       		.uleb128 0x5
 1900 0122 49       		.uleb128 0x49
 1901 0123 13       		.uleb128 0x13
 1902 0124 02       		.uleb128 0x2
 1903 0125 17       		.uleb128 0x17
 1904 0126 00       		.byte	0
 1905 0127 00       		.byte	0
 1906 0128 17       		.uleb128 0x17
 1907 0129 34       		.uleb128 0x34
 1908 012a 00       		.byte	0
 1909 012b 03       		.uleb128 0x3
 1910 012c 0E       		.uleb128 0xe
 1911 012d 3A       		.uleb128 0x3a
 1912 012e 0B       		.uleb128 0xb
 1913 012f 3B       		.uleb128 0x3b
 1914 0130 05       		.uleb128 0x5
 1915 0131 49       		.uleb128 0x49
 1916 0132 13       		.uleb128 0x13
 1917 0133 02       		.uleb128 0x2
 1918 0134 17       		.uleb128 0x17
 1919 0135 00       		.byte	0
 1920 0136 00       		.byte	0
 1921 0137 18       		.uleb128 0x18
 1922 0138 898201   		.uleb128 0x4109
 1923 013b 01       		.byte	0x1
 1924 013c 11       		.uleb128 0x11
 1925 013d 01       		.uleb128 0x1
 1926 013e 31       		.uleb128 0x31
ARM GAS  C:\Users\mstai\AppData\Local\Temp\cc5JzFax.s 			page 69


 1927 013f 13       		.uleb128 0x13
 1928 0140 00       		.byte	0
 1929 0141 00       		.byte	0
 1930 0142 19       		.uleb128 0x19
 1931 0143 8A8201   		.uleb128 0x410a
 1932 0146 00       		.byte	0
 1933 0147 02       		.uleb128 0x2
 1934 0148 18       		.uleb128 0x18
 1935 0149 9142     		.uleb128 0x2111
 1936 014b 18       		.uleb128 0x18
 1937 014c 00       		.byte	0
 1938 014d 00       		.byte	0
 1939 014e 1A       		.uleb128 0x1a
 1940 014f 898201   		.uleb128 0x4109
 1941 0152 00       		.byte	0
 1942 0153 11       		.uleb128 0x11
 1943 0154 01       		.uleb128 0x1
 1944 0155 31       		.uleb128 0x31
 1945 0156 13       		.uleb128 0x13
 1946 0157 00       		.byte	0
 1947 0158 00       		.byte	0
 1948 0159 1B       		.uleb128 0x1b
 1949 015a 26       		.uleb128 0x26
 1950 015b 00       		.byte	0
 1951 015c 49       		.uleb128 0x49
 1952 015d 13       		.uleb128 0x13
 1953 015e 00       		.byte	0
 1954 015f 00       		.byte	0
 1955 0160 1C       		.uleb128 0x1c
 1956 0161 2E       		.uleb128 0x2e
 1957 0162 01       		.byte	0x1
 1958 0163 3F       		.uleb128 0x3f
 1959 0164 19       		.uleb128 0x19
 1960 0165 03       		.uleb128 0x3
 1961 0166 0E       		.uleb128 0xe
 1962 0167 3A       		.uleb128 0x3a
 1963 0168 0B       		.uleb128 0xb
 1964 0169 3B       		.uleb128 0x3b
 1965 016a 05       		.uleb128 0x5
 1966 016b 27       		.uleb128 0x27
 1967 016c 19       		.uleb128 0x19
 1968 016d 49       		.uleb128 0x49
 1969 016e 13       		.uleb128 0x13
 1970 016f 11       		.uleb128 0x11
 1971 0170 01       		.uleb128 0x1
 1972 0171 12       		.uleb128 0x12
 1973 0172 06       		.uleb128 0x6
 1974 0173 40       		.uleb128 0x40
 1975 0174 18       		.uleb128 0x18
 1976 0175 9742     		.uleb128 0x2117
 1977 0177 19       		.uleb128 0x19
 1978 0178 01       		.uleb128 0x1
 1979 0179 13       		.uleb128 0x13
 1980 017a 00       		.byte	0
 1981 017b 00       		.byte	0
 1982 017c 1D       		.uleb128 0x1d
 1983 017d 05       		.uleb128 0x5
ARM GAS  C:\Users\mstai\AppData\Local\Temp\cc5JzFax.s 			page 70


 1984 017e 00       		.byte	0
 1985 017f 03       		.uleb128 0x3
 1986 0180 08       		.uleb128 0x8
 1987 0181 3A       		.uleb128 0x3a
 1988 0182 0B       		.uleb128 0xb
 1989 0183 3B       		.uleb128 0x3b
 1990 0184 05       		.uleb128 0x5
 1991 0185 49       		.uleb128 0x49
 1992 0186 13       		.uleb128 0x13
 1993 0187 02       		.uleb128 0x2
 1994 0188 17       		.uleb128 0x17
 1995 0189 00       		.byte	0
 1996 018a 00       		.byte	0
 1997 018b 1E       		.uleb128 0x1e
 1998 018c 34       		.uleb128 0x34
 1999 018d 00       		.byte	0
 2000 018e 03       		.uleb128 0x3
 2001 018f 0E       		.uleb128 0xe
 2002 0190 3A       		.uleb128 0x3a
 2003 0191 0B       		.uleb128 0xb
 2004 0192 3B       		.uleb128 0x3b
 2005 0193 05       		.uleb128 0x5
 2006 0194 49       		.uleb128 0x49
 2007 0195 13       		.uleb128 0x13
 2008 0196 02       		.uleb128 0x2
 2009 0197 18       		.uleb128 0x18
 2010 0198 00       		.byte	0
 2011 0199 00       		.byte	0
 2012 019a 1F       		.uleb128 0x1f
 2013 019b 2E       		.uleb128 0x2e
 2014 019c 01       		.byte	0x1
 2015 019d 3F       		.uleb128 0x3f
 2016 019e 19       		.uleb128 0x19
 2017 019f 03       		.uleb128 0x3
 2018 01a0 0E       		.uleb128 0xe
 2019 01a1 3A       		.uleb128 0x3a
 2020 01a2 0B       		.uleb128 0xb
 2021 01a3 3B       		.uleb128 0x3b
 2022 01a4 0B       		.uleb128 0xb
 2023 01a5 27       		.uleb128 0x27
 2024 01a6 19       		.uleb128 0x19
 2025 01a7 49       		.uleb128 0x49
 2026 01a8 13       		.uleb128 0x13
 2027 01a9 11       		.uleb128 0x11
 2028 01aa 01       		.uleb128 0x1
 2029 01ab 12       		.uleb128 0x12
 2030 01ac 06       		.uleb128 0x6
 2031 01ad 40       		.uleb128 0x40
 2032 01ae 18       		.uleb128 0x18
 2033 01af 9742     		.uleb128 0x2117
 2034 01b1 19       		.uleb128 0x19
 2035 01b2 01       		.uleb128 0x1
 2036 01b3 13       		.uleb128 0x13
 2037 01b4 00       		.byte	0
 2038 01b5 00       		.byte	0
 2039 01b6 20       		.uleb128 0x20
 2040 01b7 898201   		.uleb128 0x4109
ARM GAS  C:\Users\mstai\AppData\Local\Temp\cc5JzFax.s 			page 71


 2041 01ba 01       		.byte	0x1
 2042 01bb 11       		.uleb128 0x11
 2043 01bc 01       		.uleb128 0x1
 2044 01bd 31       		.uleb128 0x31
 2045 01be 13       		.uleb128 0x13
 2046 01bf 01       		.uleb128 0x1
 2047 01c0 13       		.uleb128 0x13
 2048 01c1 00       		.byte	0
 2049 01c2 00       		.byte	0
 2050 01c3 21       		.uleb128 0x21
 2051 01c4 05       		.uleb128 0x5
 2052 01c5 00       		.byte	0
 2053 01c6 03       		.uleb128 0x3
 2054 01c7 0E       		.uleb128 0xe
 2055 01c8 3A       		.uleb128 0x3a
 2056 01c9 0B       		.uleb128 0xb
 2057 01ca 3B       		.uleb128 0x3b
 2058 01cb 0B       		.uleb128 0xb
 2059 01cc 49       		.uleb128 0x49
 2060 01cd 13       		.uleb128 0x13
 2061 01ce 02       		.uleb128 0x2
 2062 01cf 17       		.uleb128 0x17
 2063 01d0 00       		.byte	0
 2064 01d1 00       		.byte	0
 2065 01d2 22       		.uleb128 0x22
 2066 01d3 34       		.uleb128 0x34
 2067 01d4 00       		.byte	0
 2068 01d5 03       		.uleb128 0x3
 2069 01d6 0E       		.uleb128 0xe
 2070 01d7 3A       		.uleb128 0x3a
 2071 01d8 0B       		.uleb128 0xb
 2072 01d9 3B       		.uleb128 0x3b
 2073 01da 0B       		.uleb128 0xb
 2074 01db 49       		.uleb128 0x49
 2075 01dc 13       		.uleb128 0x13
 2076 01dd 02       		.uleb128 0x2
 2077 01de 17       		.uleb128 0x17
 2078 01df 00       		.byte	0
 2079 01e0 00       		.byte	0
 2080 01e1 23       		.uleb128 0x23
 2081 01e2 34       		.uleb128 0x34
 2082 01e3 00       		.byte	0
 2083 01e4 03       		.uleb128 0x3
 2084 01e5 0E       		.uleb128 0xe
 2085 01e6 3A       		.uleb128 0x3a
 2086 01e7 0B       		.uleb128 0xb
 2087 01e8 3B       		.uleb128 0x3b
 2088 01e9 05       		.uleb128 0x5
 2089 01ea 49       		.uleb128 0x49
 2090 01eb 13       		.uleb128 0x13
 2091 01ec 3F       		.uleb128 0x3f
 2092 01ed 19       		.uleb128 0x19
 2093 01ee 3C       		.uleb128 0x3c
 2094 01ef 19       		.uleb128 0x19
 2095 01f0 00       		.byte	0
 2096 01f1 00       		.byte	0
 2097 01f2 24       		.uleb128 0x24
ARM GAS  C:\Users\mstai\AppData\Local\Temp\cc5JzFax.s 			page 72


 2098 01f3 2E       		.uleb128 0x2e
 2099 01f4 00       		.byte	0
 2100 01f5 3F       		.uleb128 0x3f
 2101 01f6 19       		.uleb128 0x19
 2102 01f7 3C       		.uleb128 0x3c
 2103 01f8 19       		.uleb128 0x19
 2104 01f9 6E       		.uleb128 0x6e
 2105 01fa 0E       		.uleb128 0xe
 2106 01fb 03       		.uleb128 0x3
 2107 01fc 0E       		.uleb128 0xe
 2108 01fd 3A       		.uleb128 0x3a
 2109 01fe 0B       		.uleb128 0xb
 2110 01ff 3B       		.uleb128 0x3b
 2111 0200 0B       		.uleb128 0xb
 2112 0201 00       		.byte	0
 2113 0202 00       		.byte	0
 2114 0203 00       		.byte	0
 2115              		.section	.debug_loc,"",%progbits
 2116              	.Ldebug_loc0:
 2117              	.LLST0:
 2118 0000 00000000 		.4byte	.LVL0
 2119 0004 04000000 		.4byte	.LVL1
 2120 0008 0100     		.2byte	0x1
 2121 000a 51       		.byte	0x51
 2122 000b 04000000 		.4byte	.LVL1
 2123 000f 22000000 		.4byte	.LFE10
 2124 0013 0400     		.2byte	0x4
 2125 0015 F3       		.byte	0xf3
 2126 0016 01       		.uleb128 0x1
 2127 0017 51       		.byte	0x51
 2128 0018 9F       		.byte	0x9f
 2129 0019 00000000 		.4byte	0
 2130 001d 00000000 		.4byte	0
 2131              	.LLST1:
 2132 0021 00000000 		.4byte	.LVL0
 2133 0025 1C000000 		.4byte	.LVL2
 2134 0029 0100     		.2byte	0x1
 2135 002b 52       		.byte	0x52
 2136 002c 1C000000 		.4byte	.LVL2
 2137 0030 22000000 		.4byte	.LFE10
 2138 0034 0400     		.2byte	0x4
 2139 0036 F3       		.byte	0xf3
 2140 0037 01       		.uleb128 0x1
 2141 0038 52       		.byte	0x52
 2142 0039 9F       		.byte	0x9f
 2143 003a 00000000 		.4byte	0
 2144 003e 00000000 		.4byte	0
 2145              	.LLST2:
 2146 0042 00000000 		.4byte	.LVL3
 2147 0046 0A000000 		.4byte	.LVL5
 2148 004a 0100     		.2byte	0x1
 2149 004c 50       		.byte	0x50
 2150 004d 0A000000 		.4byte	.LVL5
 2151 0051 1C000000 		.4byte	.LVL11
 2152 0055 0100     		.2byte	0x1
 2153 0057 56       		.byte	0x56
 2154 0058 1C000000 		.4byte	.LVL11
ARM GAS  C:\Users\mstai\AppData\Local\Temp\cc5JzFax.s 			page 73


 2155 005c 1E000000 		.4byte	.LFE9
 2156 0060 0400     		.2byte	0x4
 2157 0062 F3       		.byte	0xf3
 2158 0063 01       		.uleb128 0x1
 2159 0064 50       		.byte	0x50
 2160 0065 9F       		.byte	0x9f
 2161 0066 00000000 		.4byte	0
 2162 006a 00000000 		.4byte	0
 2163              	.LLST3:
 2164 006e 00000000 		.4byte	.LVL3
 2165 0072 0A000000 		.4byte	.LVL5
 2166 0076 0100     		.2byte	0x1
 2167 0078 51       		.byte	0x51
 2168 0079 0A000000 		.4byte	.LVL5
 2169 007d 1C000000 		.4byte	.LVL10
 2170 0081 0100     		.2byte	0x1
 2171 0083 55       		.byte	0x55
 2172 0084 1C000000 		.4byte	.LVL10
 2173 0088 1E000000 		.4byte	.LFE9
 2174 008c 0400     		.2byte	0x4
 2175 008e F3       		.byte	0xf3
 2176 008f 01       		.uleb128 0x1
 2177 0090 51       		.byte	0x51
 2178 0091 9F       		.byte	0x9f
 2179 0092 00000000 		.4byte	0
 2180 0096 00000000 		.4byte	0
 2181              	.LLST4:
 2182 009a 06000000 		.4byte	.LVL4
 2183 009e 0A000000 		.4byte	.LVL5
 2184 00a2 0200     		.2byte	0x2
 2185 00a4 31       		.byte	0x31
 2186 00a5 9F       		.byte	0x9f
 2187 00a6 0A000000 		.4byte	.LVL5
 2188 00aa 16000000 		.4byte	.LVL7
 2189 00ae 0100     		.2byte	0x1
 2190 00b0 54       		.byte	0x54
 2191 00b1 16000000 		.4byte	.LVL7
 2192 00b5 18000000 		.4byte	.LVL8
 2193 00b9 0100     		.2byte	0x1
 2194 00bb 53       		.byte	0x53
 2195 00bc 18000000 		.4byte	.LVL8
 2196 00c0 1C000000 		.4byte	.LVL9
 2197 00c4 0100     		.2byte	0x1
 2198 00c6 54       		.byte	0x54
 2199 00c7 1C000000 		.4byte	.LVL9
 2200 00cb 1E000000 		.4byte	.LFE9
 2201 00cf 0300     		.2byte	0x3
 2202 00d1 73       		.byte	0x73
 2203 00d2 7F       		.sleb128 -1
 2204 00d3 9F       		.byte	0x9f
 2205 00d4 00000000 		.4byte	0
 2206 00d8 00000000 		.4byte	0
 2207              	.LLST5:
 2208 00dc 00000000 		.4byte	.LVL12
 2209 00e0 04000000 		.4byte	.LVL14
 2210 00e4 0100     		.2byte	0x1
 2211 00e6 50       		.byte	0x50
ARM GAS  C:\Users\mstai\AppData\Local\Temp\cc5JzFax.s 			page 74


 2212 00e7 04000000 		.4byte	.LVL14
 2213 00eb 20000000 		.4byte	.LFE8
 2214 00ef 0400     		.2byte	0x4
 2215 00f1 F3       		.byte	0xf3
 2216 00f2 01       		.uleb128 0x1
 2217 00f3 50       		.byte	0x50
 2218 00f4 9F       		.byte	0x9f
 2219 00f5 00000000 		.4byte	0
 2220 00f9 00000000 		.4byte	0
 2221              	.LLST6:
 2222 00fd 00000000 		.4byte	.LVL12
 2223 0101 0C000000 		.4byte	.LVL16
 2224 0105 0100     		.2byte	0x1
 2225 0107 51       		.byte	0x51
 2226 0108 0C000000 		.4byte	.LVL16
 2227 010c 20000000 		.4byte	.LFE8
 2228 0110 0400     		.2byte	0x4
 2229 0112 F3       		.byte	0xf3
 2230 0113 01       		.uleb128 0x1
 2231 0114 51       		.byte	0x51
 2232 0115 9F       		.byte	0x9f
 2233 0116 00000000 		.4byte	0
 2234 011a 00000000 		.4byte	0
 2235              	.LLST7:
 2236 011e 02000000 		.4byte	.LVL13
 2237 0122 08000000 		.4byte	.LVL15
 2238 0126 0200     		.2byte	0x2
 2239 0128 30       		.byte	0x30
 2240 0129 9F       		.byte	0x9f
 2241 012a 08000000 		.4byte	.LVL15
 2242 012e 14000000 		.4byte	.LVL17
 2243 0132 0200     		.2byte	0x2
 2244 0134 73       		.byte	0x73
 2245 0135 08       		.sleb128 8
 2246 0136 14000000 		.4byte	.LVL17
 2247 013a 19000000 		.4byte	.LVL18-1
 2248 013e 0100     		.2byte	0x1
 2249 0140 50       		.byte	0x50
 2250 0141 00000000 		.4byte	0
 2251 0145 00000000 		.4byte	0
 2252              	.LLST8:
 2253 0149 08000000 		.4byte	.LVL15
 2254 014d 19000000 		.4byte	.LVL18-1
 2255 0151 0100     		.2byte	0x1
 2256 0153 53       		.byte	0x53
 2257 0154 00000000 		.4byte	0
 2258 0158 00000000 		.4byte	0
 2259              	.LLST9:
 2260 015c 00000000 		.4byte	.LVL19
 2261 0160 0E000000 		.4byte	.LVL23
 2262 0164 0100     		.2byte	0x1
 2263 0166 50       		.byte	0x50
 2264 0167 0E000000 		.4byte	.LVL23
 2265 016b 1E000000 		.4byte	.LVL28
 2266 016f 0100     		.2byte	0x1
 2267 0171 55       		.byte	0x55
 2268 0172 1E000000 		.4byte	.LVL28
ARM GAS  C:\Users\mstai\AppData\Local\Temp\cc5JzFax.s 			page 75


 2269 0176 24000000 		.4byte	.LFE7
 2270 017a 0400     		.2byte	0x4
 2271 017c F3       		.byte	0xf3
 2272 017d 01       		.uleb128 0x1
 2273 017e 50       		.byte	0x50
 2274 017f 9F       		.byte	0x9f
 2275 0180 00000000 		.4byte	0
 2276 0184 00000000 		.4byte	0
 2277              	.LLST10:
 2278 0188 0C000000 		.4byte	.LVL22
 2279 018c 0E000000 		.4byte	.LVL23
 2280 0190 0100     		.2byte	0x1
 2281 0192 53       		.byte	0x53
 2282 0193 0E000000 		.4byte	.LVL23
 2283 0197 18000000 		.4byte	.LVL25
 2284 019b 0100     		.2byte	0x1
 2285 019d 54       		.byte	0x54
 2286 019e 18000000 		.4byte	.LVL25
 2287 01a2 1A000000 		.4byte	.LVL26
 2288 01a6 0100     		.2byte	0x1
 2289 01a8 53       		.byte	0x53
 2290 01a9 1A000000 		.4byte	.LVL26
 2291 01ad 1E000000 		.4byte	.LVL27
 2292 01b1 0100     		.2byte	0x1
 2293 01b3 54       		.byte	0x54
 2294 01b4 1E000000 		.4byte	.LVL27
 2295 01b8 24000000 		.4byte	.LFE7
 2296 01bc 0300     		.2byte	0x3
 2297 01be 73       		.byte	0x73
 2298 01bf 7F       		.sleb128 -1
 2299 01c0 9F       		.byte	0x9f
 2300 01c1 00000000 		.4byte	0
 2301 01c5 00000000 		.4byte	0
 2302              	.LLST11:
 2303 01c9 0C000000 		.4byte	.LVL22
 2304 01cd 0E000000 		.4byte	.LVL23
 2305 01d1 0100     		.2byte	0x1
 2306 01d3 53       		.byte	0x53
 2307 01d4 00000000 		.4byte	0
 2308 01d8 00000000 		.4byte	0
 2309              	.LLST12:
 2310 01dc 0A000000 		.4byte	.LVL21
 2311 01e0 0C000000 		.4byte	.LVL22
 2312 01e4 0100     		.2byte	0x1
 2313 01e6 53       		.byte	0x53
 2314 01e7 00000000 		.4byte	0
 2315 01eb 00000000 		.4byte	0
 2316              	.LLST13:
 2317 01ef 02000000 		.4byte	.LVL29
 2318 01f3 06000000 		.4byte	.LVL30
 2319 01f7 0200     		.2byte	0x2
 2320 01f9 31       		.byte	0x31
 2321 01fa 9F       		.byte	0x9f
 2322 01fb 06000000 		.4byte	.LVL30
 2323 01ff 0E000000 		.4byte	.LVL32
 2324 0203 0100     		.2byte	0x1
 2325 0205 54       		.byte	0x54
ARM GAS  C:\Users\mstai\AppData\Local\Temp\cc5JzFax.s 			page 76


 2326 0206 0E000000 		.4byte	.LVL32
 2327 020a 10000000 		.4byte	.LVL33
 2328 020e 0100     		.2byte	0x1
 2329 0210 53       		.byte	0x53
 2330 0211 10000000 		.4byte	.LVL33
 2331 0215 14000000 		.4byte	.LVL34
 2332 0219 0100     		.2byte	0x1
 2333 021b 54       		.byte	0x54
 2334 021c 14000000 		.4byte	.LVL34
 2335 0220 16000000 		.4byte	.LFE6
 2336 0224 0300     		.2byte	0x3
 2337 0226 73       		.byte	0x73
 2338 0227 7F       		.sleb128 -1
 2339 0228 9F       		.byte	0x9f
 2340 0229 00000000 		.4byte	0
 2341 022d 00000000 		.4byte	0
 2342              	.LLST14:
 2343 0231 00000000 		.4byte	.LVL35
 2344 0235 02000000 		.4byte	.LVL36
 2345 0239 0100     		.2byte	0x1
 2346 023b 50       		.byte	0x50
 2347 023c 02000000 		.4byte	.LVL36
 2348 0240 12000000 		.4byte	.LFE11
 2349 0244 0400     		.2byte	0x4
 2350 0246 F3       		.byte	0xf3
 2351 0247 01       		.uleb128 0x1
 2352 0248 50       		.byte	0x50
 2353 0249 9F       		.byte	0x9f
 2354 024a 00000000 		.4byte	0
 2355 024e 00000000 		.4byte	0
 2356              	.LLST15:
 2357 0252 00000000 		.4byte	.LVL35
 2358 0256 0C000000 		.4byte	.LVL39
 2359 025a 0100     		.2byte	0x1
 2360 025c 51       		.byte	0x51
 2361 025d 0C000000 		.4byte	.LVL39
 2362 0261 12000000 		.4byte	.LFE11
 2363 0265 0400     		.2byte	0x4
 2364 0267 F3       		.byte	0xf3
 2365 0268 01       		.uleb128 0x1
 2366 0269 51       		.byte	0x51
 2367 026a 9F       		.byte	0x9f
 2368 026b 00000000 		.4byte	0
 2369 026f 00000000 		.4byte	0
 2370              	.LLST16:
 2371 0273 00000000 		.4byte	.LVL35
 2372 0277 0A000000 		.4byte	.LVL38
 2373 027b 0100     		.2byte	0x1
 2374 027d 52       		.byte	0x52
 2375 027e 0A000000 		.4byte	.LVL38
 2376 0282 12000000 		.4byte	.LFE11
 2377 0286 0400     		.2byte	0x4
 2378 0288 F3       		.byte	0xf3
 2379 0289 01       		.uleb128 0x1
 2380 028a 52       		.byte	0x52
 2381 028b 9F       		.byte	0x9f
 2382 028c 00000000 		.4byte	0
ARM GAS  C:\Users\mstai\AppData\Local\Temp\cc5JzFax.s 			page 77


 2383 0290 00000000 		.4byte	0
 2384              	.LLST17:
 2385 0294 00000000 		.4byte	.LVL35
 2386 0298 06000000 		.4byte	.LVL37
 2387 029c 0100     		.2byte	0x1
 2388 029e 53       		.byte	0x53
 2389 029f 06000000 		.4byte	.LVL37
 2390 02a3 12000000 		.4byte	.LFE11
 2391 02a7 0400     		.2byte	0x4
 2392 02a9 F3       		.byte	0xf3
 2393 02aa 01       		.uleb128 0x1
 2394 02ab 53       		.byte	0x53
 2395 02ac 9F       		.byte	0x9f
 2396 02ad 00000000 		.4byte	0
 2397 02b1 00000000 		.4byte	0
 2398              	.LLST18:
 2399 02b5 00000000 		.4byte	.LVL41
 2400 02b9 14000000 		.4byte	.LVL43
 2401 02bd 0100     		.2byte	0x1
 2402 02bf 50       		.byte	0x50
 2403 02c0 14000000 		.4byte	.LVL43
 2404 02c4 BC000000 		.4byte	.LVL62
 2405 02c8 0100     		.2byte	0x1
 2406 02ca 55       		.byte	0x55
 2407 02cb BC000000 		.4byte	.LVL62
 2408 02cf C2000000 		.4byte	.LFE5
 2409 02d3 0400     		.2byte	0x4
 2410 02d5 F3       		.byte	0xf3
 2411 02d6 01       		.uleb128 0x1
 2412 02d7 50       		.byte	0x50
 2413 02d8 9F       		.byte	0x9f
 2414 02d9 00000000 		.4byte	0
 2415 02dd 00000000 		.4byte	0
 2416              	.LLST19:
 2417 02e1 00000000 		.4byte	.LVL41
 2418 02e5 14000000 		.4byte	.LVL43
 2419 02e9 0100     		.2byte	0x1
 2420 02eb 51       		.byte	0x51
 2421 02ec 14000000 		.4byte	.LVL43
 2422 02f0 BC000000 		.4byte	.LVL63
 2423 02f4 0100     		.2byte	0x1
 2424 02f6 56       		.byte	0x56
 2425 02f7 BC000000 		.4byte	.LVL63
 2426 02fb C2000000 		.4byte	.LFE5
 2427 02ff 0400     		.2byte	0x4
 2428 0301 F3       		.byte	0xf3
 2429 0302 01       		.uleb128 0x1
 2430 0303 51       		.byte	0x51
 2431 0304 9F       		.byte	0x9f
 2432 0305 00000000 		.4byte	0
 2433 0309 00000000 		.4byte	0
 2434              	.LLST20:
 2435 030d 00000000 		.4byte	.LVL41
 2436 0311 14000000 		.4byte	.LVL43
 2437 0315 0100     		.2byte	0x1
 2438 0317 52       		.byte	0x52
 2439 0318 14000000 		.4byte	.LVL43
ARM GAS  C:\Users\mstai\AppData\Local\Temp\cc5JzFax.s 			page 78


 2440 031c C2000000 		.4byte	.LFE5
 2441 0320 0200     		.2byte	0x2
 2442 0322 91       		.byte	0x91
 2443 0323 64       		.sleb128 -28
 2444 0324 00000000 		.4byte	0
 2445 0328 00000000 		.4byte	0
 2446              	.LLST21:
 2447 032c 30000000 		.4byte	.LVL44
 2448 0330 3A000000 		.4byte	.LVL46
 2449 0334 0200     		.2byte	0x2
 2450 0336 31       		.byte	0x31
 2451 0337 9F       		.byte	0x9f
 2452 0338 3E000000 		.4byte	.LVL47
 2453 033c 40000000 		.4byte	.LVL48
 2454 0340 0200     		.2byte	0x2
 2455 0342 30       		.byte	0x30
 2456 0343 9F       		.byte	0x9f
 2457 0344 40000000 		.4byte	.LVL48
 2458 0348 50000000 		.4byte	.LVL49
 2459 034c 0100     		.2byte	0x1
 2460 034e 52       		.byte	0x52
 2461 034f 68000000 		.4byte	.LVL51
 2462 0353 7C000000 		.4byte	.LVL52
 2463 0357 0100     		.2byte	0x1
 2464 0359 52       		.byte	0x52
 2465 035a 00000000 		.4byte	0
 2466 035e 00000000 		.4byte	0
 2467              	.LLST22:
 2468 0362 30000000 		.4byte	.LVL44
 2469 0366 34000000 		.4byte	.LVL45
 2470 036a 0100     		.2byte	0x1
 2471 036c 53       		.byte	0x53
 2472 036d 34000000 		.4byte	.LVL45
 2473 0371 3A000000 		.4byte	.LVL46
 2474 0375 0100     		.2byte	0x1
 2475 0377 59       		.byte	0x59
 2476 0378 3E000000 		.4byte	.LVL47
 2477 037c 40000000 		.4byte	.LVL48
 2478 0380 0100     		.2byte	0x1
 2479 0382 53       		.byte	0x53
 2480 0383 40000000 		.4byte	.LVL48
 2481 0387 88000000 		.4byte	.LVL54
 2482 038b 0100     		.2byte	0x1
 2483 038d 59       		.byte	0x59
 2484 038e 00000000 		.4byte	0
 2485 0392 00000000 		.4byte	0
 2486              	.LLST23:
 2487 0396 0E000000 		.4byte	.LVL42
 2488 039a 14000000 		.4byte	.LVL43
 2489 039e 0200     		.2byte	0x2
 2490 03a0 31       		.byte	0x31
 2491 03a1 9F       		.byte	0x9f
 2492 03a2 14000000 		.4byte	.LVL43
 2493 03a6 B2000000 		.4byte	.LVL59
 2494 03aa 0100     		.2byte	0x1
 2495 03ac 57       		.byte	0x57
 2496 03ad B2000000 		.4byte	.LVL59
ARM GAS  C:\Users\mstai\AppData\Local\Temp\cc5JzFax.s 			page 79


 2497 03b1 B4000000 		.4byte	.LVL60
 2498 03b5 0100     		.2byte	0x1
 2499 03b7 53       		.byte	0x53
 2500 03b8 B4000000 		.4byte	.LVL60
 2501 03bc BC000000 		.4byte	.LVL64
 2502 03c0 0100     		.2byte	0x1
 2503 03c2 57       		.byte	0x57
 2504 03c3 BC000000 		.4byte	.LVL64
 2505 03c7 C2000000 		.4byte	.LFE5
 2506 03cb 0300     		.2byte	0x3
 2507 03cd 73       		.byte	0x73
 2508 03ce 7F       		.sleb128 -1
 2509 03cf 9F       		.byte	0x9f
 2510 03d0 00000000 		.4byte	0
 2511 03d4 00000000 		.4byte	0
 2512              	.LLST24:
 2513 03d8 8C000000 		.4byte	.LVL55
 2514 03dc A0000000 		.4byte	.LVL57
 2515 03e0 0200     		.2byte	0x2
 2516 03e2 31       		.byte	0x31
 2517 03e3 9F       		.byte	0x9f
 2518 03e4 00000000 		.4byte	0
 2519 03e8 00000000 		.4byte	0
 2520              	.LLST25:
 2521 03ec 0E000000 		.4byte	.LVL42
 2522 03f0 14000000 		.4byte	.LVL43
 2523 03f4 0200     		.2byte	0x2
 2524 03f6 30       		.byte	0x30
 2525 03f7 9F       		.byte	0x9f
 2526 03f8 14000000 		.4byte	.LVL43
 2527 03fc AE000000 		.4byte	.LVL58
 2528 0400 0100     		.2byte	0x1
 2529 0402 54       		.byte	0x54
 2530 0403 B2000000 		.4byte	.LVL59
 2531 0407 BC000000 		.4byte	.LVL61
 2532 040b 0100     		.2byte	0x1
 2533 040d 54       		.byte	0x54
 2534 040e BC000000 		.4byte	.LVL61
 2535 0412 C2000000 		.4byte	.LFE5
 2536 0416 0100     		.2byte	0x1
 2537 0418 50       		.byte	0x50
 2538 0419 00000000 		.4byte	0
 2539 041d 00000000 		.4byte	0
 2540              	.LLST26:
 2541 0421 84000000 		.4byte	.LVL53
 2542 0425 93000000 		.4byte	.LVL56-1
 2543 0429 0100     		.2byte	0x1
 2544 042b 51       		.byte	0x51
 2545 042c 94000000 		.4byte	.LVL56
 2546 0430 A0000000 		.4byte	.LVL57
 2547 0434 0100     		.2byte	0x1
 2548 0436 50       		.byte	0x50
 2549 0437 00000000 		.4byte	0
 2550 043b 00000000 		.4byte	0
 2551              	.LLST27:
 2552 043f 00000000 		.4byte	.LVL65
 2553 0443 0E000000 		.4byte	.LVL68
ARM GAS  C:\Users\mstai\AppData\Local\Temp\cc5JzFax.s 			page 80


 2554 0447 0100     		.2byte	0x1
 2555 0449 50       		.byte	0x50
 2556 044a 0E000000 		.4byte	.LVL68
 2557 044e 2E000000 		.4byte	.LVL75
 2558 0452 0100     		.2byte	0x1
 2559 0454 54       		.byte	0x54
 2560 0455 2E000000 		.4byte	.LVL75
 2561 0459 34000000 		.4byte	.LFE4
 2562 045d 0400     		.2byte	0x4
 2563 045f F3       		.byte	0xf3
 2564 0460 01       		.uleb128 0x1
 2565 0461 50       		.byte	0x50
 2566 0462 9F       		.byte	0x9f
 2567 0463 00000000 		.4byte	0
 2568 0467 00000000 		.4byte	0
 2569              	.LLST28:
 2570 046b 00000000 		.4byte	.LVL65
 2571 046f 14000000 		.4byte	.LVL69
 2572 0473 0100     		.2byte	0x1
 2573 0475 51       		.byte	0x51
 2574 0476 14000000 		.4byte	.LVL69
 2575 047a 2E000000 		.4byte	.LVL76
 2576 047e 0100     		.2byte	0x1
 2577 0480 55       		.byte	0x55
 2578 0481 2E000000 		.4byte	.LVL76
 2579 0485 34000000 		.4byte	.LFE4
 2580 0489 0400     		.2byte	0x4
 2581 048b F3       		.byte	0xf3
 2582 048c 01       		.uleb128 0x1
 2583 048d 51       		.byte	0x51
 2584 048e 9F       		.byte	0x9f
 2585 048f 00000000 		.4byte	0
 2586 0493 00000000 		.4byte	0
 2587              	.LLST29:
 2588 0497 06000000 		.4byte	.LVL66
 2589 049b 20000000 		.4byte	.LVL71
 2590 049f 0200     		.2byte	0x2
 2591 04a1 30       		.byte	0x30
 2592 04a2 9F       		.byte	0x9f
 2593 04a3 20000000 		.4byte	.LVL71
 2594 04a7 24000000 		.4byte	.LVL72
 2595 04ab 0100     		.2byte	0x1
 2596 04ad 50       		.byte	0x50
 2597 04ae 24000000 		.4byte	.LVL72
 2598 04b2 2E000000 		.4byte	.LVL74
 2599 04b6 0200     		.2byte	0x2
 2600 04b8 36       		.byte	0x36
 2601 04b9 9F       		.byte	0x9f
 2602 04ba 2E000000 		.4byte	.LVL74
 2603 04be 34000000 		.4byte	.LFE4
 2604 04c2 0100     		.2byte	0x1
 2605 04c4 50       		.byte	0x50
 2606 04c5 00000000 		.4byte	0
 2607 04c9 00000000 		.4byte	0
 2608              	.LLST30:
 2609 04cd 06000000 		.4byte	.LVL66
 2610 04d1 0E000000 		.4byte	.LVL68
ARM GAS  C:\Users\mstai\AppData\Local\Temp\cc5JzFax.s 			page 81


 2611 04d5 0200     		.2byte	0x2
 2612 04d7 30       		.byte	0x30
 2613 04d8 9F       		.byte	0x9f
 2614 04d9 0E000000 		.4byte	.LVL68
 2615 04dd 1A000000 		.4byte	.LVL70
 2616 04e1 0200     		.2byte	0x2
 2617 04e3 73       		.byte	0x73
 2618 04e4 08       		.sleb128 8
 2619 04e5 1A000000 		.4byte	.LVL70
 2620 04e9 1F000000 		.4byte	.LVL71-1
 2621 04ed 0100     		.2byte	0x1
 2622 04ef 51       		.byte	0x51
 2623 04f0 00000000 		.4byte	0
 2624 04f4 00000000 		.4byte	0
 2625              	.LLST31:
 2626 04f8 0C000000 		.4byte	.LVL67
 2627 04fc 1F000000 		.4byte	.LVL71-1
 2628 0500 0100     		.2byte	0x1
 2629 0502 53       		.byte	0x53
 2630 0503 00000000 		.4byte	0
 2631 0507 00000000 		.4byte	0
 2632              	.LLST32:
 2633 050b 0E000000 		.4byte	.LVL68
 2634 050f 1F000000 		.4byte	.LVL71-1
 2635 0513 0100     		.2byte	0x1
 2636 0515 50       		.byte	0x50
 2637 0516 00000000 		.4byte	0
 2638 051a 00000000 		.4byte	0
 2639              	.LLST33:
 2640 051e 00000000 		.4byte	.LVL77
 2641 0522 10000000 		.4byte	.LVL81
 2642 0526 0100     		.2byte	0x1
 2643 0528 50       		.byte	0x50
 2644 0529 10000000 		.4byte	.LVL81
 2645 052d 24000000 		.4byte	.LVL88
 2646 0531 0100     		.2byte	0x1
 2647 0533 56       		.byte	0x56
 2648 0534 24000000 		.4byte	.LVL88
 2649 0538 2C000000 		.4byte	.LFE3
 2650 053c 0400     		.2byte	0x4
 2651 053e F3       		.byte	0xf3
 2652 053f 01       		.uleb128 0x1
 2653 0540 50       		.byte	0x50
 2654 0541 9F       		.byte	0x9f
 2655 0542 00000000 		.4byte	0
 2656 0546 00000000 		.4byte	0
 2657              	.LLST34:
 2658 054a 0C000000 		.4byte	.LVL80
 2659 054e 10000000 		.4byte	.LVL81
 2660 0552 0100     		.2byte	0x1
 2661 0554 53       		.byte	0x53
 2662 0555 10000000 		.4byte	.LVL81
 2663 0559 1C000000 		.4byte	.LVL84
 2664 055d 0100     		.2byte	0x1
 2665 055f 54       		.byte	0x54
 2666 0560 1C000000 		.4byte	.LVL84
 2667 0564 1E000000 		.4byte	.LVL85
ARM GAS  C:\Users\mstai\AppData\Local\Temp\cc5JzFax.s 			page 82


 2668 0568 0100     		.2byte	0x1
 2669 056a 53       		.byte	0x53
 2670 056b 1E000000 		.4byte	.LVL85
 2671 056f 24000000 		.4byte	.LVL86
 2672 0573 0100     		.2byte	0x1
 2673 0575 54       		.byte	0x54
 2674 0576 24000000 		.4byte	.LVL86
 2675 057a 2C000000 		.4byte	.LFE3
 2676 057e 0300     		.2byte	0x3
 2677 0580 73       		.byte	0x73
 2678 0581 7F       		.sleb128 -1
 2679 0582 9F       		.byte	0x9f
 2680 0583 00000000 		.4byte	0
 2681 0587 00000000 		.4byte	0
 2682              	.LLST35:
 2683 058b 0C000000 		.4byte	.LVL80
 2684 058f 10000000 		.4byte	.LVL81
 2685 0593 0100     		.2byte	0x1
 2686 0595 53       		.byte	0x53
 2687 0596 00000000 		.4byte	0
 2688 059a 00000000 		.4byte	0
 2689              	.LLST36:
 2690 059e 0A000000 		.4byte	.LVL79
 2691 05a2 0C000000 		.4byte	.LVL80
 2692 05a6 0100     		.2byte	0x1
 2693 05a8 53       		.byte	0x53
 2694 05a9 00000000 		.4byte	0
 2695 05ad 00000000 		.4byte	0
 2696              	.LLST37:
 2697 05b1 04000000 		.4byte	.LVL78
 2698 05b5 10000000 		.4byte	.LVL81
 2699 05b9 0200     		.2byte	0x2
 2700 05bb 30       		.byte	0x30
 2701 05bc 9F       		.byte	0x9f
 2702 05bd 10000000 		.4byte	.LVL81
 2703 05c1 24000000 		.4byte	.LVL87
 2704 05c5 0100     		.2byte	0x1
 2705 05c7 55       		.byte	0x55
 2706 05c8 24000000 		.4byte	.LVL87
 2707 05cc 2C000000 		.4byte	.LFE3
 2708 05d0 0100     		.2byte	0x1
 2709 05d2 50       		.byte	0x50
 2710 05d3 00000000 		.4byte	0
 2711 05d7 00000000 		.4byte	0
 2712              	.LLST38:
 2713 05db 02000000 		.4byte	.LVL89
 2714 05df 08000000 		.4byte	.LVL90
 2715 05e3 0200     		.2byte	0x2
 2716 05e5 31       		.byte	0x31
 2717 05e6 9F       		.byte	0x9f
 2718 05e7 08000000 		.4byte	.LVL90
 2719 05eb 12000000 		.4byte	.LVL93
 2720 05ef 0100     		.2byte	0x1
 2721 05f1 55       		.byte	0x55
 2722 05f2 12000000 		.4byte	.LVL93
 2723 05f6 14000000 		.4byte	.LVL94
 2724 05fa 0100     		.2byte	0x1
ARM GAS  C:\Users\mstai\AppData\Local\Temp\cc5JzFax.s 			page 83


 2725 05fc 53       		.byte	0x53
 2726 05fd 14000000 		.4byte	.LVL94
 2727 0601 1A000000 		.4byte	.LVL96
 2728 0605 0100     		.2byte	0x1
 2729 0607 55       		.byte	0x55
 2730 0608 1A000000 		.4byte	.LVL96
 2731 060c 1C000000 		.4byte	.LFE2
 2732 0610 0300     		.2byte	0x3
 2733 0612 73       		.byte	0x73
 2734 0613 7F       		.sleb128 -1
 2735 0614 9F       		.byte	0x9f
 2736 0615 00000000 		.4byte	0
 2737 0619 00000000 		.4byte	0
 2738              	.LLST39:
 2739 061d 02000000 		.4byte	.LVL89
 2740 0621 08000000 		.4byte	.LVL90
 2741 0625 0200     		.2byte	0x2
 2742 0627 30       		.byte	0x30
 2743 0628 9F       		.byte	0x9f
 2744 0629 08000000 		.4byte	.LVL90
 2745 062d 1A000000 		.4byte	.LVL95
 2746 0631 0100     		.2byte	0x1
 2747 0633 54       		.byte	0x54
 2748 0634 1A000000 		.4byte	.LVL95
 2749 0638 1C000000 		.4byte	.LFE2
 2750 063c 0100     		.2byte	0x1
 2751 063e 50       		.byte	0x50
 2752 063f 00000000 		.4byte	0
 2753 0643 00000000 		.4byte	0
 2754              		.section	.debug_aranges,"",%progbits
 2755 0000 6C000000 		.4byte	0x6c
 2756 0004 0200     		.2byte	0x2
 2757 0006 00000000 		.4byte	.Ldebug_info0
 2758 000a 04       		.byte	0x4
 2759 000b 00       		.byte	0
 2760 000c 0000     		.2byte	0
 2761 000e 0000     		.2byte	0
 2762 0010 00000000 		.4byte	.LFB1
 2763 0014 02000000 		.4byte	.LFE1-.LFB1
 2764 0018 00000000 		.4byte	.LFB10
 2765 001c 22000000 		.4byte	.LFE10-.LFB10
 2766 0020 00000000 		.4byte	.LFB9
 2767 0024 1E000000 		.4byte	.LFE9-.LFB9
 2768 0028 00000000 		.4byte	.LFB8
 2769 002c 20000000 		.4byte	.LFE8-.LFB8
 2770 0030 00000000 		.4byte	.LFB7
 2771 0034 24000000 		.4byte	.LFE7-.LFB7
 2772 0038 00000000 		.4byte	.LFB6
 2773 003c 16000000 		.4byte	.LFE6-.LFB6
 2774 0040 00000000 		.4byte	.LFB11
 2775 0044 12000000 		.4byte	.LFE11-.LFB11
 2776 0048 00000000 		.4byte	.LFB5
 2777 004c C2000000 		.4byte	.LFE5-.LFB5
 2778 0050 00000000 		.4byte	.LFB4
 2779 0054 34000000 		.4byte	.LFE4-.LFB4
 2780 0058 00000000 		.4byte	.LFB3
 2781 005c 2C000000 		.4byte	.LFE3-.LFB3
ARM GAS  C:\Users\mstai\AppData\Local\Temp\cc5JzFax.s 			page 84


 2782 0060 00000000 		.4byte	.LFB2
 2783 0064 1C000000 		.4byte	.LFE2-.LFB2
 2784 0068 00000000 		.4byte	0
 2785 006c 00000000 		.4byte	0
 2786              		.section	.debug_ranges,"",%progbits
 2787              	.Ldebug_ranges0:
 2788 0000 00000000 		.4byte	.LFB1
 2789 0004 02000000 		.4byte	.LFE1
 2790 0008 00000000 		.4byte	.LFB10
 2791 000c 22000000 		.4byte	.LFE10
 2792 0010 00000000 		.4byte	.LFB9
 2793 0014 1E000000 		.4byte	.LFE9
 2794 0018 00000000 		.4byte	.LFB8
 2795 001c 20000000 		.4byte	.LFE8
 2796 0020 00000000 		.4byte	.LFB7
 2797 0024 24000000 		.4byte	.LFE7
 2798 0028 00000000 		.4byte	.LFB6
 2799 002c 16000000 		.4byte	.LFE6
 2800 0030 00000000 		.4byte	.LFB11
 2801 0034 12000000 		.4byte	.LFE11
 2802 0038 00000000 		.4byte	.LFB5
 2803 003c C2000000 		.4byte	.LFE5
 2804 0040 00000000 		.4byte	.LFB4
 2805 0044 34000000 		.4byte	.LFE4
 2806 0048 00000000 		.4byte	.LFB3
 2807 004c 2C000000 		.4byte	.LFE3
 2808 0050 00000000 		.4byte	.LFB2
 2809 0054 1C000000 		.4byte	.LFE2
 2810 0058 00000000 		.4byte	0
 2811 005c 00000000 		.4byte	0
 2812              		.section	.debug_line,"",%progbits
 2813              	.Ldebug_line0:
 2814 0000 D7010000 		.section	.debug_str,"MS",%progbits,1
 2814      02009700 
 2814      00000201 
 2814      FB0E0D00 
 2814      01010101 
 2815              	.LASF59:
 2816 0000 43617053 		.ascii	"CapSense_FLASH_STRUCT\000"
 2816      656E7365 
 2816      5F464C41 
 2816      53485F53 
 2816      54525543 
 2817              	.LASF83:
 2818 0016 72657375 		.ascii	"result\000"
 2818      6C7400
 2819              	.LASF40:
 2820 001d 62736C6E 		.ascii	"bsln\000"
 2820      00
 2821              	.LASF67:
 2822 0022 73656E73 		.ascii	"sensorId\000"
 2822      6F724964 
 2822      00
 2823              	.LASF36:
 2824 002b 69646163 		.ascii	"idacGainIndex\000"
 2824      4761696E 
 2824      496E6465 
ARM GAS  C:\Users\mstai\AppData\Local\Temp\cc5JzFax.s 			page 85


 2824      7800
 2825              	.LASF34:
 2826 0039 6C6F7742 		.ascii	"lowBslnRst\000"
 2826      736C6E52 
 2826      737400
 2827              	.LASF43:
 2828 0044 64696666 		.ascii	"diff\000"
 2828      00
 2829              	.LASF53:
 2830 0049 746F7461 		.ascii	"totalNumSns\000"
 2830      6C4E756D 
 2830      536E7300 
 2831              	.LASF72:
 2832 0055 43617053 		.ascii	"CapSense_InitializeAllBaselines\000"
 2832      656E7365 
 2832      5F496E69 
 2832      7469616C 
 2832      697A6541 
 2833              	.LASF35:
 2834 0075 69646163 		.ascii	"idacMod\000"
 2834      4D6F6400 
 2835              	.LASF2:
 2836 007d 73686F72 		.ascii	"short int\000"
 2836      7420696E 
 2836      7400
 2837              	.LASF73:
 2838 0087 696E7075 		.ascii	"input\000"
 2838      7400
 2839              	.LASF24:
 2840 008d 43617053 		.ascii	"CapSense_WD_TOUCHPAD_E\000"
 2840      656E7365 
 2840      5F57445F 
 2840      544F5543 
 2840      48504144 
 2841              	.LASF57:
 2842 00a4 43617053 		.ascii	"CapSense_FLASH_WD_STRUCT\000"
 2842      656E7365 
 2842      5F464C41 
 2842      53485F57 
 2842      445F5354 
 2843              	.LASF81:
 2844 00bd 64696666 		.ascii	"difference\000"
 2844      6572656E 
 2844      636500
 2845              	.LASF89:
 2846 00c8 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 2846      43313120 
 2846      352E342E 
 2846      31203230 
 2846      31363036 
 2847 00fb 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m0plus -mthumb -"
 2847      20726576 
 2847      6973696F 
 2847      6E203233 
 2847      37373135 
 2848 012e 67202D4F 		.ascii	"g -Og -ffunction-sections -ffat-lto-objects\000"
 2848      67202D66 
ARM GAS  C:\Users\mstai\AppData\Local\Temp\cc5JzFax.s 			page 86


 2848      66756E63 
 2848      74696F6E 
 2848      2D736563 
 2849              	.LASF45:
 2850 015a 69646163 		.ascii	"idacComp\000"
 2850      436F6D70 
 2850      00
 2851              	.LASF76:
 2852 0163 66696C74 		.ascii	"filteredOutput\000"
 2852      65726564 
 2852      4F757470 
 2852      757400
 2853              	.LASF84:
 2854 0172 68697374 		.ascii	"history\000"
 2854      6F727900 
 2855              	.LASF38:
 2856 017a 736E7343 		.ascii	"snsClkSource\000"
 2856      6C6B536F 
 2856      75726365 
 2856      00
 2857              	.LASF66:
 2858 0187 77696467 		.ascii	"widgetId\000"
 2858      65744964 
 2858      00
 2859              	.LASF20:
 2860 0190 43617053 		.ascii	"CapSense_WD_BUTTON_E\000"
 2860      656E7365 
 2860      5F57445F 
 2860      42555454 
 2860      4F4E5F45 
 2861              	.LASF30:
 2862 01a5 6E6F6973 		.ascii	"noiseTh\000"
 2862      65546800 
 2863              	.LASF10:
 2864 01ad 75696E74 		.ascii	"uint16\000"
 2864      313600
 2865              	.LASF85:
 2866 01b4 43617053 		.ascii	"CapSense_UpdateSensorBaseline\000"
 2866      656E7365 
 2866      5F557064 
 2866      61746553 
 2866      656E736F 
 2867              	.LASF51:
 2868 01d2 70747232 		.ascii	"ptr2DebounceArr\000"
 2868      4465626F 
 2868      756E6365 
 2868      41727200 
 2869              	.LASF9:
 2870 01e2 75696E74 		.ascii	"uint8\000"
 2870      3800
 2871              	.LASF79:
 2872 01e8 70747257 		.ascii	"ptrWidgetRam\000"
 2872      69646765 
 2872      7452616D 
 2872      00
 2873              	.LASF87:
 2874 01f5 62736C6E 		.ascii	"bslnStatus\000"
ARM GAS  C:\Users\mstai\AppData\Local\Temp\cc5JzFax.s 			page 87


 2874      53746174 
 2874      757300
 2875              	.LASF37:
 2876 0200 736E7343 		.ascii	"snsClk\000"
 2876      6C6B00
 2877              	.LASF63:
 2878 0207 43617053 		.ascii	"CapSense_FtInitializeBaselineChannel\000"
 2878      656E7365 
 2878      5F467449 
 2878      6E697469 
 2878      616C697A 
 2879              	.LASF77:
 2880 022c 43617053 		.ascii	"CapSense_FtIIR1stOrder\000"
 2880      656E7365 
 2880      5F467449 
 2880      49523173 
 2880      744F7264 
 2881              	.LASF25:
 2882 0243 43617053 		.ascii	"CapSense_WD_PROXIMITY_E\000"
 2882      656E7365 
 2882      5F57445F 
 2882      50524F58 
 2882      494D4954 
 2883              	.LASF12:
 2884 025b 666C6F61 		.ascii	"float\000"
 2884      7400
 2885              	.LASF6:
 2886 0261 6C6F6E67 		.ascii	"long long int\000"
 2886      206C6F6E 
 2886      6720696E 
 2886      7400
 2887              	.LASF61:
 2888 026f 77645479 		.ascii	"wdType\000"
 2888      706500
 2889              	.LASF14:
 2890 0276 63686172 		.ascii	"char\000"
 2890      00
 2891              	.LASF4:
 2892 027b 6C6F6E67 		.ascii	"long int\000"
 2892      20696E74 
 2892      00
 2893              	.LASF75:
 2894 0284 73686966 		.ascii	"shift\000"
 2894      7400
 2895              	.LASF54:
 2896 028a 77646774 		.ascii	"wdgtType\000"
 2896      54797065 
 2896      00
 2897              	.LASF17:
 2898 0293 73697A65 		.ascii	"sizetype\000"
 2898      74797065 
 2898      00
 2899              	.LASF29:
 2900 029c 66696E67 		.ascii	"fingerTh\000"
 2900      65725468 
 2900      00
 2901              	.LASF44:
ARM GAS  C:\Users\mstai\AppData\Local\Temp\cc5JzFax.s 			page 88


 2902 02a5 6E656742 		.ascii	"negBslnRstCnt\000"
 2902      736C6E52 
 2902      7374436E 
 2902      7400
 2903              	.LASF48:
 2904 02b3 70747232 		.ascii	"ptr2WdgtRam\000"
 2904      57646774 
 2904      52616D00 
 2905              	.LASF33:
 2906 02bf 6F6E4465 		.ascii	"onDebounce\000"
 2906      626F756E 
 2906      636500
 2907              	.LASF91:
 2908 02ca 433A5C55 		.ascii	"C:\\Users\\mstai\\OneDrive\\Desktop\\TESI ROBOTICA\\"
 2908      73657273 
 2908      5C6D7374 
 2908      61695C4F 
 2908      6E654472 
 2909 02f8 434D4153 		.ascii	"CMAS.cydsn\000"
 2909      2E637964 
 2909      736E00
 2910              	.LASF55:
 2911 0303 6E756D43 		.ascii	"numCols\000"
 2911      6F6C7300 
 2912              	.LASF32:
 2913 030b 68797374 		.ascii	"hysteresis\000"
 2913      65726573 
 2913      697300
 2914              	.LASF16:
 2915 0316 6C6F6E67 		.ascii	"long double\000"
 2915      20646F75 
 2915      626C6500 
 2916              	.LASF1:
 2917 0322 756E7369 		.ascii	"unsigned char\000"
 2917      676E6564 
 2917      20636861 
 2917      7200
 2918              	.LASF69:
 2919 0330 70747257 		.ascii	"ptrWidget\000"
 2919      69646765 
 2919      7400
 2920              	.LASF0:
 2921 033a 7369676E 		.ascii	"signed char\000"
 2921      65642063 
 2921      68617200 
 2922              	.LASF7:
 2923 0346 6C6F6E67 		.ascii	"long long unsigned int\000"
 2923      206C6F6E 
 2923      6720756E 
 2923      7369676E 
 2923      65642069 
 2924              	.LASF52:
 2925 035d 73746174 		.ascii	"staticConfig\000"
 2925      6963436F 
 2925      6E666967 
 2925      00
 2926              	.LASF8:
ARM GAS  C:\Users\mstai\AppData\Local\Temp\cc5JzFax.s 			page 89


 2927 036a 756E7369 		.ascii	"unsigned int\000"
 2927      676E6564 
 2927      20696E74 
 2927      00
 2928              	.LASF68:
 2929 0377 66726571 		.ascii	"freqChannel\000"
 2929      4368616E 
 2929      6E656C00 
 2930              	.LASF86:
 2931 0383 43617053 		.ascii	"CapSense_UpdateWidgetBaseline\000"
 2931      656E7365 
 2931      5F557064 
 2931      61746557 
 2931      69646765 
 2932              	.LASF46:
 2933 03a1 43617053 		.ascii	"CapSense_RAM_SNS_STRUCT\000"
 2933      656E7365 
 2933      5F52414D 
 2933      5F534E53 
 2933      5F535452 
 2934              	.LASF19:
 2935 03b9 43617053 		.ascii	"CapSense_LOW_BSLN_RST_TYPE\000"
 2935      656E7365 
 2935      5F4C4F57 
 2935      5F42534C 
 2935      4E5F5253 
 2936              	.LASF88:
 2937 03d4 43617053 		.ascii	"CapSense_UpdateAllBaselines\000"
 2937      656E7365 
 2937      5F557064 
 2937      61746541 
 2937      6C6C4261 
 2938              	.LASF60:
 2939 03f0 70747253 		.ascii	"ptrSensor\000"
 2939      656E736F 
 2939      7200
 2940              	.LASF92:
 2941 03fa 43617053 		.ascii	"CapSense_FtInitialize\000"
 2941      656E7365 
 2941      5F467449 
 2941      6E697469 
 2941      616C697A 
 2942              	.LASF15:
 2943 0410 63797374 		.ascii	"cystatus\000"
 2943      61747573 
 2943      00
 2944              	.LASF41:
 2945 0419 62736C6E 		.ascii	"bslnInv\000"
 2945      496E7600 
 2946              	.LASF64:
 2947 0421 43617053 		.ascii	"CapSense_FtInitializeBaseline\000"
 2947      656E7365 
 2947      5F467449 
 2947      6E697469 
 2947      616C697A 
 2948              	.LASF28:
 2949 043f 7265736F 		.ascii	"resolution\000"
ARM GAS  C:\Users\mstai\AppData\Local\Temp\cc5JzFax.s 			page 90


 2949      6C757469 
 2949      6F6E00
 2950              	.LASF3:
 2951 044a 73686F72 		.ascii	"short unsigned int\000"
 2951      7420756E 
 2951      7369676E 
 2951      65642069 
 2951      6E7400
 2952              	.LASF26:
 2953 045d 43617053 		.ascii	"CapSense_WD_ENCODERDIAL_E\000"
 2953      656E7365 
 2953      5F57445F 
 2953      454E434F 
 2953      44455244 
 2954              	.LASF21:
 2955 0477 43617053 		.ascii	"CapSense_WD_LINEAR_SLIDER_E\000"
 2955      656E7365 
 2955      5F57445F 
 2955      4C494E45 
 2955      41525F53 
 2956              	.LASF62:
 2957 0493 6368616E 		.ascii	"channel\000"
 2957      6E656C00 
 2958              	.LASF78:
 2959 049b 43617053 		.ascii	"CapSense_FtUpdateBaseline\000"
 2959      656E7365 
 2959      5F467455 
 2959      70646174 
 2959      65426173 
 2960              	.LASF71:
 2961 04b5 73656E73 		.ascii	"sensorsNumber\000"
 2961      6F72734E 
 2961      756D6265 
 2961      7200
 2962              	.LASF31:
 2963 04c3 6E4E6F69 		.ascii	"nNoiseTh\000"
 2963      73655468 
 2963      00
 2964              	.LASF82:
 2965 04cc 62617365 		.ascii	"baselineCoeff\000"
 2965      6C696E65 
 2965      436F6566 
 2965      6600
 2966              	.LASF18:
 2967 04da 43617053 		.ascii	"CapSense_THRESHOLD_TYPE\000"
 2967      656E7365 
 2967      5F544852 
 2967      4553484F 
 2967      4C445F54 
 2968              	.LASF11:
 2969 04f2 75696E74 		.ascii	"uint32\000"
 2969      333200
 2970              	.LASF5:
 2971 04f9 6C6F6E67 		.ascii	"long unsigned int\000"
 2971      20756E73 
 2971      69676E65 
 2971      6420696E 
ARM GAS  C:\Users\mstai\AppData\Local\Temp\cc5JzFax.s 			page 91


 2971      7400
 2972              	.LASF80:
 2973 050b 7369676E 		.ascii	"sign\000"
 2973      00
 2974              	.LASF13:
 2975 0510 646F7562 		.ascii	"double\000"
 2975      6C6500
 2976              	.LASF42:
 2977 0517 62736C6E 		.ascii	"bslnExt\000"
 2977      45787400 
 2978              	.LASF56:
 2979 051f 70747232 		.ascii	"ptr2SnsCpArr\000"
 2979      536E7343 
 2979      70417272 
 2979      00
 2980              	.LASF27:
 2981 052c 43617053 		.ascii	"CapSense_WD_TYPE_ENUM\000"
 2981      656E7365 
 2981      5F57445F 
 2981      54595045 
 2981      5F454E55 
 2982              	.LASF74:
 2983 0542 70726576 		.ascii	"prevOutput\000"
 2983      4F757470 
 2983      757400
 2984              	.LASF23:
 2985 054d 43617053 		.ascii	"CapSense_WD_MATRIX_BUTTON_E\000"
 2985      656E7365 
 2985      5F57445F 
 2985      4D415452 
 2985      49585F42 
 2986              	.LASF49:
 2987 0569 70747232 		.ascii	"ptr2SnsRam\000"
 2987      536E7352 
 2987      616D00
 2988              	.LASF70:
 2989 0574 43617053 		.ascii	"CapSense_InitializeWidgetBaseline\000"
 2989      656E7365 
 2989      5F496E69 
 2989      7469616C 
 2989      697A6557 
 2990              	.LASF50:
 2991 0596 70747232 		.ascii	"ptr2FltrHistory\000"
 2991      466C7472 
 2991      48697374 
 2991      6F727900 
 2992              	.LASF22:
 2993 05a6 43617053 		.ascii	"CapSense_WD_RADIAL_SLIDER_E\000"
 2993      656E7365 
 2993      5F57445F 
 2993      52414449 
 2993      414C5F53 
 2994              	.LASF93:
 2995 05c2 43617053 		.ascii	"CapSense_dsFlash\000"
 2995      656E7365 
 2995      5F647346 
 2995      6C617368 
ARM GAS  C:\Users\mstai\AppData\Local\Temp\cc5JzFax.s 			page 92


 2995      00
 2996              	.LASF39:
 2997 05d3 43617053 		.ascii	"CapSense_RAM_WD_BASE_STRUCT\000"
 2997      656E7365 
 2997      5F52414D 
 2997      5F57445F 
 2997      42415345 
 2998              	.LASF58:
 2999 05ef 77646774 		.ascii	"wdgtArray\000"
 2999      41727261 
 2999      7900
 3000              	.LASF94:
 3001 05f9 43617053 		.ascii	"CapSense_UpdateTestResultBaselineDuplication\000"
 3001      656E7365 
 3001      5F557064 
 3001      61746554 
 3001      65737452 
 3002              	.LASF47:
 3003 0626 70747232 		.ascii	"ptr2SnsFlash\000"
 3003      536E7346 
 3003      6C617368 
 3003      00
 3004              	.LASF90:
 3005 0633 47656E65 		.ascii	"Generated_Source\\PSoC4\\CapSense_Filter.c\000"
 3005      72617465 
 3005      645F536F 
 3005      75726365 
 3005      5C50536F 
 3006              	.LASF65:
 3007 065c 43617053 		.ascii	"CapSense_InitializeSensorBaseline\000"
 3007      656E7365 
 3007      5F496E69 
 3007      7469616C 
 3007      697A6553 
 3008              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
