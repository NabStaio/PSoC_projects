ARM GAS  C:\Users\mstai\AppData\Local\Temp\ccHdifRP.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m0plus
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"CapSense_Sensing.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.global	__aeabi_uidivmod
  20              		.section	.text.CapSense_SsCalcLfsrSize,"ax",%progbits
  21              		.align	2
  22              		.code	16
  23              		.thumb_func
  24              		.type	CapSense_SsCalcLfsrSize, %function
  25              	CapSense_SsCalcLfsrSize:
  26              	.LFB21:
  27              		.file 1 "Generated_Source\\PSoC4\\CapSense_Sensing.c"
   1:Generated_Source\PSoC4/CapSense_Sensing.c **** /***************************************************************************//**
   2:Generated_Source\PSoC4/CapSense_Sensing.c **** * \file CapSense_Sensing.c
   3:Generated_Source\PSoC4/CapSense_Sensing.c **** * \version 7.0
   4:Generated_Source\PSoC4/CapSense_Sensing.c **** *
   5:Generated_Source\PSoC4/CapSense_Sensing.c **** * \brief
   6:Generated_Source\PSoC4/CapSense_Sensing.c **** *   This file contains the source of functions common for
   7:Generated_Source\PSoC4/CapSense_Sensing.c **** *   different sensing methods.
   8:Generated_Source\PSoC4/CapSense_Sensing.c **** *
   9:Generated_Source\PSoC4/CapSense_Sensing.c **** * \see CapSense v7.0 Datasheet
  10:Generated_Source\PSoC4/CapSense_Sensing.c **** *
  11:Generated_Source\PSoC4/CapSense_Sensing.c **** *//*****************************************************************************
  12:Generated_Source\PSoC4/CapSense_Sensing.c **** * Copyright (2016-2019), Cypress Semiconductor Corporation.
  13:Generated_Source\PSoC4/CapSense_Sensing.c **** ********************************************************************************
  14:Generated_Source\PSoC4/CapSense_Sensing.c **** * This software is owned by Cypress Semiconductor Corporation (Cypress) and is
  15:Generated_Source\PSoC4/CapSense_Sensing.c **** * protected by and subject to worldwide patent protection (United States and
  16:Generated_Source\PSoC4/CapSense_Sensing.c **** * foreign), United States copyright laws and international treaty provisions.
  17:Generated_Source\PSoC4/CapSense_Sensing.c **** * Cypress hereby grants to licensee a personal, non-exclusive, non-transferable
  18:Generated_Source\PSoC4/CapSense_Sensing.c **** * license to copy, use, modify, create derivative works of, and compile the
  19:Generated_Source\PSoC4/CapSense_Sensing.c **** * Cypress Source Code and derivative works for the sole purpose of creating
  20:Generated_Source\PSoC4/CapSense_Sensing.c **** * custom software in support of licensee product to be used only in conjunction
  21:Generated_Source\PSoC4/CapSense_Sensing.c **** * with a Cypress integrated circuit as specified in the applicable agreement.
  22:Generated_Source\PSoC4/CapSense_Sensing.c **** * Any reproduction, modification, translation, compilation, or representation of
  23:Generated_Source\PSoC4/CapSense_Sensing.c **** * this software except as specified above is prohibited without the express
  24:Generated_Source\PSoC4/CapSense_Sensing.c **** * written permission of Cypress.
  25:Generated_Source\PSoC4/CapSense_Sensing.c **** *
  26:Generated_Source\PSoC4/CapSense_Sensing.c **** * Disclaimer: CYPRESS MAKES NO WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, WITH
  27:Generated_Source\PSoC4/CapSense_Sensing.c **** * REGARD TO THIS MATERIAL, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
  28:Generated_Source\PSoC4/CapSense_Sensing.c **** * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
  29:Generated_Source\PSoC4/CapSense_Sensing.c **** * Cypress reserves the right to make changes without further notice to the
  30:Generated_Source\PSoC4/CapSense_Sensing.c **** * materials described herein. Cypress does not assume any liability arising out
ARM GAS  C:\Users\mstai\AppData\Local\Temp\ccHdifRP.s 			page 2


  31:Generated_Source\PSoC4/CapSense_Sensing.c **** * of the application or use of any product or circuit described herein. Cypress
  32:Generated_Source\PSoC4/CapSense_Sensing.c **** * does not authorize its products for use as critical components in life-support
  33:Generated_Source\PSoC4/CapSense_Sensing.c **** * systems where a malfunction or failure may reasonably be expected to result in
  34:Generated_Source\PSoC4/CapSense_Sensing.c **** * significant injury to the user. The inclusion of Cypress' product in a life-
  35:Generated_Source\PSoC4/CapSense_Sensing.c **** * support systems application implies that the manufacturer assumes all risk of
  36:Generated_Source\PSoC4/CapSense_Sensing.c **** * such use and in doing so indemnifies Cypress against all charges. Use may be
  37:Generated_Source\PSoC4/CapSense_Sensing.c **** * limited by and subject to the applicable Cypress software license agreement.
  38:Generated_Source\PSoC4/CapSense_Sensing.c **** *******************************************************************************/
  39:Generated_Source\PSoC4/CapSense_Sensing.c **** 
  40:Generated_Source\PSoC4/CapSense_Sensing.c **** #include "cyfitter.h"
  41:Generated_Source\PSoC4/CapSense_Sensing.c **** #include "CapSense_Configuration.h"
  42:Generated_Source\PSoC4/CapSense_Sensing.c **** #include "CapSense_Structure.h"
  43:Generated_Source\PSoC4/CapSense_Sensing.c **** #include "CapSense_Sensing.h"
  44:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_ENABLE == CapSense_CSX_EN)
  45:Generated_Source\PSoC4/CapSense_Sensing.c ****     #include "CapSense_SensingCSX_LL.h"
  46:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif
  47:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_ENABLE == CapSense_ISX_EN)
  48:Generated_Source\PSoC4/CapSense_Sensing.c ****     #include "CapSense_SensingISX_LL.h"
  49:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif
  50:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_ENABLE == CapSense_CSD_EN)
  51:Generated_Source\PSoC4/CapSense_Sensing.c ****     #include "CapSense_SensingCSD_LL.h"
  52:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif
  53:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_CSD_SS_DIS != CapSense_CSD_AUTOTUNE)
  54:Generated_Source\PSoC4/CapSense_Sensing.c ****     #include "CapSense_SmartSense_LL.h"
  55:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif
  56:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_ENABLE == CapSense_ADC_EN)
  57:Generated_Source\PSoC4/CapSense_Sensing.c ****     #include "CapSense_Adc.h"
  58:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif
  59:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_ENABLE == CapSense_SELF_TEST_EN)
  60:Generated_Source\PSoC4/CapSense_Sensing.c ****     #include "CapSense_SelfTest.h"
  61:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif
  62:Generated_Source\PSoC4/CapSense_Sensing.c **** 
  63:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (0u != CapSense_ISX_EN)
  64:Generated_Source\PSoC4/CapSense_Sensing.c ****     #include "CapSense_DigPrt2.h"
  65:Generated_Source\PSoC4/CapSense_Sensing.c ****     #if (CapSense_USES_PORT_3)
  66:Generated_Source\PSoC4/CapSense_Sensing.c ****         #include "CapSense_DigPrt3.h"
  67:Generated_Source\PSoC4/CapSense_Sensing.c ****     #endif
  68:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif
  69:Generated_Source\PSoC4/CapSense_Sensing.c **** 
  70:Generated_Source\PSoC4/CapSense_Sensing.c **** /***************************************
  71:Generated_Source\PSoC4/CapSense_Sensing.c **** * API Constants
  72:Generated_Source\PSoC4/CapSense_Sensing.c **** ***************************************/
  73:Generated_Source\PSoC4/CapSense_Sensing.c **** 
  74:Generated_Source\PSoC4/CapSense_Sensing.c **** #define CapSense_IMO_FREQUENCY_OFFSET_MIN               (0u)
  75:Generated_Source\PSoC4/CapSense_Sensing.c **** #define CapSense_IMO_FREQUENCY_OFFSET_MAX               (255u)
  76:Generated_Source\PSoC4/CapSense_Sensing.c **** #define CapSense_AUTOTUNE_CALIBRATION_RESOLUTION        (12u)
  77:Generated_Source\PSoC4/CapSense_Sensing.c **** #define CapSense_AUTOTUNE_CALIBRATION_FREQ_KHZ          (1500u)
  78:Generated_Source\PSoC4/CapSense_Sensing.c **** #define CapSense_AUTOTUNE_CAL_LEVEL                     (CapSense_CSD_RAWCOUNT_CAL_LEVEL)
  79:Generated_Source\PSoC4/CapSense_Sensing.c **** #define CapSense_AUTOTUNE_CAL_UNITS                     (1000u)
  80:Generated_Source\PSoC4/CapSense_Sensing.c **** #define CapSense_AUTOTUNE_CP_MAX                        (69000Lu)
  81:Generated_Source\PSoC4/CapSense_Sensing.c **** #define CapSense_CLK_SOURCE_LFSR_SCALE_OFFSET           (4u)
  82:Generated_Source\PSoC4/CapSense_Sensing.c **** 
  83:Generated_Source\PSoC4/CapSense_Sensing.c **** /* HW IP Block limitation */
  84:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_ENABLE == CapSense_CSDV2)
  85:Generated_Source\PSoC4/CapSense_Sensing.c ****     #define CapSense_CSD_SNS_FREQ_KHZ_MAX               (6000u)
  86:Generated_Source\PSoC4/CapSense_Sensing.c **** #else
  87:Generated_Source\PSoC4/CapSense_Sensing.c ****     #define CapSense_CSD_SNS_FREQ_KHZ_MAX               (12600u)
ARM GAS  C:\Users\mstai\AppData\Local\Temp\ccHdifRP.s 			page 3


  88:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* (CapSense_ENABLE == CapSense_CSDV2) */
  89:Generated_Source\PSoC4/CapSense_Sensing.c **** 
  90:Generated_Source\PSoC4/CapSense_Sensing.c **** #define CapSense_FLIP_FLOP_DIV                          (1u)
  91:Generated_Source\PSoC4/CapSense_Sensing.c **** 
  92:Generated_Source\PSoC4/CapSense_Sensing.c **** #define CapSense_MOD_CSD_CLK_12000KHZ                   (12000uL)
  93:Generated_Source\PSoC4/CapSense_Sensing.c **** #define CapSense_MOD_CSD_CLK_24000KHZ                   (24000uL)
  94:Generated_Source\PSoC4/CapSense_Sensing.c **** #define CapSense_MOD_CSD_CLK_48000KHZ                   (48000uL)
  95:Generated_Source\PSoC4/CapSense_Sensing.c **** 
  96:Generated_Source\PSoC4/CapSense_Sensing.c **** /*****************************************************************************/
  97:Generated_Source\PSoC4/CapSense_Sensing.c **** /* Enumeration types definition                                              */
  98:Generated_Source\PSoC4/CapSense_Sensing.c **** /*****************************************************************************/
  99:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 100:Generated_Source\PSoC4/CapSense_Sensing.c **** typedef enum
 101:Generated_Source\PSoC4/CapSense_Sensing.c **** {
 102:Generated_Source\PSoC4/CapSense_Sensing.c ****     CapSense_RES_PULLUP_E   = 0x02u,
 103:Generated_Source\PSoC4/CapSense_Sensing.c ****     CapSense_RES_PULLDOWN_E = 0x03u
 104:Generated_Source\PSoC4/CapSense_Sensing.c **** } CapSense_PORT_TEST_DM;
 105:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 106:Generated_Source\PSoC4/CapSense_Sensing.c **** typedef enum
 107:Generated_Source\PSoC4/CapSense_Sensing.c **** {
 108:Generated_Source\PSoC4/CapSense_Sensing.c ****     CapSense_STS_RESET      = 0x01u,
 109:Generated_Source\PSoC4/CapSense_Sensing.c ****     CapSense_STS_NO_RESET   = 0x02u
 110:Generated_Source\PSoC4/CapSense_Sensing.c **** } CapSense_TEST_TYPE;
 111:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 112:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 113:Generated_Source\PSoC4/CapSense_Sensing.c **** /*******************************************************************************
 114:Generated_Source\PSoC4/CapSense_Sensing.c **** * Static Function Prototypes
 115:Generated_Source\PSoC4/CapSense_Sensing.c **** *******************************************************************************/
 116:Generated_Source\PSoC4/CapSense_Sensing.c **** /**
 117:Generated_Source\PSoC4/CapSense_Sensing.c **** * \cond SECTION_C_INTERNAL
 118:Generated_Source\PSoC4/CapSense_Sensing.c **** * \addtogroup group_c_internal
 119:Generated_Source\PSoC4/CapSense_Sensing.c **** * \{
 120:Generated_Source\PSoC4/CapSense_Sensing.c **** */
 121:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 122:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_DISABLE == CapSense_CSDV2)
 123:Generated_Source\PSoC4/CapSense_Sensing.c ****     static void CapSense_SsTrimIdacs(void);
 124:Generated_Source\PSoC4/CapSense_Sensing.c ****     #if ((CapSense_ENABLE == CapSense_CSX_EN) || \
 125:Generated_Source\PSoC4/CapSense_Sensing.c ****          (CapSense_ENABLE == CapSense_ISX_EN) || \
 126:Generated_Source\PSoC4/CapSense_Sensing.c ****          (CapSense_IDAC_SINKING == CapSense_CSD_IDAC_CONFIG))
 127:Generated_Source\PSoC4/CapSense_Sensing.c ****         static void CapSense_SsTrimIdacsSinking(void);
 128:Generated_Source\PSoC4/CapSense_Sensing.c ****     #endif /* ((CapSense_ENABLE == CapSense_CSX_EN) || \
 129:Generated_Source\PSoC4/CapSense_Sensing.c ****                (CapSense_IDAC_SINKING == CapSense_CSD_IDAC_CONFIG)) */
 130:Generated_Source\PSoC4/CapSense_Sensing.c ****     #if ((CapSense_ENABLE == CapSense_CSX_EN) || \
 131:Generated_Source\PSoC4/CapSense_Sensing.c ****          (CapSense_ENABLE == CapSense_ISX_EN) || \
 132:Generated_Source\PSoC4/CapSense_Sensing.c ****          (CapSense_IDAC_SOURCING == CapSense_CSD_IDAC_CONFIG))
 133:Generated_Source\PSoC4/CapSense_Sensing.c ****         static void CapSense_SsTrimIdacsSourcing(void);
 134:Generated_Source\PSoC4/CapSense_Sensing.c ****     #endif /* ((CapSense_ENABLE == CapSense_CSX_EN) || \
 135:Generated_Source\PSoC4/CapSense_Sensing.c ****                (CapSense_IDAC_SOURCING == CapSense_CSD_IDAC_CONFIG)) */
 136:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* (CapSense_ENABLE == CapSense_CSDV2) */
 137:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 138:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_ENABLE == CapSense_CSD_EN)
 139:Generated_Source\PSoC4/CapSense_Sensing.c ****     static void CapSense_SsCSDDisableMode(void);
 140:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* (CapSense_ENABLE == CapSense_CSD_EN) */
 141:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_ENABLE == CapSense_CSX_EN)
 142:Generated_Source\PSoC4/CapSense_Sensing.c ****     static void CapSense_SsDisableCSXMode(void);
 143:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* (CapSense_ENABLE == CapSense_CSX_EN) */
 144:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_ENABLE == CapSense_ISX_EN)
ARM GAS  C:\Users\mstai\AppData\Local\Temp\ccHdifRP.s 			page 4


 145:Generated_Source\PSoC4/CapSense_Sensing.c ****     static void CapSense_SsDisableISXMode(void);
 146:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* (CapSense_ENABLE == CapSense_ISX_EN) */
 147:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 148:Generated_Source\PSoC4/CapSense_Sensing.c **** #if(((CapSense_ENABLE == CapSense_CSX_EN) && \
 149:Generated_Source\PSoC4/CapSense_Sensing.c ****      (CapSense_ENABLE == CapSense_CSDV2) && \
 150:Generated_Source\PSoC4/CapSense_Sensing.c ****      (CapSense_CLK_SOURCE_PRSAUTO == CapSense_CSX_TX_CLK_SOURCE) && \
 151:Generated_Source\PSoC4/CapSense_Sensing.c ****      (CapSense_DISABLE == CapSense_CSX_SKIP_OVSMPL_SPECIFIC_NODES)) ||\
 152:Generated_Source\PSoC4/CapSense_Sensing.c ****     ((CapSense_ENABLE == CapSense_CSD_EN) && \
 153:Generated_Source\PSoC4/CapSense_Sensing.c ****      (CapSense_ENABLE == CapSense_CSDV2) && \
 154:Generated_Source\PSoC4/CapSense_Sensing.c ****      (CapSense_CLK_SOURCE_PRSAUTO == CapSense_CSD_SNS_CLK_SOURCE)))
 155:Generated_Source\PSoC4/CapSense_Sensing.c ****     static uint8 CapSense_SsCalcLfsrSize(uint32 snsClkDivider, uint32 conversionsNum);
 156:Generated_Source\PSoC4/CapSense_Sensing.c ****     static uint8 CapSense_SsCalcLfsrScale(uint32 snsClkDivider, uint8 lfsrSize);
 157:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif
 158:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 159:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_ENABLE == CapSense_CSD_EN)
 160:Generated_Source\PSoC4/CapSense_Sensing.c ****     static void CapSense_SsSetWidgetSenseClkSrc(uint32 wdgtIndex, CapSense_RAM_WD_BASE_STRUCT * ptr
 161:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif
 162:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 163:Generated_Source\PSoC4/CapSense_Sensing.c **** #if ((CapSense_ENABLE == CapSense_CSX_EN) && (CapSense_ENABLE == CapSense_CSDV2))
 164:Generated_Source\PSoC4/CapSense_Sensing.c ****     static void CapSense_SsSetWidgetTxClkSrc(uint32 wdgtIndex, CapSense_RAM_WD_BASE_STRUCT * ptrWdg
 165:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif
 166:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 167:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 168:Generated_Source\PSoC4/CapSense_Sensing.c **** /** \}
 169:Generated_Source\PSoC4/CapSense_Sensing.c **** * \endcond */
 170:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 171:Generated_Source\PSoC4/CapSense_Sensing.c **** /*******************************************************************************
 172:Generated_Source\PSoC4/CapSense_Sensing.c **** * Defines module variables
 173:Generated_Source\PSoC4/CapSense_Sensing.c **** *******************************************************************************/
 174:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 175:Generated_Source\PSoC4/CapSense_Sensing.c **** CapSense_SENSE_METHOD_ENUM CapSense_currentSenseMethod = CapSense_UNDEFINED_E;
 176:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 177:Generated_Source\PSoC4/CapSense_Sensing.c **** #if(CapSense_ENABLE == CapSense_MULTI_FREQ_SCAN_EN)
 178:Generated_Source\PSoC4/CapSense_Sensing.c ****     /* Module variable keep track of multi-frequency scan channel index */
 179:Generated_Source\PSoC4/CapSense_Sensing.c ****     uint8 CapSense_scanFreqIndex = 0u;
 180:Generated_Source\PSoC4/CapSense_Sensing.c ****     /* Variable keep frequency offsets */
 181:Generated_Source\PSoC4/CapSense_Sensing.c ****     uint8 CapSense_immunity[CapSense_NUM_SCAN_FREQS] = {0u, 0u, 0u};
 182:Generated_Source\PSoC4/CapSense_Sensing.c **** #else
 183:Generated_Source\PSoC4/CapSense_Sensing.c ****     /* const allows C-compiler to do optimization */
 184:Generated_Source\PSoC4/CapSense_Sensing.c ****     const uint8 CapSense_scanFreqIndex = 0u;
 185:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif
 186:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 187:Generated_Source\PSoC4/CapSense_Sensing.c **** /* Global software variables */
 188:Generated_Source\PSoC4/CapSense_Sensing.c **** volatile uint8 CapSense_widgetIndex = 0u;    /* Index of the scanning widget */
 189:Generated_Source\PSoC4/CapSense_Sensing.c **** volatile uint8 CapSense_sensorIndex = 0u;    /* Index of the scanning sensor */
 190:Generated_Source\PSoC4/CapSense_Sensing.c **** uint8 CapSense_requestScanAllWidget = 0u;
 191:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 192:Generated_Source\PSoC4/CapSense_Sensing.c **** /* Pointer to RAM_SNS_STRUCT structure */
 193:Generated_Source\PSoC4/CapSense_Sensing.c **** CapSense_RAM_SNS_STRUCT *CapSense_curRamSnsPtr;
 194:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 195:Generated_Source\PSoC4/CapSense_Sensing.c **** #if ((CapSense_ENABLE == CapSense_CSD_GANGED_SNS_EN) || \
 196:Generated_Source\PSoC4/CapSense_Sensing.c ****      (CapSense_ENABLE == CapSense_CSX_EN) || \
 197:Generated_Source\PSoC4/CapSense_Sensing.c ****      (CapSense_ENABLE == CapSense_ISX_EN))
 198:Generated_Source\PSoC4/CapSense_Sensing.c ****     /* Pointer to Flash structure holding configuration of widget to be scanned */
 199:Generated_Source\PSoC4/CapSense_Sensing.c ****     CapSense_FLASH_WD_STRUCT const *CapSense_curFlashWdgtPtr = 0u;
 200:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif
 201:Generated_Source\PSoC4/CapSense_Sensing.c **** 
ARM GAS  C:\Users\mstai\AppData\Local\Temp\ccHdifRP.s 			page 5


 202:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_ENABLE == CapSense_CSD_GANGED_SNS_EN)
 203:Generated_Source\PSoC4/CapSense_Sensing.c ****     /* Pointer to Flash structure holding info of sensor to be scanned */
 204:Generated_Source\PSoC4/CapSense_Sensing.c ****     CapSense_FLASH_SNS_STRUCT const *CapSense_curFlashSnsPtr = 0u;
 205:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif
 206:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 207:Generated_Source\PSoC4/CapSense_Sensing.c **** /* Pointer to Flash structure to hold Sns electrode that was connected previously */
 208:Generated_Source\PSoC4/CapSense_Sensing.c **** CapSense_FLASH_IO_STRUCT const *CapSense_curSnsIOPtr;
 209:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 210:Generated_Source\PSoC4/CapSense_Sensing.c **** CapSense_IDAC_GAIN_TABLE_STRUCT const CapSense_idacGainTable[CapSense_IDAC_GAIN_NUMBER] = CapSense_
 211:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 212:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 213:Generated_Source\PSoC4/CapSense_Sensing.c **** /*******************************************************************************
 214:Generated_Source\PSoC4/CapSense_Sensing.c **** * Function Name: CapSense_IsBusy
 215:Generated_Source\PSoC4/CapSense_Sensing.c **** ****************************************************************************//**
 216:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 217:Generated_Source\PSoC4/CapSense_Sensing.c **** * \brief
 218:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Returns the current status of the Component (Scan is completed or Scan is in
 219:Generated_Source\PSoC4/CapSense_Sensing.c **** *  progress).
 220:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 221:Generated_Source\PSoC4/CapSense_Sensing.c **** * \details
 222:Generated_Source\PSoC4/CapSense_Sensing.c **** *  This function returns a status of the hardware block whether a scan is
 223:Generated_Source\PSoC4/CapSense_Sensing.c **** *  currently in progress or not. If the Component is busy, no new scan or Widget
 224:Generated_Source\PSoC4/CapSense_Sensing.c **** *  setup is made. The critical section (i.e. disable global interrupt)
 225:Generated_Source\PSoC4/CapSense_Sensing.c **** *  is recommended for the application when the device transitions from
 226:Generated_Source\PSoC4/CapSense_Sensing.c **** *  the active mode to sleep or deep sleep modes.
 227:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 228:Generated_Source\PSoC4/CapSense_Sensing.c **** * \return
 229:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Returns the current status of the Component:
 230:Generated_Source\PSoC4/CapSense_Sensing.c **** *    - CapSense_NOT_BUSY - No scan is in progress and a next scan
 231:Generated_Source\PSoC4/CapSense_Sensing.c **** *      can be initiated.
 232:Generated_Source\PSoC4/CapSense_Sensing.c **** *    - CapSense_SW_STS_BUSY - The previous scanning is not completed
 233:Generated_Source\PSoC4/CapSense_Sensing.c **** *      and the hardware block is busy.
 234:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 235:Generated_Source\PSoC4/CapSense_Sensing.c **** *******************************************************************************/
 236:Generated_Source\PSoC4/CapSense_Sensing.c **** uint32 CapSense_IsBusy(void)
 237:Generated_Source\PSoC4/CapSense_Sensing.c **** {
 238:Generated_Source\PSoC4/CapSense_Sensing.c ****     return (CapSense_dsRam.status & CapSense_SW_STS_BUSY);
 239:Generated_Source\PSoC4/CapSense_Sensing.c **** }
 240:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 241:Generated_Source\PSoC4/CapSense_Sensing.c **** /*******************************************************************************
 242:Generated_Source\PSoC4/CapSense_Sensing.c **** * Function Name: CapSense_SetupWidget
 243:Generated_Source\PSoC4/CapSense_Sensing.c **** ****************************************************************************//**
 244:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 245:Generated_Source\PSoC4/CapSense_Sensing.c **** * \brief
 246:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Performs the initialization required to scan the specified widget.
 247:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 248:Generated_Source\PSoC4/CapSense_Sensing.c **** * \details
 249:Generated_Source\PSoC4/CapSense_Sensing.c **** *  This function prepares the Component to scan all the sensors in the specified
 250:Generated_Source\PSoC4/CapSense_Sensing.c **** *  widget by executing the following tasks:
 251:Generated_Source\PSoC4/CapSense_Sensing.c **** *    1. Re-initialize the hardware if it is not configured to perform the
 252:Generated_Source\PSoC4/CapSense_Sensing.c **** *       sensing method used by the specified widget, this happens only if multiple
 253:Generated_Source\PSoC4/CapSense_Sensing.c **** *       sensing methods are used in the Component.
 254:Generated_Source\PSoC4/CapSense_Sensing.c **** *    2. Initialize the hardware with specific sensing configuration (e.g.
 255:Generated_Source\PSoC4/CapSense_Sensing.c **** *       sensor clock, scan resolution) used by the widget.
 256:Generated_Source\PSoC4/CapSense_Sensing.c **** *    3. Disconnect all previously connected electrodes, if the electrodes
 257:Generated_Source\PSoC4/CapSense_Sensing.c **** *       connected by the lower level SetupWidgetExt() or ConnectSns() functions
 258:Generated_Source\PSoC4/CapSense_Sensing.c ****         and not disconnected.
ARM GAS  C:\Users\mstai\AppData\Local\Temp\ccHdifRP.s 			page 6


 259:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 260:Generated_Source\PSoC4/CapSense_Sensing.c **** *  This function does not start sensor scanning, the CapSense_Scan()
 261:Generated_Source\PSoC4/CapSense_Sensing.c **** *  function must be called to start the scan sensors in the widget. If this
 262:Generated_Source\PSoC4/CapSense_Sensing.c **** *  function is called more than once, it does not break the Component operation,
 263:Generated_Source\PSoC4/CapSense_Sensing.c **** *  but only the last initialized widget is in effect.
 264:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 265:Generated_Source\PSoC4/CapSense_Sensing.c **** * \param widgetId
 266:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Specifies the ID number of the widget to be initialized for scanning.
 267:Generated_Source\PSoC4/CapSense_Sensing.c **** *  A macro for the widget ID can be found in the
 268:Generated_Source\PSoC4/CapSense_Sensing.c **** *  CapSense Configuration header file defined as
 269:Generated_Source\PSoC4/CapSense_Sensing.c **** *  CapSense_<WidgetName>_WDGT_ID.
 270:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 271:Generated_Source\PSoC4/CapSense_Sensing.c **** * \return
 272:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Returns the status of the widget setting up operation:
 273:Generated_Source\PSoC4/CapSense_Sensing.c **** *    - CYRET_SUCCESS - The operation is successfully completed.
 274:Generated_Source\PSoC4/CapSense_Sensing.c **** *    - CYRET_BAD_PARAM - The widget is invalid or if the specified widget is
 275:Generated_Source\PSoC4/CapSense_Sensing.c **** *      disabled
 276:Generated_Source\PSoC4/CapSense_Sensing.c **** *    - CYRET_INVALID_STATE - The previous scanning is not completed and the
 277:Generated_Source\PSoC4/CapSense_Sensing.c **** *      hardware block is busy.
 278:Generated_Source\PSoC4/CapSense_Sensing.c **** *    - CYRET_UNKNOWN - An unknown sensing method is used by the widget or any
 279:Generated_Source\PSoC4/CapSense_Sensing.c **** *      other spurious error occurred.
 280:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 281:Generated_Source\PSoC4/CapSense_Sensing.c **** **********************************************************************************/
 282:Generated_Source\PSoC4/CapSense_Sensing.c **** cystatus CapSense_SetupWidget(uint32 widgetId)
 283:Generated_Source\PSoC4/CapSense_Sensing.c **** {
 284:Generated_Source\PSoC4/CapSense_Sensing.c ****     cystatus widgetStatus;
 285:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 286:Generated_Source\PSoC4/CapSense_Sensing.c ****     if (CapSense_WDGT_SW_STS_BUSY == (CapSense_dsRam.status & CapSense_WDGT_SW_STS_BUSY))
 287:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 288:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Previous widget is being scanned. Return error. */
 289:Generated_Source\PSoC4/CapSense_Sensing.c ****         widgetStatus = CYRET_INVALID_STATE;
 290:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 291:Generated_Source\PSoC4/CapSense_Sensing.c ****     /*
 292:Generated_Source\PSoC4/CapSense_Sensing.c ****      *  Check if widget id is valid, specified widget is enabled and widget did not
 293:Generated_Source\PSoC4/CapSense_Sensing.c ****      *  detect any fault conditions if BIST is enabled. If all conditions are met,
 294:Generated_Source\PSoC4/CapSense_Sensing.c ****      *  set widgetStatus as good, if not, set widgetStatus as bad.
 295:Generated_Source\PSoC4/CapSense_Sensing.c ****      */
 296:Generated_Source\PSoC4/CapSense_Sensing.c ****     else if ((CapSense_TOTAL_WIDGETS > widgetId) &&
 297:Generated_Source\PSoC4/CapSense_Sensing.c ****         (0uL != CapSense_GET_WIDGET_EN_STATUS(widgetId)))
 298:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 299:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 300:Generated_Source\PSoC4/CapSense_Sensing.c ****         widgetStatus = CYRET_SUCCESS;
 301:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 302:Generated_Source\PSoC4/CapSense_Sensing.c ****     else
 303:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 304:Generated_Source\PSoC4/CapSense_Sensing.c ****         widgetStatus = CYRET_BAD_PARAM;
 305:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 306:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 307:Generated_Source\PSoC4/CapSense_Sensing.c ****     /*
 308:Generated_Source\PSoC4/CapSense_Sensing.c ****      * Check widgetStatus flag that is set earlier, if flag is good, then set up only
 309:Generated_Source\PSoC4/CapSense_Sensing.c ****      * widget
 310:Generated_Source\PSoC4/CapSense_Sensing.c ****      */
 311:Generated_Source\PSoC4/CapSense_Sensing.c ****     if (CYRET_SUCCESS == widgetStatus)
 312:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 313:Generated_Source\PSoC4/CapSense_Sensing.c ****         switch (CapSense_GET_SENSE_METHOD(&CapSense_dsFlash.wdgtArray[widgetId]))
 314:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 315:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_ENABLE == CapSense_CSX_EN)
ARM GAS  C:\Users\mstai\AppData\Local\Temp\ccHdifRP.s 			page 7


 316:Generated_Source\PSoC4/CapSense_Sensing.c ****             case CapSense_SENSE_METHOD_CSX_E:
 317:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Set up widget for CSX scan */
 318:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_CSXSetupWidget(widgetId);
 319:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
 320:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif
 321:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_ENABLE == CapSense_CSD_EN)
 322:Generated_Source\PSoC4/CapSense_Sensing.c ****             case CapSense_SENSE_METHOD_CSD_E:
 323:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Set up widget for CSD scan */
 324:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_CSDSetupWidget(widgetId);
 325:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
 326:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif
 327:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_ENABLE == CapSense_ISX_EN)
 328:Generated_Source\PSoC4/CapSense_Sensing.c ****             case CapSense_SENSE_METHOD_ISX_E:
 329:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Set up widget for ISX scan */
 330:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_ISXSetupWidget(widgetId);
 331:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
 332:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif
 333:Generated_Source\PSoC4/CapSense_Sensing.c ****         default:
 334:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* Sensing method is invalid, return error to caller */
 335:Generated_Source\PSoC4/CapSense_Sensing.c ****             widgetStatus = CYRET_UNKNOWN;
 336:Generated_Source\PSoC4/CapSense_Sensing.c ****             break;
 337:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
 338:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 339:Generated_Source\PSoC4/CapSense_Sensing.c ****     return (widgetStatus);
 340:Generated_Source\PSoC4/CapSense_Sensing.c **** }
 341:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 342:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 343:Generated_Source\PSoC4/CapSense_Sensing.c **** /*******************************************************************************
 344:Generated_Source\PSoC4/CapSense_Sensing.c **** * Function Name: CapSense_Scan
 345:Generated_Source\PSoC4/CapSense_Sensing.c **** ****************************************************************************//**
 346:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 347:Generated_Source\PSoC4/CapSense_Sensing.c **** * \brief
 348:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Initiates scanning of all the sensors in the widget initialized by
 349:Generated_Source\PSoC4/CapSense_Sensing.c **** *  CapSense_SetupWidget(), if no scan is in progress.
 350:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 351:Generated_Source\PSoC4/CapSense_Sensing.c **** * \details
 352:Generated_Source\PSoC4/CapSense_Sensing.c **** *  This function is called only after the CapSense_SetupWidget()
 353:Generated_Source\PSoC4/CapSense_Sensing.c **** *  function is called to start the scanning of the sensors in the widget. The
 354:Generated_Source\PSoC4/CapSense_Sensing.c **** *  status of a sensor scan must be checked using the CapSense_IsBusy()
 355:Generated_Source\PSoC4/CapSense_Sensing.c **** *  API prior to starting a next scan or setting up another widget.
 356:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 357:Generated_Source\PSoC4/CapSense_Sensing.c **** * \return
 358:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Returns the status of the scan initiation operation:
 359:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - CYRET_SUCCESS - Scanning is successfully started.
 360:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - CYRET_INVALID_STATE - The previous scanning is not completed and the
 361:Generated_Source\PSoC4/CapSense_Sensing.c **** *    hardware block is busy.
 362:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - CYRET_UNKNOWN - An unknown sensing method is used by the widget.
 363:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 364:Generated_Source\PSoC4/CapSense_Sensing.c **** ********************************************************************************/
 365:Generated_Source\PSoC4/CapSense_Sensing.c **** cystatus CapSense_Scan(void)
 366:Generated_Source\PSoC4/CapSense_Sensing.c **** {
 367:Generated_Source\PSoC4/CapSense_Sensing.c ****     cystatus scanStatus = CYRET_SUCCESS;
 368:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 369:Generated_Source\PSoC4/CapSense_Sensing.c ****     if (CapSense_WDGT_SW_STS_BUSY == (CapSense_dsRam.status & CapSense_WDGT_SW_STS_BUSY))
 370:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 371:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Previous widget is being scanned. Return error. */
 372:Generated_Source\PSoC4/CapSense_Sensing.c ****         scanStatus = CYRET_INVALID_STATE;
ARM GAS  C:\Users\mstai\AppData\Local\Temp\ccHdifRP.s 			page 8


 373:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 374:Generated_Source\PSoC4/CapSense_Sensing.c ****     else
 375:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 376:Generated_Source\PSoC4/CapSense_Sensing.c ****         switch (CapSense_currentSenseMethod)
 377:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 378:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_ENABLE == CapSense_CSX_EN)
 379:Generated_Source\PSoC4/CapSense_Sensing.c ****             case CapSense_SENSE_METHOD_CSX_E:
 380:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_CSXScan();
 381:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
 382:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif
 383:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_ENABLE == CapSense_CSD_EN)
 384:Generated_Source\PSoC4/CapSense_Sensing.c ****             case CapSense_SENSE_METHOD_CSD_E:
 385:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_CSDScan();
 386:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
 387:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif
 388:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_ENABLE == CapSense_ISX_EN)
 389:Generated_Source\PSoC4/CapSense_Sensing.c ****             case CapSense_SENSE_METHOD_ISX_E:
 390:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_ISXScan();
 391:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
 392:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif
 393:Generated_Source\PSoC4/CapSense_Sensing.c ****         default:
 394:Generated_Source\PSoC4/CapSense_Sensing.c ****             scanStatus = CYRET_UNKNOWN;
 395:Generated_Source\PSoC4/CapSense_Sensing.c ****             break;
 396:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
 397:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 398:Generated_Source\PSoC4/CapSense_Sensing.c ****     return (scanStatus);
 399:Generated_Source\PSoC4/CapSense_Sensing.c **** }
 400:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 401:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 402:Generated_Source\PSoC4/CapSense_Sensing.c **** /*******************************************************************************
 403:Generated_Source\PSoC4/CapSense_Sensing.c **** * Function Name: CapSense_ScanAllWidgets
 404:Generated_Source\PSoC4/CapSense_Sensing.c **** ****************************************************************************//**
 405:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 406:Generated_Source\PSoC4/CapSense_Sensing.c **** * \brief
 407:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Initializes the first enabled widget and scanning of all the sensors in the
 408:Generated_Source\PSoC4/CapSense_Sensing.c **** *  widget, then the same process is repeated for all the widgets in the Component,
 409:Generated_Source\PSoC4/CapSense_Sensing.c **** *  i.e. scanning of all the widgets in the Component.
 410:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 411:Generated_Source\PSoC4/CapSense_Sensing.c **** * \details
 412:Generated_Source\PSoC4/CapSense_Sensing.c **** *  This function initializes a widget and scans all the sensors in the widget,
 413:Generated_Source\PSoC4/CapSense_Sensing.c **** *  and then repeats the same for all the widgets in the Component. The tasks of
 414:Generated_Source\PSoC4/CapSense_Sensing.c **** *  the CapSense_SetupWidget() and CapSense_Scan() functions are
 415:Generated_Source\PSoC4/CapSense_Sensing.c **** *  executed by these functions. The status of a sensor scan must be checked
 416:Generated_Source\PSoC4/CapSense_Sensing.c **** *  using the CapSense_IsBusy() API prior to starting a next scan
 417:Generated_Source\PSoC4/CapSense_Sensing.c **** *  or setting up another widget.
 418:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 419:Generated_Source\PSoC4/CapSense_Sensing.c **** * \return
 420:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Returns the status of the operation:
 421:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - CYRET_SUCCESS - Scanning is successfully started.
 422:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - CYRET_BAD_PARAM - All the widgets are disabled.
 423:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - CYRET_INVALID_STATE - The previous scanning is not completed and the HW block is busy.
 424:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - CYRET_UNKNOWN - There are unknown errors.
 425:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 426:Generated_Source\PSoC4/CapSense_Sensing.c **** *******************************************************************************/
 427:Generated_Source\PSoC4/CapSense_Sensing.c **** cystatus CapSense_ScanAllWidgets(void)
 428:Generated_Source\PSoC4/CapSense_Sensing.c **** {
 429:Generated_Source\PSoC4/CapSense_Sensing.c ****     cystatus scanStatus = CYRET_UNKNOWN;
ARM GAS  C:\Users\mstai\AppData\Local\Temp\ccHdifRP.s 			page 9


 430:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 431:Generated_Source\PSoC4/CapSense_Sensing.c ****     uint32 wdgtIndex;
 432:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 433:Generated_Source\PSoC4/CapSense_Sensing.c ****     if (CapSense_SW_STS_BUSY == (CapSense_dsRam.status & CapSense_SW_STS_BUSY))
 434:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 435:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Previous widget is being scanned. Return error. */
 436:Generated_Source\PSoC4/CapSense_Sensing.c ****         scanStatus = CYRET_INVALID_STATE;
 437:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 438:Generated_Source\PSoC4/CapSense_Sensing.c ****     else
 439:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 440:Generated_Source\PSoC4/CapSense_Sensing.c ****         /*
 441:Generated_Source\PSoC4/CapSense_Sensing.c ****          *  Set up widget first widget.
 442:Generated_Source\PSoC4/CapSense_Sensing.c ****          *  If widget returned error, set up next, continue same until widget does not return error
 443:Generated_Source\PSoC4/CapSense_Sensing.c ****          */
 444:Generated_Source\PSoC4/CapSense_Sensing.c ****         for (wdgtIndex = 0u;
 445:Generated_Source\PSoC4/CapSense_Sensing.c ****              wdgtIndex < CapSense_TOTAL_WIDGETS;
 446:Generated_Source\PSoC4/CapSense_Sensing.c ****              wdgtIndex++)
 447:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 448:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 449:Generated_Source\PSoC4/CapSense_Sensing.c ****             scanStatus = CapSense_SetupWidget(wdgtIndex);
 450:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 451:Generated_Source\PSoC4/CapSense_Sensing.c ****             if (CYRET_SUCCESS == scanStatus)
 452:Generated_Source\PSoC4/CapSense_Sensing.c ****             {
 453:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #if (0u != (CapSense_TOTAL_WIDGETS - 1u))
 454:Generated_Source\PSoC4/CapSense_Sensing.c ****                     /* If there are more than one widget to be scanned, request callback to scan ne
 455:Generated_Source\PSoC4/CapSense_Sensing.c ****                     if ((CapSense_TOTAL_WIDGETS - 1u) > wdgtIndex)
 456:Generated_Source\PSoC4/CapSense_Sensing.c ****                     {
 457:Generated_Source\PSoC4/CapSense_Sensing.c ****                          /* Request callback to scan next widget in ISR */
 458:Generated_Source\PSoC4/CapSense_Sensing.c ****                         CapSense_requestScanAllWidget = CapSense_ENABLE;
 459:Generated_Source\PSoC4/CapSense_Sensing.c ****                     }
 460:Generated_Source\PSoC4/CapSense_Sensing.c ****                     else
 461:Generated_Source\PSoC4/CapSense_Sensing.c ****                     {
 462:Generated_Source\PSoC4/CapSense_Sensing.c ****                         /* Request to exit in ISR (Do not scan the next widgets) */
 463:Generated_Source\PSoC4/CapSense_Sensing.c ****                         CapSense_requestScanAllWidget = CapSense_DISABLE;
 464:Generated_Source\PSoC4/CapSense_Sensing.c ****                     }
 465:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #else
 466:Generated_Source\PSoC4/CapSense_Sensing.c ****                     {
 467:Generated_Source\PSoC4/CapSense_Sensing.c ****                         /* Request to exit in ISR (We have only one widget) */
 468:Generated_Source\PSoC4/CapSense_Sensing.c ****                         CapSense_requestScanAllWidget = CapSense_DISABLE;
 469:Generated_Source\PSoC4/CapSense_Sensing.c ****                     }
 470:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #endif  /* (0u != (CapSense_TOTAL_WIDGETS - 1u)) */
 471:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 472:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Initiate scan and quit loop */
 473:Generated_Source\PSoC4/CapSense_Sensing.c ****                 scanStatus = CapSense_Scan();
 474:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 475:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
 476:Generated_Source\PSoC4/CapSense_Sensing.c ****             }
 477:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
 478:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 479:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 480:Generated_Source\PSoC4/CapSense_Sensing.c ****     return (scanStatus);
 481:Generated_Source\PSoC4/CapSense_Sensing.c **** }
 482:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 483:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 484:Generated_Source\PSoC4/CapSense_Sensing.c **** /*******************************************************************************
 485:Generated_Source\PSoC4/CapSense_Sensing.c **** * Function Name: CapSense_SetupWidgetExt
 486:Generated_Source\PSoC4/CapSense_Sensing.c **** ****************************************************************************//**
ARM GAS  C:\Users\mstai\AppData\Local\Temp\ccHdifRP.s 			page 10


 487:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 488:Generated_Source\PSoC4/CapSense_Sensing.c **** * \brief
 489:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Performs extended initialization for the specified widget and also performs
 490:Generated_Source\PSoC4/CapSense_Sensing.c **** *  initialization required for a specific sensor in the widget. This function
 491:Generated_Source\PSoC4/CapSense_Sensing.c **** *  requires using the CapSense_ScanExt() function to initiate a scan.
 492:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 493:Generated_Source\PSoC4/CapSense_Sensing.c **** * \details
 494:Generated_Source\PSoC4/CapSense_Sensing.c **** *  This function does the same as CapSense_SetupWidget() and also
 495:Generated_Source\PSoC4/CapSense_Sensing.c **** *  does the following tasks:
 496:Generated_Source\PSoC4/CapSense_Sensing.c **** *    1. Connects the first sensor of the widget.
 497:Generated_Source\PSoC4/CapSense_Sensing.c **** *    2. Configures the CSD HW block to perform a scan of the specified sensor.
 498:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 499:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Once this function is called to initialize a widget and a sensor, the
 500:Generated_Source\PSoC4/CapSense_Sensing.c **** *  CapSense_ScanExt() function is called to scan the sensor.
 501:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 502:Generated_Source\PSoC4/CapSense_Sensing.c **** *  This function is called when no scanning is in progress. I.e.
 503:Generated_Source\PSoC4/CapSense_Sensing.c **** *  CapSense_IsBusy() returns a non-busy status.
 504:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 505:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Calling this function directly from the application layer is not
 506:Generated_Source\PSoC4/CapSense_Sensing.c **** *  recommended. This function is used to implement only the user's specific
 507:Generated_Source\PSoC4/CapSense_Sensing.c **** *  use cases (for faster execution time or pipeline scanning for example).
 508:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 509:Generated_Source\PSoC4/CapSense_Sensing.c **** * \param widgetId
 510:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Specifies the ID number of the widget to perform hardware and firmware
 511:Generated_Source\PSoC4/CapSense_Sensing.c **** *  initialization required for scanning the specific sensor in the specific
 512:Generated_Source\PSoC4/CapSense_Sensing.c **** *  widget.
 513:Generated_Source\PSoC4/CapSense_Sensing.c **** *  A macro for the widget ID can be found in the CapSense
 514:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Configuration header file defined as CapSense_<WidgetName>_WDGT_ID.
 515:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 516:Generated_Source\PSoC4/CapSense_Sensing.c **** * \param sensorId
 517:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Specifies the ID number of the sensor within the widget to perform hardware
 518:Generated_Source\PSoC4/CapSense_Sensing.c **** *  and firmware initialization required for scanning a specific sensor in a
 519:Generated_Source\PSoC4/CapSense_Sensing.c **** *  specific widget.
 520:Generated_Source\PSoC4/CapSense_Sensing.c **** *  A macro for the sensor ID within a specified widget can be found in the
 521:Generated_Source\PSoC4/CapSense_Sensing.c **** *  CapSense Configuration header file defined as
 522:Generated_Source\PSoC4/CapSense_Sensing.c **** *  CapSense_<WidgetName>_SNS<SensorNumber>_ID
 523:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 524:Generated_Source\PSoC4/CapSense_Sensing.c **** * \return
 525:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Returns the status of the operation:
 526:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - CYRET_SUCCESS - The operation is successfully completed.
 527:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - CYRET_BAD_PARAM - The widget is invalid or if the specified widget is
 528:Generated_Source\PSoC4/CapSense_Sensing.c **** *    disabled
 529:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - CYRET_INVALID_STATE - The previous scanning is not completed and the
 530:Generated_Source\PSoC4/CapSense_Sensing.c **** *    hardware block is busy.
 531:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - CYRET_UNKNOWN - An unknown sensing method is used by the widget or any
 532:Generated_Source\PSoC4/CapSense_Sensing.c **** *    other spurious error occurred.
 533:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 534:Generated_Source\PSoC4/CapSense_Sensing.c **** *******************************************************************************/
 535:Generated_Source\PSoC4/CapSense_Sensing.c **** cystatus CapSense_SetupWidgetExt(uint32 widgetId, uint32 sensorId)
 536:Generated_Source\PSoC4/CapSense_Sensing.c **** {
 537:Generated_Source\PSoC4/CapSense_Sensing.c ****     cystatus widgetStatus;
 538:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 539:Generated_Source\PSoC4/CapSense_Sensing.c ****     if (CapSense_WDGT_SW_STS_BUSY == (CapSense_dsRam.status & CapSense_WDGT_SW_STS_BUSY))
 540:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 541:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Previous widget is being scanned. Return error. */
 542:Generated_Source\PSoC4/CapSense_Sensing.c ****         widgetStatus = CYRET_INVALID_STATE;
 543:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
ARM GAS  C:\Users\mstai\AppData\Local\Temp\ccHdifRP.s 			page 11


 544:Generated_Source\PSoC4/CapSense_Sensing.c ****     /*
 545:Generated_Source\PSoC4/CapSense_Sensing.c ****      *  Check if widget id is valid, specified widget is enabled and widget did not
 546:Generated_Source\PSoC4/CapSense_Sensing.c ****      *  detect any fault conditions if BIST is enabled. If all conditions are met,
 547:Generated_Source\PSoC4/CapSense_Sensing.c ****      *  set widgetStatus as good, if not, set widgetStatus as bad.
 548:Generated_Source\PSoC4/CapSense_Sensing.c ****      */
 549:Generated_Source\PSoC4/CapSense_Sensing.c ****     else if ((CapSense_TOTAL_WIDGETS > widgetId) &&
 550:Generated_Source\PSoC4/CapSense_Sensing.c ****         (0uL != CapSense_GET_WIDGET_EN_STATUS(widgetId)) &&
 551:Generated_Source\PSoC4/CapSense_Sensing.c ****         (sensorId < CapSense_GET_SENSOR_COUNT(widgetId)))
 552:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 553:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 554:Generated_Source\PSoC4/CapSense_Sensing.c ****         widgetStatus = CYRET_SUCCESS;
 555:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 556:Generated_Source\PSoC4/CapSense_Sensing.c ****     else
 557:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 558:Generated_Source\PSoC4/CapSense_Sensing.c ****         widgetStatus = CYRET_BAD_PARAM;
 559:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 560:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 561:Generated_Source\PSoC4/CapSense_Sensing.c ****     /*
 562:Generated_Source\PSoC4/CapSense_Sensing.c ****      * Check widgetStatus flag that is set earlier, if flag is good, then set up only
 563:Generated_Source\PSoC4/CapSense_Sensing.c ****      * widget
 564:Generated_Source\PSoC4/CapSense_Sensing.c ****      */
 565:Generated_Source\PSoC4/CapSense_Sensing.c ****     if (CYRET_SUCCESS == widgetStatus)
 566:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 567:Generated_Source\PSoC4/CapSense_Sensing.c ****         switch (CapSense_GET_SENSE_METHOD(&CapSense_dsFlash.wdgtArray[widgetId]))
 568:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 569:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_ENABLE == CapSense_CSX_EN)
 570:Generated_Source\PSoC4/CapSense_Sensing.c ****             case CapSense_SENSE_METHOD_CSX_E:
 571:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Set up widget for CSX scan */
 572:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_CSXSetupWidgetExt(widgetId, sensorId);
 573:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
 574:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif
 575:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_ENABLE == CapSense_CSD_EN)
 576:Generated_Source\PSoC4/CapSense_Sensing.c ****             case CapSense_SENSE_METHOD_CSD_E:
 577:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Set up widget for CSD scan */
 578:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_CSDSetupWidgetExt(widgetId, sensorId);
 579:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
 580:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif
 581:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_ENABLE == CapSense_ISX_EN)
 582:Generated_Source\PSoC4/CapSense_Sensing.c ****             case CapSense_SENSE_METHOD_ISX_E:
 583:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Set up widget for ISX scan */
 584:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_ISXSetupWidgetExt(widgetId, sensorId);
 585:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
 586:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif
 587:Generated_Source\PSoC4/CapSense_Sensing.c ****         default:
 588:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* Sensing method is invalid, return error to caller */
 589:Generated_Source\PSoC4/CapSense_Sensing.c ****             widgetStatus = CYRET_UNKNOWN;
 590:Generated_Source\PSoC4/CapSense_Sensing.c ****             break;
 591:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
 592:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 593:Generated_Source\PSoC4/CapSense_Sensing.c ****     return (widgetStatus);
 594:Generated_Source\PSoC4/CapSense_Sensing.c **** }
 595:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 596:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 597:Generated_Source\PSoC4/CapSense_Sensing.c **** /*******************************************************************************
 598:Generated_Source\PSoC4/CapSense_Sensing.c **** * Function Name: CapSense_ScanExt
 599:Generated_Source\PSoC4/CapSense_Sensing.c **** ****************************************************************************//**
 600:Generated_Source\PSoC4/CapSense_Sensing.c **** *
ARM GAS  C:\Users\mstai\AppData\Local\Temp\ccHdifRP.s 			page 12


 601:Generated_Source\PSoC4/CapSense_Sensing.c **** * \brief
 602:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Starts a conversion on the pre-configured sensor. This function requires
 603:Generated_Source\PSoC4/CapSense_Sensing.c **** *  using the CapSense_SetupWidgetExt() function to set up the a
 604:Generated_Source\PSoC4/CapSense_Sensing.c **** *  widget.
 605:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 606:Generated_Source\PSoC4/CapSense_Sensing.c **** * \details
 607:Generated_Source\PSoC4/CapSense_Sensing.c **** *  This function performs single scanning of one sensor in the widget configured
 608:Generated_Source\PSoC4/CapSense_Sensing.c **** *  by the CapSense_SetupWidgetExt() function.
 609:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 610:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Calling this function directly from the application layer is not
 611:Generated_Source\PSoC4/CapSense_Sensing.c **** *  recommended. This function is used to implement only the user's specific
 612:Generated_Source\PSoC4/CapSense_Sensing.c **** *  use cases (for faster execution time or pipeline scanning for example).
 613:Generated_Source\PSoC4/CapSense_Sensing.c **** *  This function is called when no scanning is in progress. I.e.
 614:Generated_Source\PSoC4/CapSense_Sensing.c **** *  CapSense_IsBusy() returns a non-busy status.
 615:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 616:Generated_Source\PSoC4/CapSense_Sensing.c **** *  The sensor must be preconfigured by using the
 617:Generated_Source\PSoC4/CapSense_Sensing.c **** *  CapSense_SetupWidgetExt() API prior to calling this function.
 618:Generated_Source\PSoC4/CapSense_Sensing.c **** *  The sensor remains ready for a next scan if a previous scan was triggered
 619:Generated_Source\PSoC4/CapSense_Sensing.c **** *  by using the CapSense_ScanExt() function. In this case, calling
 620:Generated_Source\PSoC4/CapSense_Sensing.c **** *  CapSense_SetupWidgetExt() is not required every time before the
 621:Generated_Source\PSoC4/CapSense_Sensing.c **** *  CapSense_ScanExt() function. If a previous scan was triggered in
 622:Generated_Source\PSoC4/CapSense_Sensing.c **** *  any other way - CapSense_Scan(), CapSense_ScanAllWidgets() or
 623:Generated_Source\PSoC4/CapSense_Sensing.c **** *  CapSense_RunTuner() - (see the CapSense_RunTuner() function
 624:Generated_Source\PSoC4/CapSense_Sensing.c **** *  description for more details), the sensor must be preconfigured again by
 625:Generated_Source\PSoC4/CapSense_Sensing.c **** *  using the CapSense_SetupWidgetExt() API prior to calling the
 626:Generated_Source\PSoC4/CapSense_Sensing.c **** *  CapSense_ScanExt() function.
 627:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 628:Generated_Source\PSoC4/CapSense_Sensing.c **** *  If disconnection of the sensors is required after calling
 629:Generated_Source\PSoC4/CapSense_Sensing.c **** *  CapSense_ScanExt(), the CapSense_CSDDisconnectSns() or
 630:Generated_Source\PSoC4/CapSense_Sensing.c **** *  CapSense_CSXDisconnectTx() or CapSense_CSXDisconnectRx()
 631:Generated_Source\PSoC4/CapSense_Sensing.c **** *  functions can be used.
 632:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 633:Generated_Source\PSoC4/CapSense_Sensing.c **** * \return
 634:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Returns the status of the scan initiation operation:
 635:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - CYRET_SUCCESS - Scanning is successfully started.
 636:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - CYRET_INVALID_STATE - The previous scanning is not completed and the
 637:Generated_Source\PSoC4/CapSense_Sensing.c **** *    hardware block is busy.
 638:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - CYRET_UNKNOWN - An unknown sensing method is used by the widget.
 639:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 640:Generated_Source\PSoC4/CapSense_Sensing.c **** *******************************************************************************/
 641:Generated_Source\PSoC4/CapSense_Sensing.c **** cystatus CapSense_ScanExt(void)
 642:Generated_Source\PSoC4/CapSense_Sensing.c **** {
 643:Generated_Source\PSoC4/CapSense_Sensing.c ****     cystatus scanStatus = CYRET_SUCCESS;
 644:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 645:Generated_Source\PSoC4/CapSense_Sensing.c ****     if (CapSense_WDGT_SW_STS_BUSY == (CapSense_dsRam.status & CapSense_WDGT_SW_STS_BUSY))
 646:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 647:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Previous widget is being scanned. Return error. */
 648:Generated_Source\PSoC4/CapSense_Sensing.c ****         scanStatus = CYRET_INVALID_STATE;
 649:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 650:Generated_Source\PSoC4/CapSense_Sensing.c ****     else
 651:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 652:Generated_Source\PSoC4/CapSense_Sensing.c ****         switch (CapSense_currentSenseMethod)
 653:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 654:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_ENABLE == CapSense_CSX_EN)
 655:Generated_Source\PSoC4/CapSense_Sensing.c ****             case CapSense_SENSE_METHOD_CSX_E:
 656:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_CSXScanExt();
 657:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
ARM GAS  C:\Users\mstai\AppData\Local\Temp\ccHdifRP.s 			page 13


 658:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif
 659:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_ENABLE == CapSense_CSD_EN)
 660:Generated_Source\PSoC4/CapSense_Sensing.c ****             case CapSense_SENSE_METHOD_CSD_E:
 661:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_CSDScanExt();
 662:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
 663:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif
 664:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_ENABLE == CapSense_ISX_EN)
 665:Generated_Source\PSoC4/CapSense_Sensing.c ****             case CapSense_SENSE_METHOD_ISX_E:
 666:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_ISXScanExt();
 667:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
 668:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif
 669:Generated_Source\PSoC4/CapSense_Sensing.c ****         default:
 670:Generated_Source\PSoC4/CapSense_Sensing.c ****             scanStatus = CYRET_UNKNOWN;
 671:Generated_Source\PSoC4/CapSense_Sensing.c ****             break;
 672:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
 673:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 674:Generated_Source\PSoC4/CapSense_Sensing.c ****     return (scanStatus);
 675:Generated_Source\PSoC4/CapSense_Sensing.c **** }
 676:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 677:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 678:Generated_Source\PSoC4/CapSense_Sensing.c **** /*******************************************************************************
 679:Generated_Source\PSoC4/CapSense_Sensing.c **** * Function Name: CapSense_SsInitialize
 680:Generated_Source\PSoC4/CapSense_Sensing.c **** ****************************************************************************//**
 681:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 682:Generated_Source\PSoC4/CapSense_Sensing.c **** * \brief
 683:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Performs hardware and firmware initialization required for proper operation
 684:Generated_Source\PSoC4/CapSense_Sensing.c **** *  of the CapSense Component. This function is called from
 685:Generated_Source\PSoC4/CapSense_Sensing.c **** *  the CapSense_Start() API prior to calling any other APIs of the Component.
 686:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 687:Generated_Source\PSoC4/CapSense_Sensing.c **** * \details
 688:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Performs hardware and firmware initialization required for proper operation
 689:Generated_Source\PSoC4/CapSense_Sensing.c **** *  of the CapSense Component. This function is called from
 690:Generated_Source\PSoC4/CapSense_Sensing.c **** *  the CapSense_Start() API prior to calling any other APIs of the Component.
 691:Generated_Source\PSoC4/CapSense_Sensing.c **** *  1. Depending on the configuration, the function initializes the CSD block
 692:Generated_Source\PSoC4/CapSense_Sensing.c **** *     for the corresponding sensing mode.
 693:Generated_Source\PSoC4/CapSense_Sensing.c **** *  2. The function updates the dsRam.wdgtWorking variable with 1 when Self-test
 694:Generated_Source\PSoC4/CapSense_Sensing.c **** *     is enabled.
 695:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 696:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Calling the CapSense_Start API is the recommended method to initialize
 697:Generated_Source\PSoC4/CapSense_Sensing.c **** *  the CapSense Component at power-up. The CapSense_SsInitialize()
 698:Generated_Source\PSoC4/CapSense_Sensing.c **** *  API should not be used for initialization, resume, or wake-up operations.
 699:Generated_Source\PSoC4/CapSense_Sensing.c **** *  The dsRam.wdgtWorking variable is updated.
 700:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 701:Generated_Source\PSoC4/CapSense_Sensing.c **** * \return status
 702:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Returns status of operation:
 703:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - Zero        - Indicates successful initialization.
 704:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - Non-zero    - One or more errors occurred in the initialization process.
 705:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 706:Generated_Source\PSoC4/CapSense_Sensing.c **** *******************************************************************************/
 707:Generated_Source\PSoC4/CapSense_Sensing.c **** cystatus CapSense_SsInitialize(void)
 708:Generated_Source\PSoC4/CapSense_Sensing.c **** {
 709:Generated_Source\PSoC4/CapSense_Sensing.c ****     cystatus initStatus;
 710:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 711:Generated_Source\PSoC4/CapSense_Sensing.c ****     #if ((CapSense_ENABLE == CapSense_MULTI_FREQ_SCAN_EN) &&\
 712:Generated_Source\PSoC4/CapSense_Sensing.c ****          (CapSense_MFS_IMO == CapSense_MFS_METHOD))
 713:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint8 centerFreqTrim;
 714:Generated_Source\PSoC4/CapSense_Sensing.c **** 
ARM GAS  C:\Users\mstai\AppData\Local\Temp\ccHdifRP.s 			page 14


 715:Generated_Source\PSoC4/CapSense_Sensing.c ****         centerFreqTrim = (uint8)CY_GET_REG32(CY_SYS_CLK_IMO_TRIM1_PTR);
 716:Generated_Source\PSoC4/CapSense_Sensing.c ****         CapSense_immunity[CapSense_FREQ_CHANNEL_0] = centerFreqTrim;
 717:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 718:Generated_Source\PSoC4/CapSense_Sensing.c ****         if (centerFreqTrim < CapSense_IMO_FREQUENCY_OFFSET_F1)
 719:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 720:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_immunity[CapSense_FREQ_CHANNEL_1] = centerFreqTrim + CapSense_IMO_FREQUENCY_OF
 721:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_immunity[CapSense_FREQ_CHANNEL_2] = centerFreqTrim + (CapSense_IMO_FREQUENCY_O
 722:Generated_Source\PSoC4/CapSense_Sensing.c ****                                                                                            CapSense
 723:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
 724:Generated_Source\PSoC4/CapSense_Sensing.c ****         else if (centerFreqTrim > (CapSense_IMO_FREQUENCY_OFFSET_MAX - CapSense_IMO_FREQUENCY_OFFSE
 725:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 726:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_immunity[CapSense_FREQ_CHANNEL_1] = centerFreqTrim - CapSense_IMO_FREQUENCY_OF
 727:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_immunity[CapSense_FREQ_CHANNEL_2] = centerFreqTrim - (CapSense_IMO_FREQUENCY_O
 728:Generated_Source\PSoC4/CapSense_Sensing.c ****                                                                                            CapSense
 729:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
 730:Generated_Source\PSoC4/CapSense_Sensing.c ****         else
 731:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 732:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_immunity[CapSense_FREQ_CHANNEL_1] = centerFreqTrim - CapSense_IMO_FREQUENCY_OF
 733:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_immunity[CapSense_FREQ_CHANNEL_2] = centerFreqTrim + CapSense_IMO_FREQUENCY_OF
 734:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
 735:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 736:Generated_Source\PSoC4/CapSense_Sensing.c ****     #endif /* ((CapSense_ENABLE == CapSense_MULTI_FREQ_SCAN_EN) &&\
 737:Generated_Source\PSoC4/CapSense_Sensing.c ****                (CapSense_MFS_IMO == CapSense_MFS_METHOD)) */
 738:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 739:Generated_Source\PSoC4/CapSense_Sensing.c ****     initStatus = CYRET_SUCCESS;
 740:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 741:Generated_Source\PSoC4/CapSense_Sensing.c ****     #if (CapSense_DISABLE == CapSense_CSDV2)
 742:Generated_Source\PSoC4/CapSense_Sensing.c ****         CapSense_SsTrimIdacs();
 743:Generated_Source\PSoC4/CapSense_Sensing.c ****     #endif /* (CapSense_ENABLE == CapSense_CSDV2) */
 744:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 745:Generated_Source\PSoC4/CapSense_Sensing.c ****     #if((CapSense_ENABLE == CapSense_CSD_EN) ||\
 746:Generated_Source\PSoC4/CapSense_Sensing.c ****     ((CapSense_ENABLE == CapSense_CSX_EN) && (CapSense_ENABLE == CapSense_CSDV2)))
 747:Generated_Source\PSoC4/CapSense_Sensing.c ****         CapSense_SsInitializeSourceSenseClk();
 748:Generated_Source\PSoC4/CapSense_Sensing.c ****     #endif /* ((CapSense_ENABLE == CapSense_CSD_EN) ||\
 749:Generated_Source\PSoC4/CapSense_Sensing.c ****               ((CapSense_ENABLE == CapSense_CSX_EN) && (CapSense_ENABLE == CapSense_CSDV2))) */
 750:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 751:Generated_Source\PSoC4/CapSense_Sensing.c ****     /* Set all IO states to the default state */
 752:Generated_Source\PSoC4/CapSense_Sensing.c ****     CapSense_SsSetAllIOsState((uint32)CapSense_SNS_CONNECTION_GROUND);
 753:Generated_Source\PSoC4/CapSense_Sensing.c ****     CapSense_dsRam.scanCurrentISC = CapSense_SNS_CONNECTION_GROUND;
 754:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 755:Generated_Source\PSoC4/CapSense_Sensing.c ****     CapSense_SsSwitchSensingMode(CapSense_UNDEFINED_E);
 756:Generated_Source\PSoC4/CapSense_Sensing.c ****     #if (CapSense_ENABLE == CapSense_MANY_SENSE_MODES_EN)
 757:Generated_Source\PSoC4/CapSense_Sensing.c ****     #elif (CapSense_ENABLE == CapSense_CSD_EN)
 758:Generated_Source\PSoC4/CapSense_Sensing.c ****         CapSense_SsSwitchSensingMode(CapSense_SENSE_METHOD_CSD_E);
 759:Generated_Source\PSoC4/CapSense_Sensing.c ****     #elif (CapSense_ENABLE == CapSense_CSX_EN)
 760:Generated_Source\PSoC4/CapSense_Sensing.c ****         CapSense_SsSwitchSensingMode(CapSense_SENSE_METHOD_CSX_E);
 761:Generated_Source\PSoC4/CapSense_Sensing.c ****     #elif (CapSense_ENABLE == CapSense_ISX_EN)
 762:Generated_Source\PSoC4/CapSense_Sensing.c ****         CapSense_SsSwitchSensingMode(CapSense_SENSE_METHOD_ISX_E);
 763:Generated_Source\PSoC4/CapSense_Sensing.c ****     #else
 764:Generated_Source\PSoC4/CapSense_Sensing.c ****         #error "No sensing method enabled, Component cannot work in this mode"
 765:Generated_Source\PSoC4/CapSense_Sensing.c ****         initStatus = CYRET_UNKNOWN;
 766:Generated_Source\PSoC4/CapSense_Sensing.c ****     #endif
 767:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 768:Generated_Source\PSoC4/CapSense_Sensing.c ****     return (initStatus);
 769:Generated_Source\PSoC4/CapSense_Sensing.c **** }
 770:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 771:Generated_Source\PSoC4/CapSense_Sensing.c **** 
ARM GAS  C:\Users\mstai\AppData\Local\Temp\ccHdifRP.s 			page 15


 772:Generated_Source\PSoC4/CapSense_Sensing.c **** /*******************************************************************************
 773:Generated_Source\PSoC4/CapSense_Sensing.c **** * Function Name: CapSense_SetPinState
 774:Generated_Source\PSoC4/CapSense_Sensing.c **** ****************************************************************************//**
 775:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 776:Generated_Source\PSoC4/CapSense_Sensing.c **** * \brief
 777:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Sets the state (drive mode and output state) of the port pin used by a sensor.
 778:Generated_Source\PSoC4/CapSense_Sensing.c **** *  The possible states are GND, Shield, High-Z, Tx or Rx, Sensor. If the sensor
 779:Generated_Source\PSoC4/CapSense_Sensing.c **** *  specified in the input parameter is a ganged sensor, then the state of all pins
 780:Generated_Source\PSoC4/CapSense_Sensing.c **** *  associated with the ganged sensor is updated.
 781:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 782:Generated_Source\PSoC4/CapSense_Sensing.c **** * \details
 783:Generated_Source\PSoC4/CapSense_Sensing.c **** *  This function sets a specified state for a specified sensor element. For the
 784:Generated_Source\PSoC4/CapSense_Sensing.c **** *  CSD widgets, sensor element is a sensor ID, for the CSX widgets, it is either
 785:Generated_Source\PSoC4/CapSense_Sensing.c **** *  an Rx or Tx electrode ID. If the specified sensor is a ganged sensor, then
 786:Generated_Source\PSoC4/CapSense_Sensing.c **** *  the specified state is set for all the electrodes belong to the sensor.
 787:Generated_Source\PSoC4/CapSense_Sensing.c **** *  This function must not be called while the Component is in the busy state.
 788:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 789:Generated_Source\PSoC4/CapSense_Sensing.c **** *  This function accepts the CapSense_SHIELD and
 790:Generated_Source\PSoC4/CapSense_Sensing.c **** *  CapSense_SENSOR states as an input only if there is at least
 791:Generated_Source\PSoC4/CapSense_Sensing.c **** *  one CSD widget. Similarly, this function accepts the CapSense_TX_PIN
 792:Generated_Source\PSoC4/CapSense_Sensing.c **** *  and CapSense_RX_PIN states as an input only if there is at least
 793:Generated_Source\PSoC4/CapSense_Sensing.c **** *  one CSX widget in the project.
 794:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 795:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Calling this function directly from the application layer is not
 796:Generated_Source\PSoC4/CapSense_Sensing.c **** *  recommended. This function is used to implement only the custom-specific
 797:Generated_Source\PSoC4/CapSense_Sensing.c **** *  use cases. Functions that perform a setup and scan of a sensor/widget
 798:Generated_Source\PSoC4/CapSense_Sensing.c **** *  automatically set the required pin states. They ignore changes
 799:Generated_Source\PSoC4/CapSense_Sensing.c **** *  in the design made by the CapSense_SetPinState() function.
 800:Generated_Source\PSoC4/CapSense_Sensing.c **** *  This function neither check wdgtIndex nor sensorElement for the correctness.
 801:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 802:Generated_Source\PSoC4/CapSense_Sensing.c **** * \param widgetId
 803:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Specifies the ID of the widget to change the pin state of the specified
 804:Generated_Source\PSoC4/CapSense_Sensing.c **** *  sensor.
 805:Generated_Source\PSoC4/CapSense_Sensing.c **** *  A macro for the widget ID can be found in the CapSense Configuration
 806:Generated_Source\PSoC4/CapSense_Sensing.c **** *  header file defined as CapSense_<WidgetName>_WDGT_ID.
 807:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 808:Generated_Source\PSoC4/CapSense_Sensing.c **** * \param sensorElement
 809:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Specifies the ID of the sensor element within the widget to change
 810:Generated_Source\PSoC4/CapSense_Sensing.c **** *  its pin state.
 811:Generated_Source\PSoC4/CapSense_Sensing.c **** *  \if SECTION_C_LOW_LEVEL
 812:Generated_Source\PSoC4/CapSense_Sensing.c **** *  For the CSD widgets, sensorElement is the sensor ID and can be found in the
 813:Generated_Source\PSoC4/CapSense_Sensing.c **** *  CapSense Configuration header file defined as
 814:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - CapSense_<WidgetName>_SNS<SensorNumber>_ID.
 815:Generated_Source\PSoC4/CapSense_Sensing.c **** *  For the CSX widgets, sensorElement is defined either as Rx ID or Tx ID.
 816:Generated_Source\PSoC4/CapSense_Sensing.c **** *  The first Rx in a widget corresponds to sensorElement = 0, the second
 817:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Rx in a widget corresponds to sensorElement = 1, and so on.
 818:Generated_Source\PSoC4/CapSense_Sensing.c **** *  The last Tx in a widget corresponds to sensorElement = (RxNum + TxNum).
 819:Generated_Source\PSoC4/CapSense_Sensing.c **** *  \endif
 820:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Macros for Rx and Tx IDs can be found in the
 821:Generated_Source\PSoC4/CapSense_Sensing.c **** *  CapSense Configuration header file defined as:
 822:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - CapSense_<WidgetName>_RX<RXNumber>_ID
 823:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - CapSense_<WidgetName>_TX<TXNumber>_ID.
 824:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 825:Generated_Source\PSoC4/CapSense_Sensing.c **** * \param state
 826:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Specifies the state of the sensor to be set:
 827:Generated_Source\PSoC4/CapSense_Sensing.c **** *     1. CapSense_GROUND - The pin is connected to the ground.
 828:Generated_Source\PSoC4/CapSense_Sensing.c **** *     2. CapSense_HIGHZ - The drive mode of the pin is set to High-Z
ARM GAS  C:\Users\mstai\AppData\Local\Temp\ccHdifRP.s 			page 16


 829:Generated_Source\PSoC4/CapSense_Sensing.c **** *        Analog.
 830:Generated_Source\PSoC4/CapSense_Sensing.c **** *     3. CapSense_SHIELD - The shield signal is routed to the pin
 831:Generated_Source\PSoC4/CapSense_Sensing.c **** *        (available only if CSD sensing method with shield electrode is enabled).
 832:Generated_Source\PSoC4/CapSense_Sensing.c **** *     4. CapSense_SENSOR - The pin is connected to the scanning bus
 833:Generated_Source\PSoC4/CapSense_Sensing.c **** *        (available only if CSD sensing method is enabled).
 834:Generated_Source\PSoC4/CapSense_Sensing.c **** *     5. CapSense_TX_PIN - The Tx or Lx signal is routed to the sensor
 835:Generated_Source\PSoC4/CapSense_Sensing.c **** *        (available only if CSX or ISX sensing method is enabled).
 836:Generated_Source\PSoC4/CapSense_Sensing.c **** *     6. CapSense_RX_PIN - The pin is connected to the scanning bus
 837:Generated_Source\PSoC4/CapSense_Sensing.c **** *        (available only if CSX or ISX sensing method is enabled).
 838:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 839:Generated_Source\PSoC4/CapSense_Sensing.c **** *******************************************************************************/
 840:Generated_Source\PSoC4/CapSense_Sensing.c **** void CapSense_SetPinState(uint32 widgetId, uint32 sensorElement, uint32 state)
 841:Generated_Source\PSoC4/CapSense_Sensing.c **** {
 842:Generated_Source\PSoC4/CapSense_Sensing.c ****     uint32 eltdNum;
 843:Generated_Source\PSoC4/CapSense_Sensing.c ****     uint32 eltdIndex;
 844:Generated_Source\PSoC4/CapSense_Sensing.c ****     uint8  interruptState;
 845:Generated_Source\PSoC4/CapSense_Sensing.c ****     CapSense_FLASH_IO_STRUCT const *ioPtr;
 846:Generated_Source\PSoC4/CapSense_Sensing.c ****     #if (CapSense_ENABLE == CapSense_GANGED_SNS_EN)
 847:Generated_Source\PSoC4/CapSense_Sensing.c ****         CapSense_FLASH_SNS_STRUCT const *curFlashSnsPtr;
 848:Generated_Source\PSoC4/CapSense_Sensing.c ****     #endif
 849:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 850:Generated_Source\PSoC4/CapSense_Sensing.c ****     /* Getting sensor element pointer and number of electrodes */
 851:Generated_Source\PSoC4/CapSense_Sensing.c ****     #if (CapSense_ENABLE == CapSense_GANGED_SNS_EN)
 852:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Check the ganged sns flag */
 853:Generated_Source\PSoC4/CapSense_Sensing.c ****         if (CapSense_GANGED_SNS_MASK == (CapSense_dsFlash.wdgtArray[widgetId].staticConfig & CapSen
 854:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 855:Generated_Source\PSoC4/CapSense_Sensing.c ****             curFlashSnsPtr = CapSense_dsFlash.wdgtArray[widgetId].ptr2SnsFlash;
 856:Generated_Source\PSoC4/CapSense_Sensing.c ****             curFlashSnsPtr += sensorElement;
 857:Generated_Source\PSoC4/CapSense_Sensing.c ****             ioPtr = &CapSense_ioList[curFlashSnsPtr->firstPinId];
 858:Generated_Source\PSoC4/CapSense_Sensing.c ****             eltdNum = curFlashSnsPtr->numPins;
 859:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
 860:Generated_Source\PSoC4/CapSense_Sensing.c ****         else
 861:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 862:Generated_Source\PSoC4/CapSense_Sensing.c ****             ioPtr = (CapSense_FLASH_IO_STRUCT const *)CapSense_dsFlash.wdgtArray[widgetId].ptr2SnsF
 863:Generated_Source\PSoC4/CapSense_Sensing.c ****             eltdNum = 1u;
 864:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
 865:Generated_Source\PSoC4/CapSense_Sensing.c ****     #else
 866:Generated_Source\PSoC4/CapSense_Sensing.c ****         ioPtr = (CapSense_FLASH_IO_STRUCT const *)CapSense_dsFlash.wdgtArray[widgetId].ptr2SnsFlash
 867:Generated_Source\PSoC4/CapSense_Sensing.c ****         eltdNum = 1u;
 868:Generated_Source\PSoC4/CapSense_Sensing.c ****     #endif
 869:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 870:Generated_Source\PSoC4/CapSense_Sensing.c ****     /* Loop through all electrodes of the specified sensor element */
 871:Generated_Source\PSoC4/CapSense_Sensing.c ****     for (eltdIndex = 0u; eltdIndex < eltdNum; eltdIndex++)
 872:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 873:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Reset HSIOM and PC registers */
 874:Generated_Source\PSoC4/CapSense_Sensing.c ****         interruptState = CyEnterCriticalSection();
 875:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32(ioPtr->hsiomPtr, CY_GET_REG32(ioPtr->hsiomPtr) & ~(CapSense_HSIOM_SEL_MASK << 
 876:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32(ioPtr->pcPtr, CY_GET_REG32(ioPtr->pcPtr) & ~(CapSense_GPIO_PC_MASK << ioPtr->s
 877:Generated_Source\PSoC4/CapSense_Sensing.c ****         CyExitCriticalSection(interruptState);
 878:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 879:Generated_Source\PSoC4/CapSense_Sensing.c ****         switch (state)
 880:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 881:Generated_Source\PSoC4/CapSense_Sensing.c ****         case CapSense_GROUND:
 882:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 883:Generated_Source\PSoC4/CapSense_Sensing.c ****             interruptState = CyEnterCriticalSection();
 884:Generated_Source\PSoC4/CapSense_Sensing.c ****             CY_SET_REG32(ioPtr->pcPtr, CY_GET_REG32(ioPtr->pcPtr) | (CapSense_SNS_GROUND_CONNECT <<
 885:Generated_Source\PSoC4/CapSense_Sensing.c ****             CY_SET_REG32(ioPtr->drPtr, CY_GET_REG32(ioPtr->drPtr) & (uint32)(~(uint32)((uint32)1u <
ARM GAS  C:\Users\mstai\AppData\Local\Temp\ccHdifRP.s 			page 17


 886:Generated_Source\PSoC4/CapSense_Sensing.c ****             CyExitCriticalSection(interruptState);
 887:Generated_Source\PSoC4/CapSense_Sensing.c ****             break;
 888:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 889:Generated_Source\PSoC4/CapSense_Sensing.c ****         case CapSense_HIGHZ:
 890:Generated_Source\PSoC4/CapSense_Sensing.c ****             interruptState = CyEnterCriticalSection();
 891:Generated_Source\PSoC4/CapSense_Sensing.c ****             CY_SET_REG32(ioPtr->drPtr, CY_GET_REG32(ioPtr->drPtr) & (uint32)~(uint32)((uint32)1u <<
 892:Generated_Source\PSoC4/CapSense_Sensing.c ****             CyExitCriticalSection(interruptState);
 893:Generated_Source\PSoC4/CapSense_Sensing.c ****             break;
 894:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 895:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_ENABLE == CapSense_CSD_EN)
 896:Generated_Source\PSoC4/CapSense_Sensing.c ****             case CapSense_SENSOR:
 897:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Enable sensor */
 898:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_CSDConnectSns(ioPtr);
 899:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
 900:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 901:Generated_Source\PSoC4/CapSense_Sensing.c ****             #if (CapSense_ENABLE == CapSense_CSD_SHIELD_EN)
 902:Generated_Source\PSoC4/CapSense_Sensing.c ****                 case CapSense_SHIELD:
 903:Generated_Source\PSoC4/CapSense_Sensing.c ****                     /* Set appropriate bit in HSIOM register to configure pin to shield mode */
 904:Generated_Source\PSoC4/CapSense_Sensing.c ****                     interruptState = CyEnterCriticalSection();
 905:Generated_Source\PSoC4/CapSense_Sensing.c ****                     CY_SET_REG32(ioPtr->hsiomPtr, CY_GET_REG32(ioPtr->hsiomPtr) | (CapSense_HSIOM_S
 906:Generated_Source\PSoC4/CapSense_Sensing.c ****                     CyExitCriticalSection(interruptState);
 907:Generated_Source\PSoC4/CapSense_Sensing.c ****                     break;
 908:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif /* (CapSense_ENABLE == CapSense_CSD_SHIELD_EN) */
 909:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif /* (CapSense_ENABLE == CapSense_CSD_EN) */
 910:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 911:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if ((CapSense_ENABLE == CapSense_CSX_EN) || \
 912:Generated_Source\PSoC4/CapSense_Sensing.c ****              (CapSense_ENABLE == CapSense_ISX_EN))
 913:Generated_Source\PSoC4/CapSense_Sensing.c ****             case CapSense_TX_PIN:
 914:Generated_Source\PSoC4/CapSense_Sensing.c ****                 interruptState = CyEnterCriticalSection();
 915:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CY_SET_REG32(ioPtr->hsiomPtr, CY_GET_REG32(ioPtr->hsiomPtr) | (CapSense_HSIOM_SEL_C
 916:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CY_SET_REG32(ioPtr->pcPtr, CY_GET_REG32(ioPtr->pcPtr) | (CapSense_GPIO_STRGDRV << i
 917:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CyExitCriticalSection(interruptState);
 918:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
 919:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 920:Generated_Source\PSoC4/CapSense_Sensing.c ****             case CapSense_RX_PIN:
 921:Generated_Source\PSoC4/CapSense_Sensing.c ****                 interruptState = CyEnterCriticalSection();
 922:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CY_SET_REG32(ioPtr->hsiomPtr, CY_GET_REG32(ioPtr->hsiomPtr) | (CapSense_HSIOM_SEL_A
 923:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CY_SET_REG32(ioPtr->pcPtr, CY_GET_REG32(ioPtr->pcPtr) & ~(CapSense_GPIO_PC_MASK << 
 924:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CyExitCriticalSection(interruptState);
 925:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
 926:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif
 927:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 928:Generated_Source\PSoC4/CapSense_Sensing.c ****         default:
 929:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* Wrong state */
 930:Generated_Source\PSoC4/CapSense_Sensing.c ****             break;
 931:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
 932:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 933:Generated_Source\PSoC4/CapSense_Sensing.c ****         ioPtr++;
 934:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 935:Generated_Source\PSoC4/CapSense_Sensing.c **** }
 936:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 937:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_ENABLE == CapSense_CSD_EN)
 938:Generated_Source\PSoC4/CapSense_Sensing.c ****     /*******************************************************************************
 939:Generated_Source\PSoC4/CapSense_Sensing.c ****     * Function Name: CapSense_SsCSDDisableMode
 940:Generated_Source\PSoC4/CapSense_Sensing.c ****     ****************************************************************************//**
 941:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
 942:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \brief
ARM GAS  C:\Users\mstai\AppData\Local\Temp\ccHdifRP.s 			page 18


 943:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  This function disables CSD mode.
 944:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
 945:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \details
 946:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  To disable CSD mode the following tasks are performed:
 947:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  1. Disconnect Cmod from AMUXBUS-A.
 948:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  2. Disconnect previous CSX electrode if it has been connected.
 949:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  3. Disconnect Csh from AMUXBUS-B.
 950:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  4. Disable Shield Electrodes.
 951:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
 952:Generated_Source\PSoC4/CapSense_Sensing.c ****     *******************************************************************************/
 953:Generated_Source\PSoC4/CapSense_Sensing.c ****     static void CapSense_SsCSDDisableMode(void)
 954:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 955:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if ((CapSense_ENABLE == CapSense_CSDV2) && \
 956:Generated_Source\PSoC4/CapSense_Sensing.c ****              (CapSense_ENABLE == CapSense_CSD_IDAC_COMP_EN))
 957:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 958:Generated_Source\PSoC4/CapSense_Sensing.c ****             uint32 newRegValue;
 959:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 960:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* Disconnect IDACA and IDACB */
 961:Generated_Source\PSoC4/CapSense_Sensing.c ****             newRegValue = CY_GET_REG32(CapSense_SW_REFGEN_SEL_PTR);
 962:Generated_Source\PSoC4/CapSense_Sensing.c ****             newRegValue &= (uint32)(~CapSense_SW_REFGEN_SEL_SW_IAIB_MASK);
 963:Generated_Source\PSoC4/CapSense_Sensing.c ****             CY_SET_REG32(CapSense_SW_REFGEN_SEL_PTR, newRegValue);
 964:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif /* ((CapSense_ENABLE == CapSense_CSDV2) && \
 965:Generated_Source\PSoC4/CapSense_Sensing.c ****                    (CapSense_ENABLE == CapSense_CSD_IDAC_COMP_EN)) */
 966:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 967:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Disconnect Cmod from AMUXBUS-A using HSIOM registers */
 968:Generated_Source\PSoC4/CapSense_Sensing.c ****         CapSense_WriteBitsSafe(CapSense_CMOD_HSIOM_PTR, CapSense_CMOD_HSIOM_MASK, 0u);
 969:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 970:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Disconnect previous CSD electrode if it has been connected */
 971:Generated_Source\PSoC4/CapSense_Sensing.c ****         CapSense_SsCSDElectrodeCheck();
 972:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 973:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Disconnect Csh from AMUXBUS-B */
 974:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if ((CapSense_ENABLE == CapSense_CSD_SHIELD_EN) && \
 975:Generated_Source\PSoC4/CapSense_Sensing.c ****              (CapSense_ENABLE == CapSense_CSD_SHIELD_TANK_EN))
 976:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_WriteBitsSafe(CapSense_CSH_HSIOM_PTR, CapSense_CSH_HSIOM_MASK, 0u);
 977:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif
 978:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 979:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if ((CapSense_ENABLE == CapSense_CSD_SHIELD_EN) && \
 980:Generated_Source\PSoC4/CapSense_Sensing.c ****              (0u != CapSense_CSD_TOTAL_SHIELD_COUNT))
 981:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_SsCSDDisableShieldElectrodes();
 982:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif
 983:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 984:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* (CapSense_ENABLE == CapSense_CSD_EN) */
 985:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 986:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 987:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_ENABLE == CapSense_CSX_EN)
 988:Generated_Source\PSoC4/CapSense_Sensing.c ****     /*******************************************************************************
 989:Generated_Source\PSoC4/CapSense_Sensing.c ****     * Function Name: CapSense_SsDisableCSXMode
 990:Generated_Source\PSoC4/CapSense_Sensing.c ****     ****************************************************************************//**
 991:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
 992:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \brief
 993:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  This function disables CSX mode.
 994:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
 995:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \details
 996:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  To disable CSX mode the following tasks are performed:
 997:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  1. Disconnect CintA and CintB from AMUXBUS-A.
 998:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  2. Disconnect previous CSX electrode if it has been connected.
 999:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
ARM GAS  C:\Users\mstai\AppData\Local\Temp\ccHdifRP.s 			page 19


1000:Generated_Source\PSoC4/CapSense_Sensing.c ****     *******************************************************************************/
1001:Generated_Source\PSoC4/CapSense_Sensing.c ****     static void CapSense_SsDisableCSXMode(void)
1002:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
1003:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Disconnect CintA from AMUXBUS-A using HSIOM registers */
1004:Generated_Source\PSoC4/CapSense_Sensing.c ****         CapSense_WriteBitsSafe(CapSense_CintA_HSIOM_PTR, CapSense_CintA_HSIOM_MASK, 0u);
1005:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Disconnect CintB from AMUXBUS-A using HSIOM registers */
1006:Generated_Source\PSoC4/CapSense_Sensing.c ****         CapSense_WriteBitsSafe(CapSense_CintB_HSIOM_PTR, CapSense_CintB_HSIOM_MASK, 0u);
1007:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Disconnect previous CSX electrode if it has been connected */
1008:Generated_Source\PSoC4/CapSense_Sensing.c ****         CapSense_CSXElectrodeCheck();
1009:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
1010:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* (CapSense_ENABLE == CapSense_CSX_EN) */
1011:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1012:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1013:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_ENABLE == CapSense_ISX_EN)
1014:Generated_Source\PSoC4/CapSense_Sensing.c ****     /*******************************************************************************
1015:Generated_Source\PSoC4/CapSense_Sensing.c ****     * Function Name: CapSense_SsDisableISXMode
1016:Generated_Source\PSoC4/CapSense_Sensing.c ****     ****************************************************************************//**
1017:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
1018:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \brief
1019:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  This function disables ISX mode.
1020:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
1021:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \details
1022:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  To disable ISX mode the following tasks are performed:
1023:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  1. Disconnect CintA and CintB from AMUXBUS-A
1024:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  2. Disconnect previous ISX electrode if it has been connected
1025:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
1026:Generated_Source\PSoC4/CapSense_Sensing.c ****     *******************************************************************************/
1027:Generated_Source\PSoC4/CapSense_Sensing.c ****     static void CapSense_SsDisableISXMode(void)
1028:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
1029:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Disconnect CintA from AMUXBUS-A using HSIOM registers */
1030:Generated_Source\PSoC4/CapSense_Sensing.c ****         CapSense_WriteBitsSafe(CapSense_CintA_HSIOM_PTR, CapSense_CintA_HSIOM_MASK, 0u);
1031:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Disconnect CintB from AMUXBUS-A using HSIOM registers */
1032:Generated_Source\PSoC4/CapSense_Sensing.c ****         CapSense_WriteBitsSafe(CapSense_CintB_HSIOM_PTR, CapSense_CintB_HSIOM_MASK, 0u);
1033:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Disconnect previous ISX electrode if it has been connected */
1034:Generated_Source\PSoC4/CapSense_Sensing.c ****         CapSense_ISXElectrodeCheck();
1035:Generated_Source\PSoC4/CapSense_Sensing.c ****         CapSense_DigPrt2_Stop();
1036:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_USES_PORT_3)
1037:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_DigPrt3_Stop();
1038:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif
1039:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
1040:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* (CapSense_ENABLE == CapSense_ISX_EN) */
1041:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1042:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1043:Generated_Source\PSoC4/CapSense_Sensing.c **** /*******************************************************************************
1044:Generated_Source\PSoC4/CapSense_Sensing.c **** * Function Name: CapSense_SsSwitchSensingMode
1045:Generated_Source\PSoC4/CapSense_Sensing.c **** ****************************************************************************//**
1046:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1047:Generated_Source\PSoC4/CapSense_Sensing.c **** * \brief
1048:Generated_Source\PSoC4/CapSense_Sensing.c **** *  This function changes the Сomponent settings for operation in a specified
1049:Generated_Source\PSoC4/CapSense_Sensing.c **** *  sensing mode.
1050:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1051:Generated_Source\PSoC4/CapSense_Sensing.c **** * \details
1052:Generated_Source\PSoC4/CapSense_Sensing.c **** *  This function performs following tasks:
1053:Generated_Source\PSoC4/CapSense_Sensing.c **** *  1. Releasing the CSD HW block.
1054:Generated_Source\PSoC4/CapSense_Sensing.c **** *  2. Disconnecting external capacitors.
1055:Generated_Source\PSoC4/CapSense_Sensing.c **** *  3. Setting new mode.
1056:Generated_Source\PSoC4/CapSense_Sensing.c **** *  4. Configuring HW to the new sensing mode.
ARM GAS  C:\Users\mstai\AppData\Local\Temp\ccHdifRP.s 			page 20


1057:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1058:Generated_Source\PSoC4/CapSense_Sensing.c **** * \param mode
1059:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Specifies the scan mode:
1060:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - CapSense_SENSE_METHOD_CSD_E
1061:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - CapSense_SENSE_METHOD_CSX_E
1062:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - CapSense_SENSE_METHOD_ISX_E
1063:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - CapSense_SENSE_METHOD_BIST_E
1064:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - CapSense_UNDEFINED_E
1065:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1066:Generated_Source\PSoC4/CapSense_Sensing.c **** *******************************************************************************/
1067:Generated_Source\PSoC4/CapSense_Sensing.c **** void CapSense_SsSwitchSensingMode(CapSense_SENSE_METHOD_ENUM mode)
1068:Generated_Source\PSoC4/CapSense_Sensing.c **** {
1069:Generated_Source\PSoC4/CapSense_Sensing.c ****     if (CapSense_currentSenseMethod != mode)
1070:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
1071:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* The requested mode differs to the current one. Disable the current mode */
1072:Generated_Source\PSoC4/CapSense_Sensing.c ****         if (CapSense_SENSE_METHOD_CSD_E == CapSense_currentSenseMethod)
1073:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
1074:Generated_Source\PSoC4/CapSense_Sensing.c ****             #if (CapSense_ENABLE == CapSense_CSD_EN)
1075:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_SsCSDDisableMode();
1076:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif /* (CapSense_ENABLE == CapSense_CSD_EN) */
1077:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
1078:Generated_Source\PSoC4/CapSense_Sensing.c ****         else if (CapSense_SENSE_METHOD_CSX_E == CapSense_currentSenseMethod)
1079:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
1080:Generated_Source\PSoC4/CapSense_Sensing.c ****             #if (CapSense_ENABLE == CapSense_CSX_EN)
1081:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_SsDisableCSXMode();
1082:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif /* (CapSense_ENABLE == CapSense_CSX_EN) */
1083:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
1084:Generated_Source\PSoC4/CapSense_Sensing.c ****         else if (CapSense_SENSE_METHOD_ISX_E == CapSense_currentSenseMethod)
1085:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
1086:Generated_Source\PSoC4/CapSense_Sensing.c ****             #if (CapSense_ENABLE == CapSense_ISX_EN)
1087:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_SsDisableISXMode();
1088:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif /* (CapSense_ENABLE == CapSense_ISX_EN) */
1089:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
1090:Generated_Source\PSoC4/CapSense_Sensing.c ****         else if (CapSense_SENSE_METHOD_BIST_E == CapSense_currentSenseMethod)
1091:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
1092:Generated_Source\PSoC4/CapSense_Sensing.c ****             #if (CapSense_ENABLE == CapSense_SELF_TEST_EN)
1093:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_BistDisableMode();
1094:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif /* (CapSense_ENABLE == CapSense_SELF_TEST_EN) */
1095:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
1096:Generated_Source\PSoC4/CapSense_Sensing.c ****         else
1097:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
1098:Generated_Source\PSoC4/CapSense_Sensing.c ****             #if (CapSense_ENABLE == CapSense_ADC_EN)
1099:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Release ADC resources */
1100:Generated_Source\PSoC4/CapSense_Sensing.c ****                 (void)CapSense_AdcReleaseResources();
1101:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif /* (CapSense_ENABLE == CapSense_ADC_EN) */
1102:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
1103:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1104:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Enable the specified mode */
1105:Generated_Source\PSoC4/CapSense_Sensing.c ****         if (CapSense_SENSE_METHOD_CSD_E == mode)
1106:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
1107:Generated_Source\PSoC4/CapSense_Sensing.c ****             #if (CapSense_ENABLE == CapSense_CSD_EN)
1108:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Initialize CSD mode to guarantee configured CSD mode */
1109:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_SsCSDInitialize();
1110:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_currentSenseMethod = CapSense_SENSE_METHOD_CSD_E;
1111:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif /* (CapSense_ENABLE == CapSense_CSD_EN) */
1112:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
1113:Generated_Source\PSoC4/CapSense_Sensing.c ****         else if (CapSense_SENSE_METHOD_CSX_E == mode)
ARM GAS  C:\Users\mstai\AppData\Local\Temp\ccHdifRP.s 			page 21


1114:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
1115:Generated_Source\PSoC4/CapSense_Sensing.c ****             #if (CapSense_ENABLE == CapSense_CSX_EN)
1116:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Initialize CSX mode to guarantee configured CSX mode */
1117:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_CSXInitialize();
1118:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_currentSenseMethod = CapSense_SENSE_METHOD_CSX_E;
1119:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif /* (CapSense_ENABLE == CapSense_CSX_EN) */
1120:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
1121:Generated_Source\PSoC4/CapSense_Sensing.c ****         else if (CapSense_SENSE_METHOD_ISX_E == mode)
1122:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
1123:Generated_Source\PSoC4/CapSense_Sensing.c ****             #if (CapSense_ENABLE == CapSense_ISX_EN)
1124:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Initialize ISX mode to guarantee configured ISX mode */
1125:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_ISXInitialize();
1126:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_currentSenseMethod = CapSense_SENSE_METHOD_ISX_E;
1127:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif /* (CapSense_ENABLE == CapSense_ISX_EN) */
1128:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
1129:Generated_Source\PSoC4/CapSense_Sensing.c ****         else if (CapSense_SENSE_METHOD_BIST_E == mode)
1130:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
1131:Generated_Source\PSoC4/CapSense_Sensing.c ****             #if (CapSense_ENABLE == CapSense_SELF_TEST_EN)
1132:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_BistInitialize();
1133:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_currentSenseMethod = CapSense_SENSE_METHOD_BIST_E;
1134:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif /* (CapSense_ENABLE == CapSense_SELF_TEST_EN) */
1135:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
1136:Generated_Source\PSoC4/CapSense_Sensing.c ****         else
1137:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
1138:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_currentSenseMethod = CapSense_UNDEFINED_E;
1139:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
1140:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
1141:Generated_Source\PSoC4/CapSense_Sensing.c **** }
1142:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1143:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1144:Generated_Source\PSoC4/CapSense_Sensing.c **** /*******************************************************************************
1145:Generated_Source\PSoC4/CapSense_Sensing.c **** * Function Name: CapSense_SsSetAllIOsState
1146:Generated_Source\PSoC4/CapSense_Sensing.c **** ****************************************************************************//**
1147:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1148:Generated_Source\PSoC4/CapSense_Sensing.c **** * \brief
1149:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Sets all electrodes into a default state.
1150:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1151:Generated_Source\PSoC4/CapSense_Sensing.c **** * \details
1152:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Sets all the CSD/CSX IOs into a default state:
1153:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - HSIOM   - Disconnected, the GPIO mode.
1154:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - DM      - Strong drive.
1155:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - State   - Zero.
1156:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1157:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Sets all the ADC channels into a default state:
1158:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - HSIOM   - Disconnected, the GPIO mode.
1159:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - DM      - HiZ-Analog.
1160:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - State   - Zero.
1161:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1162:Generated_Source\PSoC4/CapSense_Sensing.c **** *  It is not recommended to call this function directly from the application
1163:Generated_Source\PSoC4/CapSense_Sensing.c **** *  layer.
1164:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1165:Generated_Source\PSoC4/CapSense_Sensing.c **** *******************************************************************************/
1166:Generated_Source\PSoC4/CapSense_Sensing.c **** void CapSense_SsSetAllIOsState(uint32 state)
1167:Generated_Source\PSoC4/CapSense_Sensing.c **** {
1168:Generated_Source\PSoC4/CapSense_Sensing.c ****     uint8  interruptState;
1169:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1170:Generated_Source\PSoC4/CapSense_Sensing.c ****     uint32 loopIndex;
ARM GAS  C:\Users\mstai\AppData\Local\Temp\ccHdifRP.s 			page 22


1171:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1172:Generated_Source\PSoC4/CapSense_Sensing.c ****     uint32 newPinPcVal;
1173:Generated_Source\PSoC4/CapSense_Sensing.c ****     uint32 newPinHsiomVal;
1174:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1175:Generated_Source\PSoC4/CapSense_Sensing.c ****     uint32 tmpPcDrRegValue;
1176:Generated_Source\PSoC4/CapSense_Sensing.c ****     uint32 tmpHsiomRegValue;
1177:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1178:Generated_Source\PSoC4/CapSense_Sensing.c ****     CapSense_FLASH_IO_STRUCT const *snsIoPtr;
1179:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1180:Generated_Source\PSoC4/CapSense_Sensing.c ****     switch(state)
1181:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
1182:Generated_Source\PSoC4/CapSense_Sensing.c ****         case CapSense_SNS_CONNECTION_GROUND:
1183:Generated_Source\PSoC4/CapSense_Sensing.c ****             newPinPcVal = CY_SYS_PINS_DM_STRONG;
1184:Generated_Source\PSoC4/CapSense_Sensing.c ****             newPinHsiomVal = CapSense_HSIOM_SEL_GPIO;
1185:Generated_Source\PSoC4/CapSense_Sensing.c ****             break;
1186:Generated_Source\PSoC4/CapSense_Sensing.c ****         case CapSense_SNS_CONNECTION_HIGHZ:
1187:Generated_Source\PSoC4/CapSense_Sensing.c ****             newPinPcVal = CY_SYS_PINS_DM_ALG_HIZ;
1188:Generated_Source\PSoC4/CapSense_Sensing.c ****             newPinHsiomVal = CapSense_HSIOM_SEL_GPIO;
1189:Generated_Source\PSoC4/CapSense_Sensing.c ****             break;
1190:Generated_Source\PSoC4/CapSense_Sensing.c ****         case CapSense_SNS_CONNECTION_SHIELD:
1191:Generated_Source\PSoC4/CapSense_Sensing.c ****             newPinPcVal = CY_SYS_PINS_DM_ALG_HIZ;
1192:Generated_Source\PSoC4/CapSense_Sensing.c ****             newPinHsiomVal = CapSense_HSIOM_SEL_CSD_SHIELD;
1193:Generated_Source\PSoC4/CapSense_Sensing.c ****             break;
1194:Generated_Source\PSoC4/CapSense_Sensing.c ****         default:
1195:Generated_Source\PSoC4/CapSense_Sensing.c ****             newPinPcVal = CY_SYS_PINS_DM_STRONG;
1196:Generated_Source\PSoC4/CapSense_Sensing.c ****             newPinHsiomVal = CapSense_HSIOM_SEL_GPIO;
1197:Generated_Source\PSoC4/CapSense_Sensing.c ****             break;
1198:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
1199:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1200:Generated_Source\PSoC4/CapSense_Sensing.c ****     /* Loop through all electrodes */
1201:Generated_Source\PSoC4/CapSense_Sensing.c ****     snsIoPtr = &CapSense_ioList[0u];
1202:Generated_Source\PSoC4/CapSense_Sensing.c ****     for (loopIndex = 0u; loopIndex < CapSense_TOTAL_ELECTRODES; loopIndex++)
1203:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
1204:Generated_Source\PSoC4/CapSense_Sensing.c ****         interruptState = CyEnterCriticalSection();
1205:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1206:Generated_Source\PSoC4/CapSense_Sensing.c ****         tmpHsiomRegValue = CY_GET_REG32 (snsIoPtr->hsiomPtr);
1207:Generated_Source\PSoC4/CapSense_Sensing.c ****         tmpHsiomRegValue &= ~(snsIoPtr->hsiomMask);
1208:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32 (snsIoPtr->hsiomPtr, tmpHsiomRegValue);
1209:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1210:Generated_Source\PSoC4/CapSense_Sensing.c ****         tmpPcDrRegValue = CY_GET_REG32 (snsIoPtr->pcPtr);
1211:Generated_Source\PSoC4/CapSense_Sensing.c ****         tmpPcDrRegValue &= ~(CapSense_GPIO_PC_MASK << snsIoPtr->shift);
1212:Generated_Source\PSoC4/CapSense_Sensing.c ****         tmpPcDrRegValue |=  (newPinPcVal << snsIoPtr->shift);
1213:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32 (snsIoPtr->pcPtr, tmpPcDrRegValue);
1214:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1215:Generated_Source\PSoC4/CapSense_Sensing.c ****         tmpHsiomRegValue |=  (newPinHsiomVal << snsIoPtr->hsiomShift);
1216:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32 (snsIoPtr->hsiomPtr, tmpHsiomRegValue);
1217:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1218:Generated_Source\PSoC4/CapSense_Sensing.c ****         tmpPcDrRegValue = CY_GET_REG32 (snsIoPtr->drPtr);
1219:Generated_Source\PSoC4/CapSense_Sensing.c ****         tmpPcDrRegValue &= ~(snsIoPtr->mask);
1220:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32 (snsIoPtr->drPtr, tmpPcDrRegValue);
1221:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1222:Generated_Source\PSoC4/CapSense_Sensing.c ****         CyExitCriticalSection(interruptState);
1223:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1224:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Get next electrode */
1225:Generated_Source\PSoC4/CapSense_Sensing.c ****         snsIoPtr++;
1226:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
1227:Generated_Source\PSoC4/CapSense_Sensing.c **** 
ARM GAS  C:\Users\mstai\AppData\Local\Temp\ccHdifRP.s 			page 23


1228:Generated_Source\PSoC4/CapSense_Sensing.c ****     #if ((CapSense_ENABLE == CapSense_CSD_EN) &&\
1229:Generated_Source\PSoC4/CapSense_Sensing.c ****          (CapSense_ENABLE == CapSense_CSD_SHIELD_EN) &&\
1230:Generated_Source\PSoC4/CapSense_Sensing.c ****          (0u != CapSense_CSD_TOTAL_SHIELD_COUNT))
1231:Generated_Source\PSoC4/CapSense_Sensing.c ****         CapSense_SsCSDSetShieldElectrodesState(state);
1232:Generated_Source\PSoC4/CapSense_Sensing.c ****     #endif
1233:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1234:Generated_Source\PSoC4/CapSense_Sensing.c ****     #if(CapSense_ENABLE == CapSense_ADC_EN)
1235:Generated_Source\PSoC4/CapSense_Sensing.c ****         CapSense_ClearAdcChannels();
1236:Generated_Source\PSoC4/CapSense_Sensing.c ****     #endif
1237:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1238:Generated_Source\PSoC4/CapSense_Sensing.c **** }
1239:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1240:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_ENABLE == CapSense_ADC_EN)
1241:Generated_Source\PSoC4/CapSense_Sensing.c **** /*******************************************************************************
1242:Generated_Source\PSoC4/CapSense_Sensing.c **** * Function Name: CapSense_SsReleaseResources()
1243:Generated_Source\PSoC4/CapSense_Sensing.c **** ****************************************************************************//**
1244:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1245:Generated_Source\PSoC4/CapSense_Sensing.c **** * \brief
1246:Generated_Source\PSoC4/CapSense_Sensing.c **** *  This function sets the resources that do not belong to the sensing HW block to
1247:Generated_Source\PSoC4/CapSense_Sensing.c **** *  default state.
1248:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1249:Generated_Source\PSoC4/CapSense_Sensing.c **** * \details
1250:Generated_Source\PSoC4/CapSense_Sensing.c **** *  The function performs following tasks:
1251:Generated_Source\PSoC4/CapSense_Sensing.c **** *  1. Checks if CSD block busy and returns error if it is busy
1252:Generated_Source\PSoC4/CapSense_Sensing.c **** *  2. Disconnects integration capacitors (CintA, CintB for CSX mode and
1253:Generated_Source\PSoC4/CapSense_Sensing.c **** *     Cmod for CSD mode)
1254:Generated_Source\PSoC4/CapSense_Sensing.c **** *  3. Disconnect electroded if they have been connected.
1255:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1256:Generated_Source\PSoC4/CapSense_Sensing.c **** * \return
1257:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Returns the status of the operation:
1258:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - Zero        - Resources released successfully.
1259:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - Non-zero    - One or more errors occurred in releasing process.
1260:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1261:Generated_Source\PSoC4/CapSense_Sensing.c **** *******************************************************************************/
1262:Generated_Source\PSoC4/CapSense_Sensing.c **** cystatus CapSense_SsReleaseResources(void)
1263:Generated_Source\PSoC4/CapSense_Sensing.c **** {
1264:Generated_Source\PSoC4/CapSense_Sensing.c ****     cystatus busyStatus = CYRET_SUCCESS;
1265:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1266:Generated_Source\PSoC4/CapSense_Sensing.c ****     if (CapSense_SW_STS_BUSY == (CapSense_dsRam.status & CapSense_SW_STS_BUSY))
1267:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
1268:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Previous widget is being scanned. Return error. */
1269:Generated_Source\PSoC4/CapSense_Sensing.c ****         busyStatus = CYRET_INVALID_STATE;
1270:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
1271:Generated_Source\PSoC4/CapSense_Sensing.c ****     else
1272:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
1273:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_ENABLE == CapSense_CSX_EN)
1274:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_SsDisableCSXMode();
1275:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif /* (CapSense_ENABLE == CapSense_CSX_EN) */
1276:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1277:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_ENABLE == CapSense_ISX_EN)
1278:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_SsDisableISXMode();
1279:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif /* (CapSense_ENABLE == CapSense_ISX_EN) */
1280:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1281:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_ENABLE == CapSense_CSD_EN)
1282:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_SsCSDDisableMode();
1283:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif /* (CapSense_ENABLE == CapSense_CSD_EN) */
1284:Generated_Source\PSoC4/CapSense_Sensing.c **** 
ARM GAS  C:\Users\mstai\AppData\Local\Temp\ccHdifRP.s 			page 24


1285:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_ENABLE == CapSense_SELF_TEST_EN)
1286:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_BistDisableMode();
1287:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif /* (CapSense_ENABLE == CapSense_SELF_TEST_EN) */
1288:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1289:Generated_Source\PSoC4/CapSense_Sensing.c ****         CapSense_SsSetAllIOsState((uint32)CapSense_SNS_CONNECTION_GROUND);
1290:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1291:Generated_Source\PSoC4/CapSense_Sensing.c ****         /*
1292:Generated_Source\PSoC4/CapSense_Sensing.c ****          * Reset of the currentSenseMethod variable to make sure that the next
1293:Generated_Source\PSoC4/CapSense_Sensing.c ****          * call of SetupWidget() API setups the correct widget mode
1294:Generated_Source\PSoC4/CapSense_Sensing.c ****          */
1295:Generated_Source\PSoC4/CapSense_Sensing.c ****         CapSense_currentSenseMethod = CapSense_UNDEFINED_E;
1296:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
1297:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1298:Generated_Source\PSoC4/CapSense_Sensing.c ****     return busyStatus;
1299:Generated_Source\PSoC4/CapSense_Sensing.c **** }
1300:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* (CapSense_ENABLE == CapSense_ADC_EN) */
1301:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1302:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1303:Generated_Source\PSoC4/CapSense_Sensing.c **** /*******************************************************************************
1304:Generated_Source\PSoC4/CapSense_Sensing.c **** * Function Name: CapSense_SsPostAllWidgetsScan
1305:Generated_Source\PSoC4/CapSense_Sensing.c **** ****************************************************************************//**
1306:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1307:Generated_Source\PSoC4/CapSense_Sensing.c **** * \brief
1308:Generated_Source\PSoC4/CapSense_Sensing.c **** *  The ISR function for multiple widget scanning implementation.
1309:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1310:Generated_Source\PSoC4/CapSense_Sensing.c **** * \details
1311:Generated_Source\PSoC4/CapSense_Sensing.c **** *  This is the function used by the CapSense ISR to implement multiple widget
1312:Generated_Source\PSoC4/CapSense_Sensing.c **** *  scanning.
1313:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Should not be used by the application layer.
1314:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1315:Generated_Source\PSoC4/CapSense_Sensing.c **** *******************************************************************************/
1316:Generated_Source\PSoC4/CapSense_Sensing.c **** void CapSense_SsPostAllWidgetsScan(void)
1317:Generated_Source\PSoC4/CapSense_Sensing.c **** {
1318:Generated_Source\PSoC4/CapSense_Sensing.c ****     /*
1319:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  1. Increment widget index
1320:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  2. Check if all the widgets are scanned
1321:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  3. If all the widgets are not scanned, set up and scan next widget
1322:Generated_Source\PSoC4/CapSense_Sensing.c ****     */
1323:Generated_Source\PSoC4/CapSense_Sensing.c ****     #if (1u != CapSense_TOTAL_WIDGETS)
1324:Generated_Source\PSoC4/CapSense_Sensing.c ****         cystatus postScanStatus;
1325:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1326:Generated_Source\PSoC4/CapSense_Sensing.c ****         do
1327:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
1328:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_widgetIndex++;
1329:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1330:Generated_Source\PSoC4/CapSense_Sensing.c ****             postScanStatus = CapSense_SetupWidget((uint32)CapSense_widgetIndex);
1331:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1332:Generated_Source\PSoC4/CapSense_Sensing.c ****             if (CYRET_SUCCESS == postScanStatus)
1333:Generated_Source\PSoC4/CapSense_Sensing.c ****             {
1334:Generated_Source\PSoC4/CapSense_Sensing.c ****                 if((CapSense_TOTAL_WIDGETS - 1u) == CapSense_widgetIndex)
1335:Generated_Source\PSoC4/CapSense_Sensing.c ****                 {
1336:Generated_Source\PSoC4/CapSense_Sensing.c ****                     /* The last widget will be scanned. Reset flag to skip configuring the next wid
1337:Generated_Source\PSoC4/CapSense_Sensing.c ****                     CapSense_requestScanAllWidget = CapSense_DISABLE;
1338:Generated_Source\PSoC4/CapSense_Sensing.c ****                 }
1339:Generated_Source\PSoC4/CapSense_Sensing.c ****                 (void)CapSense_Scan();
1340:Generated_Source\PSoC4/CapSense_Sensing.c ****             }
1341:Generated_Source\PSoC4/CapSense_Sensing.c ****             else if((CapSense_TOTAL_WIDGETS - 1u) == CapSense_widgetIndex)
ARM GAS  C:\Users\mstai\AppData\Local\Temp\ccHdifRP.s 			page 25


1342:Generated_Source\PSoC4/CapSense_Sensing.c ****             {
1343:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #if ((CapSense_ENABLE == CapSense_BLOCK_OFF_AFTER_SCAN_EN) && \
1344:Generated_Source\PSoC4/CapSense_Sensing.c ****                      (CapSense_ENABLE == CapSense_CSD_EN))
1345:Generated_Source\PSoC4/CapSense_Sensing.c ****                     if (CapSense_SENSE_METHOD_CSD_E ==
1346:Generated_Source\PSoC4/CapSense_Sensing.c ****                         CapSense_GET_SENSE_METHOD(&CapSense_dsFlash.wdgtArray[CapSense_widgetIndex]
1347:Generated_Source\PSoC4/CapSense_Sensing.c ****                     {
1348:Generated_Source\PSoC4/CapSense_Sensing.c ****                         /* Disable the CSD block */
1349:Generated_Source\PSoC4/CapSense_Sensing.c ****                         CY_SET_REG32(CapSense_CONFIG_PTR, CapSense_configCsd);
1350:Generated_Source\PSoC4/CapSense_Sensing.c ****                     }
1351:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #endif /* ((CapSense_ENABLE == CapSense_BLOCK_OFF_AFTER_SCAN_EN) && \
1352:Generated_Source\PSoC4/CapSense_Sensing.c ****                            (CapSense_ENABLE == CapSense_CSD_EN)) */
1353:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1354:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Update scan Counter */
1355:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_dsRam.scanCounter++;
1356:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* All widgets are totally processed. Reset BUSY flag */
1357:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_dsRam.status &= ~CapSense_SW_STS_BUSY;
1358:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1359:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Update status with with the failure */
1360:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_dsRam.status &= ~CapSense_STATUS_ERR_MASK;
1361:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_dsRam.status |= ((postScanStatus & CapSense_STATUS_ERR_SIZE) << CapSense_S
1362:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1363:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Set postScanStatus to exit the while loop */
1364:Generated_Source\PSoC4/CapSense_Sensing.c ****                 postScanStatus = CYRET_SUCCESS;
1365:Generated_Source\PSoC4/CapSense_Sensing.c ****             }
1366:Generated_Source\PSoC4/CapSense_Sensing.c ****             else
1367:Generated_Source\PSoC4/CapSense_Sensing.c ****             {
1368:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Update status with with the failure. Configure the next widget in while() loop *
1369:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_dsRam.status &= ~CapSense_STATUS_ERR_MASK;
1370:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_dsRam.status |= ((postScanStatus & CapSense_STATUS_ERR_SIZE) << CapSense_S
1371:Generated_Source\PSoC4/CapSense_Sensing.c ****             }
1372:Generated_Source\PSoC4/CapSense_Sensing.c ****         } while (CYRET_SUCCESS != postScanStatus);
1373:Generated_Source\PSoC4/CapSense_Sensing.c ****     #endif /* (1u != CapSense_TOTAL_WIDGETS) */
1374:Generated_Source\PSoC4/CapSense_Sensing.c **** }
1375:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1376:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1377:Generated_Source\PSoC4/CapSense_Sensing.c **** /*******************************************************************************
1378:Generated_Source\PSoC4/CapSense_Sensing.c **** * Function Name: CapSense_SsIsrInitialize
1379:Generated_Source\PSoC4/CapSense_Sensing.c **** ****************************************************************************//**
1380:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1381:Generated_Source\PSoC4/CapSense_Sensing.c **** * \brief
1382:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Enables and initializes for the function pointer for a callback for the ISR.
1383:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1384:Generated_Source\PSoC4/CapSense_Sensing.c **** * \details
1385:Generated_Source\PSoC4/CapSense_Sensing.c **** *  The "address" is a special type cyisraddress defined by Cylib. This function
1386:Generated_Source\PSoC4/CapSense_Sensing.c **** *  is used by Component APIs and should not be used by an application program for
1387:Generated_Source\PSoC4/CapSense_Sensing.c **** *  proper working of the Component.
1388:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1389:Generated_Source\PSoC4/CapSense_Sensing.c **** * \param address
1390:Generated_Source\PSoC4/CapSense_Sensing.c **** *  The address of the function to be called when interrupt is fired.
1391:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1392:Generated_Source\PSoC4/CapSense_Sensing.c **** *******************************************************************************/
1393:Generated_Source\PSoC4/CapSense_Sensing.c **** void CapSense_SsIsrInitialize(cyisraddress address)
1394:Generated_Source\PSoC4/CapSense_Sensing.c **** {
1395:Generated_Source\PSoC4/CapSense_Sensing.c ****     CapSense_ISR_StartEx(address);
1396:Generated_Source\PSoC4/CapSense_Sensing.c **** }
1397:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1398:Generated_Source\PSoC4/CapSense_Sensing.c **** 
ARM GAS  C:\Users\mstai\AppData\Local\Temp\ccHdifRP.s 			page 26


1399:Generated_Source\PSoC4/CapSense_Sensing.c **** /*******************************************************************************
1400:Generated_Source\PSoC4/CapSense_Sensing.c **** * Function Name: CapSense_SsSetModClkClockDivider
1401:Generated_Source\PSoC4/CapSense_Sensing.c **** ****************************************************************************//**
1402:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1403:Generated_Source\PSoC4/CapSense_Sensing.c **** * \brief
1404:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Sets the divider values for the modulator clock and then starts
1405:Generated_Source\PSoC4/CapSense_Sensing.c **** *  the modulator clock.
1406:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1407:Generated_Source\PSoC4/CapSense_Sensing.c **** * \details
1408:Generated_Source\PSoC4/CapSense_Sensing.c **** *  It is not recommended to call this function directly by the application layer.
1409:Generated_Source\PSoC4/CapSense_Sensing.c **** *  It is used by initialization, widget APIs or wakeup functions to
1410:Generated_Source\PSoC4/CapSense_Sensing.c **** *  enable the clocks.
1411:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1412:Generated_Source\PSoC4/CapSense_Sensing.c **** * \param modClk
1413:Generated_Source\PSoC4/CapSense_Sensing.c **** *  The divider value for the modulator clock.
1414:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1415:Generated_Source\PSoC4/CapSense_Sensing.c **** *******************************************************************************/
1416:Generated_Source\PSoC4/CapSense_Sensing.c **** void CapSense_SsSetModClkClockDivider(uint32 modClk)
1417:Generated_Source\PSoC4/CapSense_Sensing.c **** {
1418:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_ENABLE == CapSense_IS_M0S8PERI_BLOCK)
1419:Generated_Source\PSoC4/CapSense_Sensing.c ****     /* Stop modulator clock */
1420:Generated_Source\PSoC4/CapSense_Sensing.c ****     CY_SET_REG32(CapSense_MODCLK_CMD_PTR,
1421:Generated_Source\PSoC4/CapSense_Sensing.c ****                  ((uint32)CapSense_ModClk__DIV_ID <<
1422:Generated_Source\PSoC4/CapSense_Sensing.c ****                  CapSense_MODCLK_CMD_DIV_SHIFT)|
1423:Generated_Source\PSoC4/CapSense_Sensing.c ****                  ((uint32)CapSense_MODCLK_CMD_DISABLE_MASK));
1424:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1425:Generated_Source\PSoC4/CapSense_Sensing.c ****     /*
1426:Generated_Source\PSoC4/CapSense_Sensing.c ****      * Set divider value for sense modClk.
1427:Generated_Source\PSoC4/CapSense_Sensing.c ****      * 1u is subtracted from modClk because Divider register value 0 corresponds
1428:Generated_Source\PSoC4/CapSense_Sensing.c ****      * to dividing by 1.
1429:Generated_Source\PSoC4/CapSense_Sensing.c ****      */
1430:Generated_Source\PSoC4/CapSense_Sensing.c ****     CY_SET_REG32(CapSense_MODCLK_DIV_PTR, ((modClk - 1u) << 8u));
1431:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1432:Generated_Source\PSoC4/CapSense_Sensing.c ****     /* Check whether previous modulator clock start command has finished. */
1433:Generated_Source\PSoC4/CapSense_Sensing.c ****     while(0u != (CY_GET_REG32(CapSense_MODCLK_CMD_PTR) & CapSense_MODCLK_CMD_ENABLE_MASK))
1434:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
1435:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Wait until previous modulator clock start command has finished */
1436:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
1437:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1438:Generated_Source\PSoC4/CapSense_Sensing.c ****     /* Start modulator clock, aligned to HFCLK */
1439:Generated_Source\PSoC4/CapSense_Sensing.c ****     CY_SET_REG32(CapSense_MODCLK_CMD_PTR,
1440:Generated_Source\PSoC4/CapSense_Sensing.c ****                  (uint32)(((uint32)CapSense_ModClk__DIV_ID << CapSense_MODCLK_CMD_DIV_SHIFT) |
1441:Generated_Source\PSoC4/CapSense_Sensing.c ****                   ((uint32)CapSense_ModClk__PA_DIV_ID << CapSense_MODCLK_CMD_PA_DIV_SHIFT) |
1442:Generated_Source\PSoC4/CapSense_Sensing.c ****                   CapSense_MODCLK_CMD_ENABLE_MASK));
1443:Generated_Source\PSoC4/CapSense_Sensing.c **** #else
1444:Generated_Source\PSoC4/CapSense_Sensing.c ****     uint32 newRegValue;
1445:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1446:Generated_Source\PSoC4/CapSense_Sensing.c ****     /* Clear bit to disable ModClk clock. */
1447:Generated_Source\PSoC4/CapSense_Sensing.c ****     CY_SET_REG32(CapSense_MODCLK_CMD_PTR,
1448:Generated_Source\PSoC4/CapSense_Sensing.c ****                  CY_GET_REG32(CapSense_MODCLK_CMD_PTR) &
1449:Generated_Source\PSoC4/CapSense_Sensing.c ****                  (uint32)(~CapSense_ModClk__ENABLE_MASK));
1450:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1451:Generated_Source\PSoC4/CapSense_Sensing.c ****     /*
1452:Generated_Source\PSoC4/CapSense_Sensing.c ****      * Update ModClk clock divider.
1453:Generated_Source\PSoC4/CapSense_Sensing.c ****      * 1u is subtracted from modClk because Divider register value has range (0-65535).
1454:Generated_Source\PSoC4/CapSense_Sensing.c ****      */
1455:Generated_Source\PSoC4/CapSense_Sensing.c ****     newRegValue = CY_GET_REG32(CapSense_MODCLK_DIV_PTR) & (uint32)(~(uint32)CapSense_ModClk__DIVIDE
ARM GAS  C:\Users\mstai\AppData\Local\Temp\ccHdifRP.s 			page 27


1456:Generated_Source\PSoC4/CapSense_Sensing.c ****     newRegValue |= (modClk - 1u);
1457:Generated_Source\PSoC4/CapSense_Sensing.c ****     CY_SET_REG32(CapSense_MODCLK_DIV_PTR, newRegValue);
1458:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1459:Generated_Source\PSoC4/CapSense_Sensing.c ****     /* Set bit to enable ModClk clock. */
1460:Generated_Source\PSoC4/CapSense_Sensing.c ****     CY_SET_REG32(CapSense_MODCLK_CMD_PTR,
1461:Generated_Source\PSoC4/CapSense_Sensing.c ****                  CY_GET_REG32(CapSense_MODCLK_CMD_PTR) |
1462:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_ModClk__ENABLE_MASK);
1463:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* (CapSense_ENABLE == CapSense_IS_M0S8PERI_BLOCK) */
1464:Generated_Source\PSoC4/CapSense_Sensing.c **** }
1465:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1466:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1467:Generated_Source\PSoC4/CapSense_Sensing.c **** /*******************************************************************************
1468:Generated_Source\PSoC4/CapSense_Sensing.c **** * Function Name: CapSense_SsSetSnsClockDivider
1469:Generated_Source\PSoC4/CapSense_Sensing.c **** ****************************************************************************//**
1470:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1471:Generated_Source\PSoC4/CapSense_Sensing.c **** * \brief
1472:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Sets the divider values for the sense clock and then starts
1473:Generated_Source\PSoC4/CapSense_Sensing.c **** *  the sense clock.
1474:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1475:Generated_Source\PSoC4/CapSense_Sensing.c **** * \details
1476:Generated_Source\PSoC4/CapSense_Sensing.c **** *  It is not recommended to call this function directly by the application layer.
1477:Generated_Source\PSoC4/CapSense_Sensing.c **** *  It is used by initialization, widget APIs or wakeup functions to
1478:Generated_Source\PSoC4/CapSense_Sensing.c **** *  enable the clocks.
1479:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1480:Generated_Source\PSoC4/CapSense_Sensing.c **** * \param
1481:Generated_Source\PSoC4/CapSense_Sensing.c **** *  snsClk The divider value for the sense clock.
1482:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1483:Generated_Source\PSoC4/CapSense_Sensing.c **** *******************************************************************************/
1484:Generated_Source\PSoC4/CapSense_Sensing.c **** void CapSense_SsSetSnsClockDivider(uint32 snsClk)
1485:Generated_Source\PSoC4/CapSense_Sensing.c **** {
1486:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_ENABLE == CapSense_CSDV2)
1487:Generated_Source\PSoC4/CapSense_Sensing.c ****     uint32 newRegValue;
1488:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1489:Generated_Source\PSoC4/CapSense_Sensing.c ****     /*
1490:Generated_Source\PSoC4/CapSense_Sensing.c ****      * Set divider value for sense clock.
1491:Generated_Source\PSoC4/CapSense_Sensing.c ****      * 1u is subtracted from snsClk because SENSE_DIV value 0 corresponds
1492:Generated_Source\PSoC4/CapSense_Sensing.c ****      * to dividing by 1.
1493:Generated_Source\PSoC4/CapSense_Sensing.c ****      */
1494:Generated_Source\PSoC4/CapSense_Sensing.c ****     newRegValue = CY_GET_REG32(CapSense_SENSE_PERIOD_PTR);
1495:Generated_Source\PSoC4/CapSense_Sensing.c ****     newRegValue &= (uint32)(~CapSense_SENSE_PERIOD_SENSE_DIV_MASK);
1496:Generated_Source\PSoC4/CapSense_Sensing.c ****     newRegValue |= snsClk - 1u;
1497:Generated_Source\PSoC4/CapSense_Sensing.c ****     CY_SET_REG32(CapSense_SENSE_PERIOD_PTR, newRegValue);
1498:Generated_Source\PSoC4/CapSense_Sensing.c **** #else
1499:Generated_Source\PSoC4/CapSense_Sensing.c ****     #if (CapSense_ENABLE == CapSense_IS_M0S8PERI_BLOCK)
1500:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Stop sense clock clock   */
1501:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32(CapSense_SNSCLK_CMD_PTR,
1502:Generated_Source\PSoC4/CapSense_Sensing.c ****                      ((uint32)CapSense_SnsClk__DIV_ID <<
1503:Generated_Source\PSoC4/CapSense_Sensing.c ****                      CapSense_SNSCLK_CMD_DIV_SHIFT)|
1504:Generated_Source\PSoC4/CapSense_Sensing.c ****                      ((uint32)CapSense_SNSCLK_CMD_DISABLE_MASK));
1505:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1506:Generated_Source\PSoC4/CapSense_Sensing.c ****         /*
1507:Generated_Source\PSoC4/CapSense_Sensing.c ****          * Set divider value for sense clock.
1508:Generated_Source\PSoC4/CapSense_Sensing.c ****          * 1u is subtracted from snsClk because Divider register value 0 corresponds
1509:Generated_Source\PSoC4/CapSense_Sensing.c ****          * to dividing by 1.
1510:Generated_Source\PSoC4/CapSense_Sensing.c ****          */
1511:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32(CapSense_SNSCLK_DIV_PTR, ((snsClk - 1u) << 8u));
1512:Generated_Source\PSoC4/CapSense_Sensing.c **** 
ARM GAS  C:\Users\mstai\AppData\Local\Temp\ccHdifRP.s 			page 28


1513:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Check whether previous sense clock start command has finished. */
1514:Generated_Source\PSoC4/CapSense_Sensing.c ****         while(0u != (CY_GET_REG32(CapSense_SNSCLK_CMD_PTR) & CapSense_SNSCLK_CMD_ENABLE_MASK))
1515:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
1516:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* Wait until previous sense clock start command has finished. */
1517:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
1518:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1519:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Start sense clock aligned to previously started modulator clock. */
1520:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32(CapSense_SNSCLK_CMD_PTR,
1521:Generated_Source\PSoC4/CapSense_Sensing.c ****                      (uint32)(((uint32)CapSense_SnsClk__DIV_ID << CapSense_SNSCLK_CMD_DIV_SHIFT) |
1522:Generated_Source\PSoC4/CapSense_Sensing.c ****                       ((uint32)CapSense_ModClk__PA_DIV_ID << CapSense_SNSCLK_CMD_PA_DIV_SHIFT) |
1523:Generated_Source\PSoC4/CapSense_Sensing.c ****                       CapSense_SNSCLK_CMD_ENABLE_MASK));
1524:Generated_Source\PSoC4/CapSense_Sensing.c ****     #else
1525:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint32 newRegValue;
1526:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1527:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Clear bit to disable SnsClk clock. */
1528:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32(CapSense_SNSCLK_CMD_PTR,
1529:Generated_Source\PSoC4/CapSense_Sensing.c ****                      CY_GET_REG32(CapSense_SNSCLK_CMD_PTR) &
1530:Generated_Source\PSoC4/CapSense_Sensing.c ****                      (uint32)(~(uint32)CapSense_SnsClk__ENABLE_MASK));
1531:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1532:Generated_Source\PSoC4/CapSense_Sensing.c ****         /*
1533:Generated_Source\PSoC4/CapSense_Sensing.c ****          * Update snsClk clock divider.
1534:Generated_Source\PSoC4/CapSense_Sensing.c ****          * 1u is subtracted from snsClk because Divider register value has range (0-65535).
1535:Generated_Source\PSoC4/CapSense_Sensing.c ****          */
1536:Generated_Source\PSoC4/CapSense_Sensing.c ****         newRegValue = CY_GET_REG32(CapSense_SNSCLK_DIV_PTR) & (uint32)(~(uint32)CapSense_SnsClk__DI
1537:Generated_Source\PSoC4/CapSense_Sensing.c ****         newRegValue |= (snsClk - 1u);
1538:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32(CapSense_SNSCLK_DIV_PTR, newRegValue);
1539:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1540:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Set bit to enable SnsClk clock. */
1541:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32(CapSense_SNSCLK_CMD_PTR,
1542:Generated_Source\PSoC4/CapSense_Sensing.c ****                      CY_GET_REG32(CapSense_SNSCLK_CMD_PTR) |
1543:Generated_Source\PSoC4/CapSense_Sensing.c ****                     CapSense_SnsClk__ENABLE_MASK);
1544:Generated_Source\PSoC4/CapSense_Sensing.c ****     #endif /* (CapSense_ENABLE == CapSense_IS_M0S8PERI_BLOCK) */
1545:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* (CapSense_ENABLE == CapSense_CSDV2) */
1546:Generated_Source\PSoC4/CapSense_Sensing.c **** }
1547:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1548:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1549:Generated_Source\PSoC4/CapSense_Sensing.c **** /*******************************************************************************
1550:Generated_Source\PSoC4/CapSense_Sensing.c **** * Function Name: CapSense_SsSetClockDividers
1551:Generated_Source\PSoC4/CapSense_Sensing.c **** ****************************************************************************//**
1552:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1553:Generated_Source\PSoC4/CapSense_Sensing.c **** * \brief
1554:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Sets the divider values for sense and modulator clocks and then starts
1555:Generated_Source\PSoC4/CapSense_Sensing.c **** *  a modulator clock-phase aligned to HFCLK and sense clock-phase aligned to
1556:Generated_Source\PSoC4/CapSense_Sensing.c **** *  the modulator clock.
1557:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1558:Generated_Source\PSoC4/CapSense_Sensing.c **** * \details
1559:Generated_Source\PSoC4/CapSense_Sensing.c **** *  It is not recommended to call this function directly by the application layer.
1560:Generated_Source\PSoC4/CapSense_Sensing.c **** *  It is used by initialization, widget APIs or wakeup functions to
1561:Generated_Source\PSoC4/CapSense_Sensing.c **** *  enable the clocks.
1562:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1563:Generated_Source\PSoC4/CapSense_Sensing.c **** * \param
1564:Generated_Source\PSoC4/CapSense_Sensing.c **** *  snsClk The divider value for the sense clock.
1565:Generated_Source\PSoC4/CapSense_Sensing.c **** *  modClk The divider value for the modulator clock.
1566:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1567:Generated_Source\PSoC4/CapSense_Sensing.c **** *******************************************************************************/
1568:Generated_Source\PSoC4/CapSense_Sensing.c **** void CapSense_SsSetClockDividers(uint32 snsClk, uint32 modClk)
1569:Generated_Source\PSoC4/CapSense_Sensing.c **** {
ARM GAS  C:\Users\mstai\AppData\Local\Temp\ccHdifRP.s 			page 29


1570:Generated_Source\PSoC4/CapSense_Sensing.c ****     /* Configure Mod clock */
1571:Generated_Source\PSoC4/CapSense_Sensing.c ****     CapSense_SsSetModClkClockDivider(modClk);
1572:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1573:Generated_Source\PSoC4/CapSense_Sensing.c ****     /* Configure Sns clock */
1574:Generated_Source\PSoC4/CapSense_Sensing.c ****     CapSense_SsSetSnsClockDivider(snsClk);
1575:Generated_Source\PSoC4/CapSense_Sensing.c **** }
1576:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1577:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1578:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_ANYMODE_AUTOCAL)
1579:Generated_Source\PSoC4/CapSense_Sensing.c ****     /*******************************************************************************
1580:Generated_Source\PSoC4/CapSense_Sensing.c ****     * Function Name: CapSense_CalibrateWidget
1581:Generated_Source\PSoC4/CapSense_Sensing.c ****     ****************************************************************************//**
1582:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
1583:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \brief
1584:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  Calibrates the IDACs for all the sensors in the specified widget to the default
1585:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  target, this function detects the sensing method used by the
1586:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  widget prior to calibration.
1587:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
1588:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \details
1589:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  This function performs exactly the same tasks as
1590:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  CapSense_CalibrateAllWidgets, but only for a specified widget.
1591:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  This function detects the sensing method used by the widgets and uses
1592:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  the Enable compensation IDAC parameter.
1593:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  \if SECTION_I_REP
1594:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  For ISX mode, the frequency is also calibrated.
1595:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  \endif
1596:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
1597:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  \if SECTION_C_LOW_LEVEL
1598:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  This function is available when the CSD and/or CSX Enable IDAC
1599:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  auto-calibration parameter is enabled.
1600:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  \endif
1601:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  \if SECTION_I_REP
1602:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  This function is available when the ISX Enable auto-calibration parameter
1603:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  is enabled.
1604:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  \endif
1605:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
1606:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \param widgetId
1607:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  Specifies the ID number of the widget to calibrate its raw count.
1608:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  A macro for the widget ID can be found in the
1609:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  CapSense Configuration header file defined as
1610:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  CapSense_<WidgetName>_WDGT_ID.
1611:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
1612:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \return
1613:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  Returns the status of the specified widget calibration:
1614:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  - CYRET_SUCCESS - The operation is successfully completed.
1615:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  - CYRET_BAD_PARAM - The input parameter is invalid.
1616:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  - CYRET_BAD_DATA - The calibration failed and the Component may not
1617:Generated_Source\PSoC4/CapSense_Sensing.c ****     *    operate as expected.
1618:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
1619:Generated_Source\PSoC4/CapSense_Sensing.c ****     *******************************************************************************/
1620:Generated_Source\PSoC4/CapSense_Sensing.c ****     cystatus CapSense_CalibrateWidget(uint32 widgetId)
1621:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
1622:Generated_Source\PSoC4/CapSense_Sensing.c ****         cystatus calibrateStatus = CYRET_SUCCESS;
1623:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1624:Generated_Source\PSoC4/CapSense_Sensing.c ****         do
1625:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
1626:Generated_Source\PSoC4/CapSense_Sensing.c ****             if (CapSense_TOTAL_WIDGETS <= widgetId)
ARM GAS  C:\Users\mstai\AppData\Local\Temp\ccHdifRP.s 			page 30


1627:Generated_Source\PSoC4/CapSense_Sensing.c ****             {
1628:Generated_Source\PSoC4/CapSense_Sensing.c ****                 calibrateStatus = CYRET_BAD_PARAM;
1629:Generated_Source\PSoC4/CapSense_Sensing.c ****             }
1630:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1631:Generated_Source\PSoC4/CapSense_Sensing.c ****             /*
1632:Generated_Source\PSoC4/CapSense_Sensing.c ****              *  Check if widget id is valid, specified widget did not
1633:Generated_Source\PSoC4/CapSense_Sensing.c ****              *  detect any faults conditions if BIST is enabled.
1634:Generated_Source\PSoC4/CapSense_Sensing.c ****              */
1635:Generated_Source\PSoC4/CapSense_Sensing.c ****             #if (CapSense_ENABLE == CapSense_SELF_TEST_EN)
1636:Generated_Source\PSoC4/CapSense_Sensing.c ****                 if (0u != CapSense_GET_WIDGET_EN_STATUS(widgetId))
1637:Generated_Source\PSoC4/CapSense_Sensing.c ****                 {
1638:Generated_Source\PSoC4/CapSense_Sensing.c ****                     calibrateStatus = CYRET_SUCCESS;
1639:Generated_Source\PSoC4/CapSense_Sensing.c ****                 }
1640:Generated_Source\PSoC4/CapSense_Sensing.c ****                 else
1641:Generated_Source\PSoC4/CapSense_Sensing.c ****                 {
1642:Generated_Source\PSoC4/CapSense_Sensing.c ****                     calibrateStatus = CYRET_INVALID_STATE;
1643:Generated_Source\PSoC4/CapSense_Sensing.c ****                 }
1644:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif  /* (CapSense_ENABLE == CapSense_SELF_TEST_EN) */
1645:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1646:Generated_Source\PSoC4/CapSense_Sensing.c ****             if (CYRET_SUCCESS != calibrateStatus)
1647:Generated_Source\PSoC4/CapSense_Sensing.c ****             {
1648:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Exit from the loop because of a fail */
1649:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
1650:Generated_Source\PSoC4/CapSense_Sensing.c ****             }
1651:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1652:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* If both CSD and CSX are enabled, calibrate widget using sensing method */
1653:Generated_Source\PSoC4/CapSense_Sensing.c ****             #if (CapSense_ENABLE == CapSense_MANY_WIDGET_METHODS_EN)
1654:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Check widget sensing method and call appropriate APIs */
1655:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #if (CapSense_ENABLE == CapSense_ISX_IDAC_AUTOCAL_EN)
1656:Generated_Source\PSoC4/CapSense_Sensing.c ****                     if (CapSense_SENSE_METHOD_ISX_E ==
1657:Generated_Source\PSoC4/CapSense_Sensing.c ****                         CapSense_GET_SENSE_METHOD(&CapSense_dsFlash.wdgtArray[widgetId]))
1658:Generated_Source\PSoC4/CapSense_Sensing.c ****                     {
1659:Generated_Source\PSoC4/CapSense_Sensing.c ****                         /* Calibrate CSX widget */
1660:Generated_Source\PSoC4/CapSense_Sensing.c ****                        CapSense_ISXCalibrateWidget(widgetId, CapSense_ISX_RAWCOUNT_CAL_LEVEL);
1661:Generated_Source\PSoC4/CapSense_Sensing.c ****                     }
1662:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #endif  /* (CapSense_ENABLE == CapSense_ISX_IDAC_AUTOCAL_EN) */
1663:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1664:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Check widget sensing method and call appropriate APIs */
1665:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #if (CapSense_ENABLE == CapSense_CSX_IDAC_AUTOCAL_EN)
1666:Generated_Source\PSoC4/CapSense_Sensing.c ****                     if (CapSense_SENSE_METHOD_CSX_E ==
1667:Generated_Source\PSoC4/CapSense_Sensing.c ****                         CapSense_GET_SENSE_METHOD(&CapSense_dsFlash.wdgtArray[widgetId]))
1668:Generated_Source\PSoC4/CapSense_Sensing.c ****                     {
1669:Generated_Source\PSoC4/CapSense_Sensing.c ****                         /* Calibrate CSX widget */
1670:Generated_Source\PSoC4/CapSense_Sensing.c ****                        calibrateStatus = CapSense_CSXCalibrateWidget(widgetId, CapSense_CSX_RAWCOUN
1671:Generated_Source\PSoC4/CapSense_Sensing.c ****                     }
1672:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #endif  /* (CapSense_ENABLE == CapSense_CSX_IDAC_AUTOCAL_EN) */
1673:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1674:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #if (CapSense_ENABLE == CapSense_CSD_IDAC_AUTOCAL_EN)
1675:Generated_Source\PSoC4/CapSense_Sensing.c ****                     if (CapSense_SENSE_METHOD_CSD_E ==
1676:Generated_Source\PSoC4/CapSense_Sensing.c ****                         CapSense_GET_SENSE_METHOD(&CapSense_dsFlash.wdgtArray[widgetId]))
1677:Generated_Source\PSoC4/CapSense_Sensing.c ****                     {
1678:Generated_Source\PSoC4/CapSense_Sensing.c ****                         /* Calibrate CSD widget */
1679:Generated_Source\PSoC4/CapSense_Sensing.c ****                         calibrateStatus = CapSense_CSDCalibrateWidget(widgetId, CapSense_CSD_RAWCOU
1680:Generated_Source\PSoC4/CapSense_Sensing.c ****                     }
1681:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #endif  /* (CapSense_ENABLE == CapSense_CSD_IDAC_AUTOCAL_EN) */
1682:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1683:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* If only CSD is enabled, calibrate CSD sensor */
ARM GAS  C:\Users\mstai\AppData\Local\Temp\ccHdifRP.s 			page 31


1684:Generated_Source\PSoC4/CapSense_Sensing.c ****             #elif (CapSense_ENABLE == CapSense_CSD_EN)
1685:Generated_Source\PSoC4/CapSense_Sensing.c ****                 calibrateStatus = CapSense_CSDCalibrateWidget(widgetId, CapSense_CSD_RAWCOUNT_CAL_L
1686:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1687:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* If only CSX is enabled, call CSX scan */
1688:Generated_Source\PSoC4/CapSense_Sensing.c ****             #elif (CapSense_ENABLE == CapSense_CSX_EN)
1689:Generated_Source\PSoC4/CapSense_Sensing.c ****                 calibrateStatus = CapSense_CSXCalibrateWidget(widgetId, CapSense_CSX_RAWCOUNT_CAL_L
1690:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1691:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* If only ISX is enabled, call ISX scan */
1692:Generated_Source\PSoC4/CapSense_Sensing.c ****             #elif (CapSense_ENABLE == CapSense_ISX_EN)
1693:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_ISXCalibrateWidget(widgetId, CapSense_ISX_RAWCOUNT_CAL_LEVEL);
1694:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1695:Generated_Source\PSoC4/CapSense_Sensing.c ****             #else
1696:Generated_Source\PSoC4/CapSense_Sensing.c ****                 calibrateStatus = CYRET_UNKNOWN;
1697:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif
1698:Generated_Source\PSoC4/CapSense_Sensing.c ****         } while (0u);
1699:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1700:Generated_Source\PSoC4/CapSense_Sensing.c ****         return calibrateStatus;
1701:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
1702:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1703:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1704:Generated_Source\PSoC4/CapSense_Sensing.c ****     /*******************************************************************************
1705:Generated_Source\PSoC4/CapSense_Sensing.c ****     * Function Name: CapSense_CalibrateAllWidgets
1706:Generated_Source\PSoC4/CapSense_Sensing.c ****     ****************************************************************************//**
1707:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
1708:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \brief
1709:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  Calibrates the IDACs for all the widgets in the Component to the default
1710:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  target, this function detects the sensing method used by the widgets
1711:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  prior to calibration.
1712:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
1713:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \details
1714:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  Calibrates the IDACs for all the widgets in the Component to the default
1715:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  target value. This function detects the sensing method used by the widgets
1716:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  and regards the Enable compensation IDAC parameter.
1717:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  \if SECTION_I_REP
1718:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  For ISX mode, the frequency is also calibrated.
1719:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  \endif
1720:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
1721:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  \cond SECTION_C_LOW_LEVEL
1722:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  This function is available when the CSD and/or CSX Enable IDAC
1723:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  auto-calibration parameter is enabled.
1724:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  \endcond
1725:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  \if SECTION_I_REP
1726:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  This function is available when the ISX Enable Auto-calibration parameter
1727:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  is enabled.
1728:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  \endif
1729:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
1730:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \return
1731:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  Returns the status of the calibration process:
1732:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  - CYRET_SUCCESS - The operation is successfully completed.
1733:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  - CYRET_BAD_DATA - The calibration failed and the Component may not
1734:Generated_Source\PSoC4/CapSense_Sensing.c ****     *    operate as expected.
1735:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
1736:Generated_Source\PSoC4/CapSense_Sensing.c ****     *******************************************************************************/
1737:Generated_Source\PSoC4/CapSense_Sensing.c ****     cystatus CapSense_CalibrateAllWidgets(void)
1738:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
1739:Generated_Source\PSoC4/CapSense_Sensing.c ****         cystatus calibrateStatus = CYRET_SUCCESS;
1740:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint32 wdgtIndex;
ARM GAS  C:\Users\mstai\AppData\Local\Temp\ccHdifRP.s 			page 32


1741:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1742:Generated_Source\PSoC4/CapSense_Sensing.c ****         for (wdgtIndex = 0u; wdgtIndex < CapSense_TOTAL_WIDGETS; wdgtIndex++)
1743:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
1744:Generated_Source\PSoC4/CapSense_Sensing.c ****             calibrateStatus |= CapSense_CalibrateWidget(wdgtIndex);
1745:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
1746:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1747:Generated_Source\PSoC4/CapSense_Sensing.c ****         return calibrateStatus;
1748:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
1749:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* (CapSense_ANYMODE_AUTOCAL) */
1750:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1751:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1752:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_CSD_SS_DIS != CapSense_CSD_AUTOTUNE)
1753:Generated_Source\PSoC4/CapSense_Sensing.c ****     /*******************************************************************************
1754:Generated_Source\PSoC4/CapSense_Sensing.c ****     * Function Name: CapSense_SsAutoTuneWidget
1755:Generated_Source\PSoC4/CapSense_Sensing.c ****     ****************************************************************************//**
1756:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
1757:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \brief
1758:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  This API performs the parameters auto-tuning for the optimal CapSense
1759:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  operation for a desired widget.
1760:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
1761:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \details
1762:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  This API performs the following:
1763:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  - Calibrates Modulator and Compensation IDACs.
1764:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  - Tunes the Sense Clock optimal value to get a Sense Clock period greater than
1765:Generated_Source\PSoC4/CapSense_Sensing.c ****     *    2*5*R*Cp.
1766:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  - Calculates the resolution for the optimal finger capacitance.
1767:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
1768:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \param widgetId
1769:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  Specifies the ID number of a desired widget.
1770:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  A macro for the widget ID can be found in the
1771:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  CapSense Configuration header file defined as
1772:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  CapSense_<WidgetName>_WDGT_ID.
1773:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
1774:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \return
1775:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  Returns the status of the operation:
1776:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  - Zero     - All the widgets are auto-tuned successfully.
1777:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  - Non-zero - Auto-tuning failed for any widget.
1778:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
1779:Generated_Source\PSoC4/CapSense_Sensing.c ****     *******************************************************************************/
1780:Generated_Source\PSoC4/CapSense_Sensing.c ****     cystatus CapSense_SsAutoTuneWidget(uint32 widgetId)
1781:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
1782:Generated_Source\PSoC4/CapSense_Sensing.c ****         cystatus autoTuneStatus = CYRET_SUCCESS;
1783:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1784:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint32 snsIndex;
1785:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint32 inputSnsClk;
1786:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint32 minSnsClkDiv;
1787:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint32 minSnsClkDivTmp;
1788:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1789:Generated_Source\PSoC4/CapSense_Sensing.c ****         AUTO_TUNE_CONFIG_TYPE autoTuneConfig;
1790:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1791:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint32 maxRaw = 0u;
1792:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint32 maxCp = 0u;
1793:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint32 maxIdacComp = 0u;
1794:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1795:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_CSD_MATRIX_WIDGET_EN || CapSense_CSD_TOUCHPAD_WIDGET_EN)
1796:Generated_Source\PSoC4/CapSense_Sensing.c ****             uint32 maxCpSnsId = 0u;
1797:Generated_Source\PSoC4/CapSense_Sensing.c ****             uint32 maxCpRowSnsId = 0u;
ARM GAS  C:\Users\mstai\AppData\Local\Temp\ccHdifRP.s 			page 33


1798:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif
1799:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1800:Generated_Source\PSoC4/CapSense_Sensing.c ****         CapSense_FLASH_WD_STRUCT const *ptrFlashWidget = &CapSense_dsFlash.wdgtArray[widgetId];
1801:Generated_Source\PSoC4/CapSense_Sensing.c ****         CapSense_RAM_WD_BASE_STRUCT *ptrRamWidget = (CapSense_RAM_WD_BASE_STRUCT *)ptrFlashWidget->
1802:Generated_Source\PSoC4/CapSense_Sensing.c ****         CapSense_RAM_SNS_STRUCT *ptrRamSensor = ptrFlashWidget->ptr2SnsRam;
1803:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1804:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Find input of sensor clock frequency */
1805:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_ENABLE == CapSense_CSDV2)
1806:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* Dividers are chained (Fourth-generation HW block). Flip flop is not available */
1807:Generated_Source\PSoC4/CapSense_Sensing.c ****             inputSnsClk = ((uint32)CYDEV_BCLK__HFCLK__KHZ / (uint32)CapSense_dsRam.modCsdClk);
1808:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1809:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* Minimum value of SnaClk divider that is allowed for all Fourth-generation
1810:Generated_Source\PSoC4/CapSense_Sensing.c ****              * CSD HW block based devices.
1811:Generated_Source\PSoC4/CapSense_Sensing.c ****             */
1812:Generated_Source\PSoC4/CapSense_Sensing.c ****             minSnsClkDiv = CapSense_MIN_SNS_CLK_DIVIDER;
1813:Generated_Source\PSoC4/CapSense_Sensing.c ****         #elif (CapSense_ENABLE == CapSense_IS_M0S8PERI_BLOCK)
1814:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* Dividers are not chained */
1815:Generated_Source\PSoC4/CapSense_Sensing.c ****             inputSnsClk = CYDEV_BCLK__HFCLK__KHZ >> CapSense_FLIP_FLOP_DIV;
1816:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1817:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* Minimum value of SnaClk divider that is allowed for PSoC 4100 and PSoC 4200
1818:Generated_Source\PSoC4/CapSense_Sensing.c ****                device families.
1819:Generated_Source\PSoC4/CapSense_Sensing.c ****             */
1820:Generated_Source\PSoC4/CapSense_Sensing.c ****             minSnsClkDiv = CapSense_dsRam.modCsdClk;
1821:Generated_Source\PSoC4/CapSense_Sensing.c ****         #else
1822:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* Dividers are chained (PSoC 4100, PSoC 4200) */
1823:Generated_Source\PSoC4/CapSense_Sensing.c ****             inputSnsClk = (CYDEV_BCLK__HFCLK__KHZ / CapSense_dsRam.modCsdClk) >> CapSense_FLIP_FLOP
1824:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1825:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* Minimum value of SnaClk divider that is allowed for all Fourth-generation
1826:Generated_Source\PSoC4/CapSense_Sensing.c ****              * CSD HW block based device except PSoC 4100 and PSoC 4200 device families.
1827:Generated_Source\PSoC4/CapSense_Sensing.c ****             */
1828:Generated_Source\PSoC4/CapSense_Sensing.c ****             minSnsClkDiv = CapSense_MIN_SNS_CLK_DIVIDER;
1829:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif /* (CapSense_ENABLE == CapSense_CSDV2) */
1830:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1831:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Minimum value of SnsClk divider required to ensure the CSD HW block
1832:Generated_Source\PSoC4/CapSense_Sensing.c ****          * operation in allowed frequency range.
1833:Generated_Source\PSoC4/CapSense_Sensing.c ****         */
1834:Generated_Source\PSoC4/CapSense_Sensing.c ****         minSnsClkDivTmp = inputSnsClk * CapSense_AUTOTUNE_CAL_UNITS;
1835:Generated_Source\PSoC4/CapSense_Sensing.c ****         minSnsClkDivTmp /= CapSense_CSD_SNS_FREQ_KHZ_MAX;
1836:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1837:Generated_Source\PSoC4/CapSense_Sensing.c ****         if (minSnsClkDiv < minSnsClkDivTmp)
1838:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
1839:Generated_Source\PSoC4/CapSense_Sensing.c ****             minSnsClkDiv = minSnsClkDivTmp;
1840:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
1841:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1842:Generated_Source\PSoC4/CapSense_Sensing.c ****         minSnsClkDiv = (minSnsClkDiv + (CapSense_AUTOTUNE_CAL_UNITS - 1u)) / CapSense_AUTOTUNE_CAL_
1843:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1844:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Make divider even */
1845:Generated_Source\PSoC4/CapSense_Sensing.c ****         if (0u != (minSnsClkDiv & 0x01u))
1846:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
1847:Generated_Source\PSoC4/CapSense_Sensing.c ****             minSnsClkDiv++;
1848:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
1849:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1850:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Initialize auto-tuning configuration structure */
1851:Generated_Source\PSoC4/CapSense_Sensing.c ****         autoTuneConfig.snsClkInputClock = (uint16)inputSnsClk;
1852:Generated_Source\PSoC4/CapSense_Sensing.c ****         autoTuneConfig.snsClkConstantR = CapSense_CSD_SNSCLK_R_CONST;
1853:Generated_Source\PSoC4/CapSense_Sensing.c ****         autoTuneConfig.vRef = CapSense_CSD_VREF_MV;
1854:Generated_Source\PSoC4/CapSense_Sensing.c ****         autoTuneConfig.fingerCap = ptrRamWidget->fingerCap;
ARM GAS  C:\Users\mstai\AppData\Local\Temp\ccHdifRP.s 			page 34


1855:Generated_Source\PSoC4/CapSense_Sensing.c ****         autoTuneConfig.sigPFC = &ptrRamWidget->sigPFC;
1856:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1857:Generated_Source\PSoC4/CapSense_Sensing.c ****         /*
1858:Generated_Source\PSoC4/CapSense_Sensing.c ****         * Autotune phase #1:
1859:Generated_Source\PSoC4/CapSense_Sensing.c ****         * - performing the first calibration at fixed settings
1860:Generated_Source\PSoC4/CapSense_Sensing.c ****         * - getting maximum sensor Cp
1861:Generated_Source\PSoC4/CapSense_Sensing.c ****         * - getting sense clock frequency based on Cp
1862:Generated_Source\PSoC4/CapSense_Sensing.c ****         */
1863:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1864:Generated_Source\PSoC4/CapSense_Sensing.c ****         ptrRamWidget->resolution = CapSense_AUTOTUNE_CALIBRATION_RESOLUTION;
1865:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1866:Generated_Source\PSoC4/CapSense_Sensing.c ****         ptrRamWidget->snsClk = (uint16)(inputSnsClk / CapSense_AUTOTUNE_CALIBRATION_FREQ_KHZ);
1867:Generated_Source\PSoC4/CapSense_Sensing.c ****         ptrRamWidget->snsClkSource = (uint8)CapSense_CLK_SOURCE_DIRECT;
1868:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1869:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_CSD_MATRIX_WIDGET_EN || CapSense_CSD_TOUCHPAD_WIDGET_EN)
1870:Generated_Source\PSoC4/CapSense_Sensing.c ****             ptrRamWidget->rowSnsClk = (uint16)(inputSnsClk / CapSense_AUTOTUNE_CALIBRATION_FREQ_KHZ
1871:Generated_Source\PSoC4/CapSense_Sensing.c ****             ptrRamWidget->rowSnsClkSource = (uint8)CapSense_CLK_SOURCE_DIRECT;
1872:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif
1873:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1874:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Calibrate CSD widget to the default calibration target */
1875:Generated_Source\PSoC4/CapSense_Sensing.c ****         (void)CapSense_CSDCalibrateWidget(widgetId, CapSense_AUTOTUNE_CAL_LEVEL);
1876:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1877:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Find raw count and IDAC of a sensor with maximum Cp */
1878:Generated_Source\PSoC4/CapSense_Sensing.c ****         for (snsIndex = 0u; snsIndex < ptrFlashWidget->numCols; snsIndex++)
1879:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
1880:Generated_Source\PSoC4/CapSense_Sensing.c ****             #if (CapSense_ENABLE == CapSense_CSD_IDAC_COMP_EN)
1881:Generated_Source\PSoC4/CapSense_Sensing.c ****                 if (maxIdacComp < ptrRamSensor->idacComp[0u])
1882:Generated_Source\PSoC4/CapSense_Sensing.c ****                 {
1883:Generated_Source\PSoC4/CapSense_Sensing.c ****                     #if (CapSense_CSD_MATRIX_WIDGET_EN || CapSense_CSD_TOUCHPAD_WIDGET_EN)
1884:Generated_Source\PSoC4/CapSense_Sensing.c ****                         maxCpSnsId = snsIndex;
1885:Generated_Source\PSoC4/CapSense_Sensing.c ****                     #endif
1886:Generated_Source\PSoC4/CapSense_Sensing.c ****                     maxIdacComp = ptrRamSensor->idacComp[0u];
1887:Generated_Source\PSoC4/CapSense_Sensing.c ****                     maxRaw = ptrRamSensor->raw[0u];
1888:Generated_Source\PSoC4/CapSense_Sensing.c ****                 }
1889:Generated_Source\PSoC4/CapSense_Sensing.c ****             #else
1890:Generated_Source\PSoC4/CapSense_Sensing.c ****                 if (maxRaw < ptrRamSensor->raw[0u])
1891:Generated_Source\PSoC4/CapSense_Sensing.c ****                 {
1892:Generated_Source\PSoC4/CapSense_Sensing.c ****                     #if (CapSense_CSD_MATRIX_WIDGET_EN || CapSense_CSD_TOUCHPAD_WIDGET_EN)
1893:Generated_Source\PSoC4/CapSense_Sensing.c ****                         maxCpSnsId = snsIndex;
1894:Generated_Source\PSoC4/CapSense_Sensing.c ****                     #endif
1895:Generated_Source\PSoC4/CapSense_Sensing.c ****                     maxRaw = ptrRamSensor->raw[0u];
1896:Generated_Source\PSoC4/CapSense_Sensing.c ****                 }
1897:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif
1898:Generated_Source\PSoC4/CapSense_Sensing.c ****             ptrRamSensor++;
1899:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
1900:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1901:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Update auto-tuning configuration structure */
1902:Generated_Source\PSoC4/CapSense_Sensing.c ****         autoTuneConfig.iDacMod = ptrRamWidget->idacMod[0u];
1903:Generated_Source\PSoC4/CapSense_Sensing.c ****         autoTuneConfig.iDacComp = (uint8)maxIdacComp;
1904:Generated_Source\PSoC4/CapSense_Sensing.c ****         autoTuneConfig.iDacGain = CapSense_idacGainTable[ptrRamWidget->idacGainIndex].gainValue;
1905:Generated_Source\PSoC4/CapSense_Sensing.c ****         autoTuneConfig.ptrSenseClk = &ptrRamWidget->snsClk;
1906:Generated_Source\PSoC4/CapSense_Sensing.c ****         autoTuneConfig.calTarget = (uint16)((maxRaw * CapSense_AUTOTUNE_CAL_UNITS) /
1907:Generated_Source\PSoC4/CapSense_Sensing.c ****                 ((uint32)(0x01uL << CapSense_AUTOTUNE_CALIBRATION_RESOLUTION) - 1u));
1908:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1909:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Find sensor Cp and optimum sense clock value */
1910:Generated_Source\PSoC4/CapSense_Sensing.c ****         maxCp = SmartSense_TunePrescalers(&autoTuneConfig);
1911:Generated_Source\PSoC4/CapSense_Sensing.c ****         autoTuneConfig.sensorCap = maxCp;
ARM GAS  C:\Users\mstai\AppData\Local\Temp\ccHdifRP.s 			page 35


1912:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1913:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Increase sensor clock divider to valid value */
1914:Generated_Source\PSoC4/CapSense_Sensing.c ****         while(ptrRamWidget->snsClk < minSnsClkDiv)
1915:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
1916:Generated_Source\PSoC4/CapSense_Sensing.c ****             ptrRamWidget->snsClk <<= 1u;
1917:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
1918:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1919:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Do the same for row for touchpad or matrix buttons widgets */
1920:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_CSD_MATRIX_WIDGET_EN || CapSense_CSD_TOUCHPAD_WIDGET_EN)
1921:Generated_Source\PSoC4/CapSense_Sensing.c ****             if ((CapSense_WD_TOUCHPAD_E == CapSense_GET_WIDGET_TYPE(ptrFlashWidget)) ||
1922:Generated_Source\PSoC4/CapSense_Sensing.c ****                 (CapSense_WD_MATRIX_BUTTON_E == CapSense_GET_WIDGET_TYPE(ptrFlashWidget)))
1923:Generated_Source\PSoC4/CapSense_Sensing.c ****             {
1924:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Find a sensor with maximum Cp */
1925:Generated_Source\PSoC4/CapSense_Sensing.c ****                 maxRaw = 0u;
1926:Generated_Source\PSoC4/CapSense_Sensing.c ****                 maxIdacComp = 0u;
1927:Generated_Source\PSoC4/CapSense_Sensing.c ****                 for (snsIndex = ptrFlashWidget->numCols; snsIndex < ptrFlashWidget->totalNumSns; sn
1928:Generated_Source\PSoC4/CapSense_Sensing.c ****                 {
1929:Generated_Source\PSoC4/CapSense_Sensing.c ****                     #if (CapSense_ENABLE == CapSense_CSD_IDAC_COMP_EN)
1930:Generated_Source\PSoC4/CapSense_Sensing.c ****                         if (maxIdacComp < ptrRamSensor->idacComp[0u])
1931:Generated_Source\PSoC4/CapSense_Sensing.c ****                         {
1932:Generated_Source\PSoC4/CapSense_Sensing.c ****                             maxCpRowSnsId = snsIndex;
1933:Generated_Source\PSoC4/CapSense_Sensing.c ****                             maxIdacComp = ptrRamSensor->idacComp[0u];
1934:Generated_Source\PSoC4/CapSense_Sensing.c ****                             maxRaw = ptrRamSensor->raw[0u];
1935:Generated_Source\PSoC4/CapSense_Sensing.c ****                         }
1936:Generated_Source\PSoC4/CapSense_Sensing.c ****                     #else
1937:Generated_Source\PSoC4/CapSense_Sensing.c ****                         if (maxRaw < ptrRamSensor->raw[0u])
1938:Generated_Source\PSoC4/CapSense_Sensing.c ****                         {
1939:Generated_Source\PSoC4/CapSense_Sensing.c ****                             maxCpRowSnsId = snsIndex;
1940:Generated_Source\PSoC4/CapSense_Sensing.c ****                             maxRaw = ptrRamSensor->raw[0u];
1941:Generated_Source\PSoC4/CapSense_Sensing.c ****                         }
1942:Generated_Source\PSoC4/CapSense_Sensing.c ****                     #endif
1943:Generated_Source\PSoC4/CapSense_Sensing.c ****                     ptrRamSensor++;
1944:Generated_Source\PSoC4/CapSense_Sensing.c ****                 }
1945:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1946:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Configure auto-tuning configuration structure */
1947:Generated_Source\PSoC4/CapSense_Sensing.c ****                 autoTuneConfig.iDacMod = ptrRamWidget->rowIdacMod[0u];
1948:Generated_Source\PSoC4/CapSense_Sensing.c ****                 autoTuneConfig.iDacComp = (uint8)maxIdacComp;
1949:Generated_Source\PSoC4/CapSense_Sensing.c ****                 autoTuneConfig.ptrSenseClk = &ptrRamWidget->rowSnsClk;
1950:Generated_Source\PSoC4/CapSense_Sensing.c ****                 autoTuneConfig.calTarget = (uint16)((maxRaw * CapSense_AUTOTUNE_CAL_UNITS) /
1951:Generated_Source\PSoC4/CapSense_Sensing.c ****                         ((uint32)(0x01uL << CapSense_AUTOTUNE_CALIBRATION_RESOLUTION) - 1u));
1952:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1953:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Find correct sense clock value */
1954:Generated_Source\PSoC4/CapSense_Sensing.c ****                 maxCp = SmartSense_TunePrescalers(&autoTuneConfig);
1955:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1956:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Save maximum sensor Cp and corresponding sensor Id */
1957:Generated_Source\PSoC4/CapSense_Sensing.c ****                 if (autoTuneConfig.sensorCap < maxCp)
1958:Generated_Source\PSoC4/CapSense_Sensing.c ****                 {
1959:Generated_Source\PSoC4/CapSense_Sensing.c ****                     autoTuneConfig.sensorCap = maxCp;
1960:Generated_Source\PSoC4/CapSense_Sensing.c ****                     maxCpSnsId = maxCpRowSnsId;
1961:Generated_Source\PSoC4/CapSense_Sensing.c ****                 }
1962:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1963:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Increase sensor clock divider to valid value */
1964:Generated_Source\PSoC4/CapSense_Sensing.c ****                 while(ptrRamWidget->rowSnsClk < minSnsClkDiv)
1965:Generated_Source\PSoC4/CapSense_Sensing.c ****                 {
1966:Generated_Source\PSoC4/CapSense_Sensing.c ****                     ptrRamWidget->rowSnsClk <<= 1u;
1967:Generated_Source\PSoC4/CapSense_Sensing.c ****                 }
1968:Generated_Source\PSoC4/CapSense_Sensing.c ****             }
ARM GAS  C:\Users\mstai\AppData\Local\Temp\ccHdifRP.s 			page 36


1969:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif /* (CapSense_CSD_MATRIX_WIDGET_EN || CapSense_CSD_TOUCHPAD_WIDGET_EN) */
1970:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1971:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Check tuning results */
1972:Generated_Source\PSoC4/CapSense_Sensing.c ****         if (CapSense_AUTOTUNE_CP_MAX < maxCp)
1973:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
1974:Generated_Source\PSoC4/CapSense_Sensing.c ****             autoTuneStatus = CYRET_BAD_DATA;
1975:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
1976:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1977:Generated_Source\PSoC4/CapSense_Sensing.c ****         /*
1978:Generated_Source\PSoC4/CapSense_Sensing.c ****         * Autotune phase #2:
1979:Generated_Source\PSoC4/CapSense_Sensing.c ****         * - repeating calibration with new sense clock frequency
1980:Generated_Source\PSoC4/CapSense_Sensing.c ****         * - getting resolution
1981:Generated_Source\PSoC4/CapSense_Sensing.c ****         */
1982:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1983:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Calibrate CSD widget to the default calibration target with newly defined sense frequenc
1984:Generated_Source\PSoC4/CapSense_Sensing.c ****         (void)CapSense_CSDCalibrateWidget(widgetId, CapSense_AUTOTUNE_CAL_LEVEL);
1985:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1986:Generated_Source\PSoC4/CapSense_Sensing.c ****         autoTuneConfig.iDacGain = CapSense_idacGainTable[ptrRamWidget->idacGainIndex].gainValue;
1987:Generated_Source\PSoC4/CapSense_Sensing.c ****         autoTuneConfig.iDacMod = ptrRamWidget->idacMod[0u];
1988:Generated_Source\PSoC4/CapSense_Sensing.c ****         autoTuneConfig.ptrSenseClk = &ptrRamWidget->snsClk;
1989:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1990:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_CSD_MATRIX_WIDGET_EN || CapSense_CSD_TOUCHPAD_WIDGET_EN)
1991:Generated_Source\PSoC4/CapSense_Sensing.c ****             if ((CapSense_WD_TOUCHPAD_E == CapSense_GET_WIDGET_TYPE(ptrFlashWidget)) ||
1992:Generated_Source\PSoC4/CapSense_Sensing.c ****                 (CapSense_WD_MATRIX_BUTTON_E == CapSense_GET_WIDGET_TYPE(ptrFlashWidget)))
1993:Generated_Source\PSoC4/CapSense_Sensing.c ****             {
1994:Generated_Source\PSoC4/CapSense_Sensing.c ****                 if (maxCpSnsId >= ptrFlashWidget->numCols)
1995:Generated_Source\PSoC4/CapSense_Sensing.c ****                 {
1996:Generated_Source\PSoC4/CapSense_Sensing.c ****                     autoTuneConfig.iDacMod = ptrRamWidget->rowIdacMod[0u];
1997:Generated_Source\PSoC4/CapSense_Sensing.c ****                     autoTuneConfig.ptrSenseClk = &ptrRamWidget->rowSnsClk;
1998:Generated_Source\PSoC4/CapSense_Sensing.c ****                 }
1999:Generated_Source\PSoC4/CapSense_Sensing.c ****             }
2000:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif
2001:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2002:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Find resolution */
2003:Generated_Source\PSoC4/CapSense_Sensing.c ****         ptrRamWidget->resolution = SmartSense_TuneSensitivity(&autoTuneConfig);
2004:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2005:Generated_Source\PSoC4/CapSense_Sensing.c ****         /*
2006:Generated_Source\PSoC4/CapSense_Sensing.c ****         * Autotune phase #3:
2007:Generated_Source\PSoC4/CapSense_Sensing.c ****         * - selecting a widget clock source if AUTO
2008:Generated_Source\PSoC4/CapSense_Sensing.c ****         * - repeating calibration with found clock frequency, resolution and clock source
2009:Generated_Source\PSoC4/CapSense_Sensing.c ****         * - updating sensitivity
2010:Generated_Source\PSoC4/CapSense_Sensing.c ****         */
2011:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2012:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Tune widget sensitivity */
2013:Generated_Source\PSoC4/CapSense_Sensing.c ****         CapSense_SsSetWidgetSenseClkSrc(widgetId, ptrRamWidget);
2014:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2015:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Calibrate CSD widget to the default calibration target with newly defined resolution */
2016:Generated_Source\PSoC4/CapSense_Sensing.c ****         autoTuneStatus |= CapSense_CSDCalibrateWidget(widgetId, CapSense_AUTOTUNE_CAL_LEVEL);
2017:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2018:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_ENABLE == CapSense_TST_WDGT_CRC_EN)
2019:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_DsUpdateWidgetCrc(widgetId);
2020:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif /* (CapSense_ENABLE == CapSense_TST_WDGT_CRC_EN) */
2021:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2022:Generated_Source\PSoC4/CapSense_Sensing.c ****         return autoTuneStatus;
2023:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
2024:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2025:Generated_Source\PSoC4/CapSense_Sensing.c **** 
ARM GAS  C:\Users\mstai\AppData\Local\Temp\ccHdifRP.s 			page 37


2026:Generated_Source\PSoC4/CapSense_Sensing.c ****     /*******************************************************************************
2027:Generated_Source\PSoC4/CapSense_Sensing.c ****     * Function Name: CapSense_SsAutoTune
2028:Generated_Source\PSoC4/CapSense_Sensing.c ****     ****************************************************************************//**
2029:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2030:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \brief
2031:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  This API performs the parameters auto-tuning for the optimal CapSense
2032:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  operation.
2033:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2034:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \details
2035:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  This API performs the following:
2036:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  - Calibrates Modulator and Compensation IDACs.
2037:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  - Tunes the Sense Clock optimal value to get a Sense Clock period greater than
2038:Generated_Source\PSoC4/CapSense_Sensing.c ****     *    2*5*R*Cp.
2039:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  - Calculates the resolution for the optimal finger capacitance.
2040:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2041:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \return
2042:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  Returns the status of the operation:
2043:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  - Zero     - All the widgets are auto-tuned successfully.
2044:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  - Non-zero - Auto-tuning failed for any widget.
2045:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2046:Generated_Source\PSoC4/CapSense_Sensing.c ****     *******************************************************************************/
2047:Generated_Source\PSoC4/CapSense_Sensing.c ****     cystatus CapSense_SsAutoTune(void)
2048:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
2049:Generated_Source\PSoC4/CapSense_Sensing.c ****         cystatus autoTuneStatus = CYRET_SUCCESS;
2050:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint32 wdgtIndex;
2051:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2052:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Tune each CSD widget */
2053:Generated_Source\PSoC4/CapSense_Sensing.c ****         for (wdgtIndex = 0u; wdgtIndex < CapSense_TOTAL_WIDGETS; wdgtIndex++)
2054:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
2055:Generated_Source\PSoC4/CapSense_Sensing.c ****             if (CapSense_SENSE_METHOD_CSD_E ==
2056:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_GET_SENSE_METHOD(&CapSense_dsFlash.wdgtArray[wdgtIndex]))
2057:Generated_Source\PSoC4/CapSense_Sensing.c ****             {
2058:Generated_Source\PSoC4/CapSense_Sensing.c ****                 autoTuneStatus |= CapSense_SsAutoTuneWidget(wdgtIndex);
2059:Generated_Source\PSoC4/CapSense_Sensing.c ****             }
2060:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
2061:Generated_Source\PSoC4/CapSense_Sensing.c ****         return autoTuneStatus;
2062:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
2063:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* (CapSense_CSD_SS_DIS != CapSense_CSD_AUTOTUNE)) */
2064:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2065:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2066:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_DISABLE == CapSense_CSDV2)
2067:Generated_Source\PSoC4/CapSense_Sensing.c ****     #if ( ((CapSense_ENABLE == CapSense_CSX_EN) \
2068:Generated_Source\PSoC4/CapSense_Sensing.c ****         || (CapSense_ENABLE == CapSense_ISX_EN)) ||\
2069:Generated_Source\PSoC4/CapSense_Sensing.c ****          (CapSense_IDAC_SINKING == CapSense_CSD_IDAC_CONFIG))
2070:Generated_Source\PSoC4/CapSense_Sensing.c ****         /*******************************************************************************
2071:Generated_Source\PSoC4/CapSense_Sensing.c ****         * Function Name: CapSense_SsTrimIdacsSinking
2072:Generated_Source\PSoC4/CapSense_Sensing.c ****         ****************************************************************************//**
2073:Generated_Source\PSoC4/CapSense_Sensing.c ****         *
2074:Generated_Source\PSoC4/CapSense_Sensing.c ****         * \brief
2075:Generated_Source\PSoC4/CapSense_Sensing.c ****         *  This function loads trim values from SFLASH rows to calibrate
2076:Generated_Source\PSoC4/CapSense_Sensing.c ****         *  IDAC1 and IDAC2 for Sinking CSD Mode
2077:Generated_Source\PSoC4/CapSense_Sensing.c ****         *
2078:Generated_Source\PSoC4/CapSense_Sensing.c ****         * \details
2079:Generated_Source\PSoC4/CapSense_Sensing.c ****         *  Function reads trim value from SFLASH and loads it into IDAC trim register.
2080:Generated_Source\PSoC4/CapSense_Sensing.c ****         *  If Compensation IDAC is disabled the function loads trim values for IDAC1 only.
2081:Generated_Source\PSoC4/CapSense_Sensing.c ****         *
2082:Generated_Source\PSoC4/CapSense_Sensing.c ****         *******************************************************************************/
ARM GAS  C:\Users\mstai\AppData\Local\Temp\ccHdifRP.s 			page 38


2083:Generated_Source\PSoC4/CapSense_Sensing.c ****         static void CapSense_SsTrimIdacsSinking(void)
2084:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
2085:Generated_Source\PSoC4/CapSense_Sensing.c ****             uint32 trimValue;
2086:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2087:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* Mod iDAC Sinking Mode */
2088:Generated_Source\PSoC4/CapSense_Sensing.c ****             trimValue = CY_GET_REG32(CapSense_TRIM2_PTR) & ~CapSense_IDAC_TRIM2_MOD_SNK_MASK;
2089:Generated_Source\PSoC4/CapSense_Sensing.c ****             trimValue |= ((uint32)CY_GET_REG8(CapSense_SFLASH_TRIM2_PTR) &
2090:Generated_Source\PSoC4/CapSense_Sensing.c ****                                                       CapSense_SFLASH_TRIM_IDAC_MOD_MASK) ;
2091:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2092:Generated_Source\PSoC4/CapSense_Sensing.c ****             #if (CapSense_ENABLE == CapSense_CSD_IDAC_COMP_EN)
2093:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Comp iDAC Sinking Mode */
2094:Generated_Source\PSoC4/CapSense_Sensing.c ****                 trimValue &= ~CapSense_IDAC_TRIM2_COMP_SNK_MASK;
2095:Generated_Source\PSoC4/CapSense_Sensing.c ****                 trimValue |= ((uint32)CY_GET_REG8(CapSense_SFLASH_TRIM2_PTR) &
2096:Generated_Source\PSoC4/CapSense_Sensing.c ****                                                           CapSense_SFLASH_TRIM_IDAC_COMP_MASK);
2097:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif /* (CapSense_ENABLE == CapSense_CSD_IDAC_COMP_EN) */
2098:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2099:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* Update IDAC trim bits for gain control in current sink mode */
2100:Generated_Source\PSoC4/CapSense_Sensing.c ****             CY_SET_REG32(CapSense_TRIM2_PTR, trimValue);
2101:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
2102:Generated_Source\PSoC4/CapSense_Sensing.c ****     #endif /* ((CapSense_ENABLE == CapSense_CSX_EN) || \
2103:Generated_Source\PSoC4/CapSense_Sensing.c ****                (CapSense_IDAC_SINKING == CapSense_CSD_IDAC_CONFIG)) */
2104:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2105:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2106:Generated_Source\PSoC4/CapSense_Sensing.c ****     #if ( ((CapSense_ENABLE == CapSense_CSX_EN) \
2107:Generated_Source\PSoC4/CapSense_Sensing.c ****         || (CapSense_ENABLE == CapSense_ISX_EN)) || \
2108:Generated_Source\PSoC4/CapSense_Sensing.c ****          (CapSense_IDAC_SOURCING == CapSense_CSD_IDAC_CONFIG))
2109:Generated_Source\PSoC4/CapSense_Sensing.c ****         /*******************************************************************************
2110:Generated_Source\PSoC4/CapSense_Sensing.c ****         * Function Name: CapSense_SsTrimIdacsSourcing
2111:Generated_Source\PSoC4/CapSense_Sensing.c ****         ****************************************************************************//**
2112:Generated_Source\PSoC4/CapSense_Sensing.c ****         *
2113:Generated_Source\PSoC4/CapSense_Sensing.c ****         * \brief
2114:Generated_Source\PSoC4/CapSense_Sensing.c ****         *  This function loads trim values from SFLASH rows to calibrate
2115:Generated_Source\PSoC4/CapSense_Sensing.c ****         *  IDAC1 and IDAC2 for Sourcing CSD Mode
2116:Generated_Source\PSoC4/CapSense_Sensing.c ****         *
2117:Generated_Source\PSoC4/CapSense_Sensing.c ****         * \details
2118:Generated_Source\PSoC4/CapSense_Sensing.c ****         *  Function reads trim value from SFLASH and loads it into IDAC trim register.
2119:Generated_Source\PSoC4/CapSense_Sensing.c ****         *  If Compensation IDAC is disabled the function loads trim values for IDAC1 only.
2120:Generated_Source\PSoC4/CapSense_Sensing.c ****         *
2121:Generated_Source\PSoC4/CapSense_Sensing.c ****         *******************************************************************************/
2122:Generated_Source\PSoC4/CapSense_Sensing.c ****         static void CapSense_SsTrimIdacsSourcing(void)
2123:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
2124:Generated_Source\PSoC4/CapSense_Sensing.c ****             uint32 trimValue;
2125:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2126:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* Mod iDAC Sourcing Mode */
2127:Generated_Source\PSoC4/CapSense_Sensing.c ****             trimValue = CY_GET_REG32(CapSense_TRIM1_PTR) & ~CapSense_IDAC_TRIM1_MOD_SRC_MASK;
2128:Generated_Source\PSoC4/CapSense_Sensing.c ****             trimValue |= ((uint32)CY_GET_REG8(CapSense_SFLASH_TRIM1_PTR) &
2129:Generated_Source\PSoC4/CapSense_Sensing.c ****                                                       CapSense_SFLASH_TRIM_IDAC_MOD_MASK);
2130:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2131:Generated_Source\PSoC4/CapSense_Sensing.c ****             #if (CapSense_ENABLE == CapSense_CSD_IDAC_COMP_EN)
2132:Generated_Source\PSoC4/CapSense_Sensing.c ****                  /* Comp iDAC Sourcing Mode */
2133:Generated_Source\PSoC4/CapSense_Sensing.c ****                 trimValue &= ~CapSense_IDAC_TRIM1_COMP_SRC_MASK;
2134:Generated_Source\PSoC4/CapSense_Sensing.c ****                 trimValue |= ((uint32)CY_GET_REG8(CapSense_SFLASH_TRIM1_PTR) &
2135:Generated_Source\PSoC4/CapSense_Sensing.c ****                                                           CapSense_SFLASH_TRIM_IDAC_COMP_MASK);
2136:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif /* (CapSense_ENABLE == CapSense_CSD_IDAC_COMP_EN) */
2137:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2138:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* Update IDAC trim bits for gain control in current source mode */
2139:Generated_Source\PSoC4/CapSense_Sensing.c ****             CY_SET_REG32(CapSense_TRIM1_PTR, trimValue);
ARM GAS  C:\Users\mstai\AppData\Local\Temp\ccHdifRP.s 			page 39


2140:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
2141:Generated_Source\PSoC4/CapSense_Sensing.c ****     #endif /* ((CapSense_ENABLE == CapSense_CSX_EN) || \
2142:Generated_Source\PSoC4/CapSense_Sensing.c ****                (CapSense_IDAC_SOURCING == CapSense_CSD_IDAC_CONFIG)) */
2143:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2144:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2145:Generated_Source\PSoC4/CapSense_Sensing.c ****     /*******************************************************************************
2146:Generated_Source\PSoC4/CapSense_Sensing.c ****     * Function Name: CapSense_SsTrimIdacs
2147:Generated_Source\PSoC4/CapSense_Sensing.c ****     ****************************************************************************//**
2148:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2149:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \brief
2150:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  This function loads trim values from SFLASH rows to calibrate
2151:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  IDAC1 and IDAC2 for CSD Mode
2152:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2153:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \details
2154:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  If CSX mode is enabled the function loads trim values for both sink and source
2155:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  mode. If CSX mode is disabled the function loads trim values for sink or
2156:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  source mode based on sink/source mode configuration.
2157:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  If Compensation IDAC is disabled the function loads trim values for IDAC1 only.
2158:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2159:Generated_Source\PSoC4/CapSense_Sensing.c ****     *******************************************************************************/
2160:Generated_Source\PSoC4/CapSense_Sensing.c ****     static void CapSense_SsTrimIdacs(void)
2161:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
2162:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_ENABLE == CapSense_CSX_EN) || (CapSense_ENABLE == CapSense_ISX_EN)
2163:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_SsTrimIdacsSinking();
2164:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_SsTrimIdacsSourcing();
2165:Generated_Source\PSoC4/CapSense_Sensing.c ****         #elif (CapSense_IDAC_SINKING == CapSense_CSD_IDAC_CONFIG)
2166:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_SsTrimIdacsSinking();
2167:Generated_Source\PSoC4/CapSense_Sensing.c ****         #elif (CapSense_IDAC_SOURCING == CapSense_CSD_IDAC_CONFIG)
2168:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_SsTrimIdacsSourcing();
2169:Generated_Source\PSoC4/CapSense_Sensing.c ****         #else
2170:Generated_Source\PSoC4/CapSense_Sensing.c ****             #error "Not supported Mode, Component cannot work in this mode"
2171:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif /* (CapSense_ENABLE == CapSense_CSX_EN) || (CapSense_ENABLE == CapSense_ISX_EN) */
2172:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
2173:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif  /* (CapSense_DISABLE == CapSense_CSDV2) */
2174:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2175:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2176:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_ENABLE == CapSense_MULTI_FREQ_SCAN_EN)
2177:Generated_Source\PSoC4/CapSense_Sensing.c ****     /*******************************************************************************
2178:Generated_Source\PSoC4/CapSense_Sensing.c ****     * Function Name: CapSense_SsChangeImoFreq
2179:Generated_Source\PSoC4/CapSense_Sensing.c ****     ****************************************************************************//**
2180:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2181:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \brief
2182:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  This function changes the IMO frequency.
2183:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2184:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \details
2185:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  The IMO frequency can have three offsets: 0%, -5% and +5%. The frequency
2186:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  trims are contained in the CapSense_immunity[value] array for each
2187:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  frequency channel.
2188:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2189:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \param value The frequency channel ID.
2190:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2191:Generated_Source\PSoC4/CapSense_Sensing.c ****     *******************************************************************************/
2192:Generated_Source\PSoC4/CapSense_Sensing.c ****     void CapSense_SsChangeImoFreq(uint32 value)
2193:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
2194:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32(CY_SYS_CLK_IMO_TRIM1_PTR, CapSense_immunity[value]);
2195:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
2196:Generated_Source\PSoC4/CapSense_Sensing.c **** 
ARM GAS  C:\Users\mstai\AppData\Local\Temp\ccHdifRP.s 			page 40


2197:Generated_Source\PSoC4/CapSense_Sensing.c ****     /*******************************************************************************
2198:Generated_Source\PSoC4/CapSense_Sensing.c ****     * Function Name: CapSense_SsChangeClkFreq
2199:Generated_Source\PSoC4/CapSense_Sensing.c ****     ****************************************************************************//**
2200:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2201:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \brief
2202:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  This function changes the sensor clock frequency by configuring
2203:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  the corresponding divider.
2204:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2205:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \details
2206:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  This function changes the sensor clock frequency by configuring
2207:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  the corresponding divider.
2208:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2209:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \param chId
2210:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  The frequency channel ID.
2211:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2212:Generated_Source\PSoC4/CapSense_Sensing.c ****     *******************************************************************************/
2213:Generated_Source\PSoC4/CapSense_Sensing.c ****     void CapSense_SsChangeClkFreq(uint32 chId)
2214:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
2215:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint32 snsClkDivider;
2216:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint32 freqOffset1 = 0u;
2217:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint32 freqOffset2 = 0u;
2218:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2219:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (0u != CapSense_TOTAL_CSD_WIDGETS)
2220:Generated_Source\PSoC4/CapSense_Sensing.c ****             #if (CapSense_ENABLE == CapSense_CSDV2)
2221:Generated_Source\PSoC4/CapSense_Sensing.c ****                 uint32 conversionsNum;
2222:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif /* (CapSense_ENABLE == CapSense_CSDV2) */
2223:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2224:Generated_Source\PSoC4/CapSense_Sensing.c ****             #if((CapSense_CLK_SOURCE_PRS8  == CapSense_CSD_SNS_CLK_SOURCE) ||\
2225:Generated_Source\PSoC4/CapSense_Sensing.c ****                 (CapSense_CLK_SOURCE_PRS12 == CapSense_CSD_SNS_CLK_SOURCE) ||\
2226:Generated_Source\PSoC4/CapSense_Sensing.c ****                 (CapSense_CLK_SOURCE_PRSAUTO == CapSense_CSD_SNS_CLK_SOURCE))
2227:Generated_Source\PSoC4/CapSense_Sensing.c ****                 uint32 snsClkSrc;
2228:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif
2229:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif
2230:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2231:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if ((0u != CapSense_TOTAL_CSD_WIDGETS) || \
2232:Generated_Source\PSoC4/CapSense_Sensing.c ****              ((CapSense_DISABLE == CapSense_CSX_COMMON_TX_CLK_EN) && (0u != CapSense_TOTAL_CSX_WIDG
2233:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_FLASH_WD_STRUCT const *ptrFlashWdgt = &CapSense_dsFlash.wdgtArray[CapSense_wid
2234:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_RAM_WD_BASE_STRUCT const *ptrWdgt = (CapSense_RAM_WD_BASE_STRUCT *)ptrFlashWdg
2235:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif
2236:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2237:Generated_Source\PSoC4/CapSense_Sensing.c ****         switch(CapSense_GET_SENSE_METHOD(&CapSense_dsFlash.wdgtArray[CapSense_widgetIndex]))
2238:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
2239:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (0u != CapSense_TOTAL_CSD_WIDGETS)
2240:Generated_Source\PSoC4/CapSense_Sensing.c ****             case CapSense_SENSE_METHOD_CSD_E:
2241:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Get sensor clock divider value */
2242:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #if (CapSense_ENABLE == CapSense_CSD_COMMON_SNS_CLK_EN)
2243:Generated_Source\PSoC4/CapSense_Sensing.c ****                     snsClkDivider = CapSense_dsRam.snsCsdClk;
2244:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #else /* (CapSense_ENABLE == CapSense_CSD_COMMON_SNS_CLK_EN) */
2245:Generated_Source\PSoC4/CapSense_Sensing.c ****                     #if (CapSense_CSD_MATRIX_WIDGET_EN || CapSense_CSD_TOUCHPAD_WIDGET_EN)
2246:Generated_Source\PSoC4/CapSense_Sensing.c ****                         /* Get SnsClck divider for rows or columns */
2247:Generated_Source\PSoC4/CapSense_Sensing.c ****                         if (CapSense_dsFlash.wdgtArray[CapSense_widgetIndex].numCols <= CapSense_se
2248:Generated_Source\PSoC4/CapSense_Sensing.c ****                         {
2249:Generated_Source\PSoC4/CapSense_Sensing.c ****                             snsClkDivider = ptrWdgt->rowSnsClk;
2250:Generated_Source\PSoC4/CapSense_Sensing.c ****                         }
2251:Generated_Source\PSoC4/CapSense_Sensing.c ****                         else
2252:Generated_Source\PSoC4/CapSense_Sensing.c ****                         {
2253:Generated_Source\PSoC4/CapSense_Sensing.c ****                             snsClkDivider = ptrWdgt->snsClk;
ARM GAS  C:\Users\mstai\AppData\Local\Temp\ccHdifRP.s 			page 41


2254:Generated_Source\PSoC4/CapSense_Sensing.c ****                         }
2255:Generated_Source\PSoC4/CapSense_Sensing.c ****                     #else
2256:Generated_Source\PSoC4/CapSense_Sensing.c ****                         snsClkDivider = ptrWdgt->snsClk;
2257:Generated_Source\PSoC4/CapSense_Sensing.c ****                     #endif /* (CapSense_CSD_MATRIX_WIDGET_EN || CapSense_CSD_TOUCHPAD_WIDGET_EN) */
2258:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #endif /* (CapSense_ENABLE == CapSense_CSD_COMMON_SNS_CLK_EN) */
2259:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2260:Generated_Source\PSoC4/CapSense_Sensing.c ****                 freqOffset1 = CapSense_CSD_MFS_DIVIDER_OFFSET_F1;
2261:Generated_Source\PSoC4/CapSense_Sensing.c ****                 freqOffset2 = CapSense_CSD_MFS_DIVIDER_OFFSET_F2;
2262:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2263:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #if((CapSense_CLK_SOURCE_PRS8  == CapSense_CSD_SNS_CLK_SOURCE) ||\
2264:Generated_Source\PSoC4/CapSense_Sensing.c ****                     (CapSense_CLK_SOURCE_PRS12 == CapSense_CSD_SNS_CLK_SOURCE) ||\
2265:Generated_Source\PSoC4/CapSense_Sensing.c ****                     (CapSense_CLK_SOURCE_PRSAUTO == CapSense_CSD_SNS_CLK_SOURCE))
2266:Generated_Source\PSoC4/CapSense_Sensing.c ****                     /* Get sense clk source */
2267:Generated_Source\PSoC4/CapSense_Sensing.c ****                     #if (CapSense_CSD_MATRIX_WIDGET_EN || CapSense_CSD_TOUCHPAD_WIDGET_EN)
2268:Generated_Source\PSoC4/CapSense_Sensing.c ****                         /* Get SnsClc Source for rows or columns */
2269:Generated_Source\PSoC4/CapSense_Sensing.c ****                         if (CapSense_dsFlash.wdgtArray[CapSense_widgetIndex].numCols <= CapSense_se
2270:Generated_Source\PSoC4/CapSense_Sensing.c ****                         {
2271:Generated_Source\PSoC4/CapSense_Sensing.c ****                             snsClkSrc = (uint32)ptrWdgt->rowSnsClkSource;
2272:Generated_Source\PSoC4/CapSense_Sensing.c ****                         }
2273:Generated_Source\PSoC4/CapSense_Sensing.c ****                         else
2274:Generated_Source\PSoC4/CapSense_Sensing.c ****                         {
2275:Generated_Source\PSoC4/CapSense_Sensing.c ****                             snsClkSrc = (uint32)ptrWdgt->snsClkSource;
2276:Generated_Source\PSoC4/CapSense_Sensing.c ****                         }
2277:Generated_Source\PSoC4/CapSense_Sensing.c ****                     #else
2278:Generated_Source\PSoC4/CapSense_Sensing.c ****                         snsClkSrc = (uint32)ptrWdgt->snsClkSource;
2279:Generated_Source\PSoC4/CapSense_Sensing.c ****                     #endif /* (CapSense_CSD_MATRIX_WIDGET_EN || CapSense_CSD_TOUCHPAD_WIDGET_EN) */
2280:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2281:Generated_Source\PSoC4/CapSense_Sensing.c ****                     switch (snsClkSrc)
2282:Generated_Source\PSoC4/CapSense_Sensing.c ****                     {
2283:Generated_Source\PSoC4/CapSense_Sensing.c ****                     case CapSense_CLK_SOURCE_PRS8:
2284:Generated_Source\PSoC4/CapSense_Sensing.c ****                     case CapSense_CLK_SOURCE_PRS12:
2285:Generated_Source\PSoC4/CapSense_Sensing.c ****                         /* Multiply by 2 for PRS8/PRS12 mode */
2286:Generated_Source\PSoC4/CapSense_Sensing.c ****                         freqOffset1 <<= 1u;
2287:Generated_Source\PSoC4/CapSense_Sensing.c ****                         freqOffset2 <<= 1u;
2288:Generated_Source\PSoC4/CapSense_Sensing.c ****                         break;
2289:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2290:Generated_Source\PSoC4/CapSense_Sensing.c ****                     default:
2291:Generated_Source\PSoC4/CapSense_Sensing.c ****                         break;
2292:Generated_Source\PSoC4/CapSense_Sensing.c ****                     }
2293:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #endif
2294:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2295:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Change the divider based on the chId */
2296:Generated_Source\PSoC4/CapSense_Sensing.c ****                 switch (chId)
2297:Generated_Source\PSoC4/CapSense_Sensing.c ****                 {
2298:Generated_Source\PSoC4/CapSense_Sensing.c ****                     case CapSense_FREQ_CHANNEL_1:
2299:Generated_Source\PSoC4/CapSense_Sensing.c ****                     {
2300:Generated_Source\PSoC4/CapSense_Sensing.c ****                         snsClkDivider += freqOffset1;
2301:Generated_Source\PSoC4/CapSense_Sensing.c ****                         break;
2302:Generated_Source\PSoC4/CapSense_Sensing.c ****                     }
2303:Generated_Source\PSoC4/CapSense_Sensing.c ****                     case CapSense_FREQ_CHANNEL_2:
2304:Generated_Source\PSoC4/CapSense_Sensing.c ****                     {
2305:Generated_Source\PSoC4/CapSense_Sensing.c ****                         snsClkDivider += freqOffset2;
2306:Generated_Source\PSoC4/CapSense_Sensing.c ****                         break;
2307:Generated_Source\PSoC4/CapSense_Sensing.c ****                     }
2308:Generated_Source\PSoC4/CapSense_Sensing.c ****                     default:
2309:Generated_Source\PSoC4/CapSense_Sensing.c ****                     {
2310:Generated_Source\PSoC4/CapSense_Sensing.c ****                         break;
ARM GAS  C:\Users\mstai\AppData\Local\Temp\ccHdifRP.s 			page 42


2311:Generated_Source\PSoC4/CapSense_Sensing.c ****                     }
2312:Generated_Source\PSoC4/CapSense_Sensing.c ****                 }
2313:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2314:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #if (CapSense_ENABLE == CapSense_CSDV2)
2315:Generated_Source\PSoC4/CapSense_Sensing.c ****                     /* Set Number Of Conversions based on scanning resolution */
2316:Generated_Source\PSoC4/CapSense_Sensing.c ****                     conversionsNum = CapSense_SsCSDGetNumberOfConversions(snsClkDivider, (uint32)pt
2317:Generated_Source\PSoC4/CapSense_Sensing.c ****                     CY_SET_REG32(CapSense_SEQ_NORM_CNT_PTR, (conversionsNum & CapSense_SEQ_NORM_CNT
2318:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #endif /* (CapSense_ENABLE == CapSense_CSDV2) */
2319:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2320:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #if((CapSense_CLK_SOURCE_PRS8  == CapSense_CSD_SNS_CLK_SOURCE) ||\
2321:Generated_Source\PSoC4/CapSense_Sensing.c ****                     (CapSense_CLK_SOURCE_PRS12 == CapSense_CSD_SNS_CLK_SOURCE) ||\
2322:Generated_Source\PSoC4/CapSense_Sensing.c ****                     (CapSense_CLK_SOURCE_PRSAUTO == CapSense_CSD_SNS_CLK_SOURCE))
2323:Generated_Source\PSoC4/CapSense_Sensing.c ****                     switch (snsClkSrc)
2324:Generated_Source\PSoC4/CapSense_Sensing.c ****                     {
2325:Generated_Source\PSoC4/CapSense_Sensing.c ****                     case CapSense_CLK_SOURCE_PRS8:
2326:Generated_Source\PSoC4/CapSense_Sensing.c ****                     case CapSense_CLK_SOURCE_PRS12:
2327:Generated_Source\PSoC4/CapSense_Sensing.c ****                         /* Divide by 2 for PRS8/PRS12 mode */
2328:Generated_Source\PSoC4/CapSense_Sensing.c ****                         snsClkDivider >>= 1;
2329:Generated_Source\PSoC4/CapSense_Sensing.c ****                         if (snsClkDivider == 0u)
2330:Generated_Source\PSoC4/CapSense_Sensing.c ****                         {
2331:Generated_Source\PSoC4/CapSense_Sensing.c ****                             snsClkDivider = 1u;
2332:Generated_Source\PSoC4/CapSense_Sensing.c ****                         }
2333:Generated_Source\PSoC4/CapSense_Sensing.c ****                         break;
2334:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2335:Generated_Source\PSoC4/CapSense_Sensing.c ****                     default:
2336:Generated_Source\PSoC4/CapSense_Sensing.c ****                         break;
2337:Generated_Source\PSoC4/CapSense_Sensing.c ****                     }
2338:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #endif
2339:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2340:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Configure the new divider */
2341:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_SsSetSnsClockDivider(snsClkDivider);
2342:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2343:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
2344:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif /* #if (0u != CapSense_TOTAL_CSD_WIDGETS) */
2345:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2346:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (0u != CapSense_TOTAL_CSX_WIDGETS)
2347:Generated_Source\PSoC4/CapSense_Sensing.c ****             case CapSense_SENSE_METHOD_CSX_E:
2348:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #if (CapSense_ENABLE == CapSense_CSX_COMMON_TX_CLK_EN)
2349:Generated_Source\PSoC4/CapSense_Sensing.c ****                     snsClkDivider = CapSense_dsRam.snsCsxClk;
2350:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #else /* (CapSense_ENABLE == CapSense_CSX_COMMON_TX_CLK_EN) */
2351:Generated_Source\PSoC4/CapSense_Sensing.c ****                     snsClkDivider = ptrWdgt->snsClk;
2352:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #endif /* (CapSense_ENABLE == CapSense_CSX_COMMON_TX_CLK_EN) */
2353:Generated_Source\PSoC4/CapSense_Sensing.c ****                 freqOffset1 = CapSense_CSX_MFS_DIVIDER_OFFSET_F1;
2354:Generated_Source\PSoC4/CapSense_Sensing.c ****                 freqOffset2 = CapSense_CSX_MFS_DIVIDER_OFFSET_F2;
2355:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2356:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Change the divider based on the chId */
2357:Generated_Source\PSoC4/CapSense_Sensing.c ****                 switch (chId)
2358:Generated_Source\PSoC4/CapSense_Sensing.c ****                 {
2359:Generated_Source\PSoC4/CapSense_Sensing.c ****                     case CapSense_FREQ_CHANNEL_1:
2360:Generated_Source\PSoC4/CapSense_Sensing.c ****                     {
2361:Generated_Source\PSoC4/CapSense_Sensing.c ****                         snsClkDivider += freqOffset1;
2362:Generated_Source\PSoC4/CapSense_Sensing.c ****                         break;
2363:Generated_Source\PSoC4/CapSense_Sensing.c ****                     }
2364:Generated_Source\PSoC4/CapSense_Sensing.c ****                     case CapSense_FREQ_CHANNEL_2:
2365:Generated_Source\PSoC4/CapSense_Sensing.c ****                     {
2366:Generated_Source\PSoC4/CapSense_Sensing.c ****                         snsClkDivider += freqOffset2;
2367:Generated_Source\PSoC4/CapSense_Sensing.c ****                         break;
ARM GAS  C:\Users\mstai\AppData\Local\Temp\ccHdifRP.s 			page 43


2368:Generated_Source\PSoC4/CapSense_Sensing.c ****                     }
2369:Generated_Source\PSoC4/CapSense_Sensing.c ****                     default:
2370:Generated_Source\PSoC4/CapSense_Sensing.c ****                     {
2371:Generated_Source\PSoC4/CapSense_Sensing.c ****                         break;
2372:Generated_Source\PSoC4/CapSense_Sensing.c ****                     }
2373:Generated_Source\PSoC4/CapSense_Sensing.c ****                 }
2374:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2375:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Configure the new divider */
2376:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_SsSetSnsClockDivider(snsClkDivider);
2377:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2378:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
2379:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif /* #if (0u != CapSense_TOTAL_CSX_WIDGETS) */
2380:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2381:Generated_Source\PSoC4/CapSense_Sensing.c ****         default:
2382:Generated_Source\PSoC4/CapSense_Sensing.c ****             CYASSERT(0);
2383:Generated_Source\PSoC4/CapSense_Sensing.c ****             break;
2384:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
2385:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
2386:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif  /* (CapSense_ENABLE == CapSense_MULTI_FREQ_SCAN_EN) */
2387:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2388:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2389:Generated_Source\PSoC4/CapSense_Sensing.c **** #if((CapSense_ENABLE == CapSense_CSD_EN) || \
2390:Generated_Source\PSoC4/CapSense_Sensing.c ****     ((CapSense_ENABLE == CapSense_CSX_EN) && \
2391:Generated_Source\PSoC4/CapSense_Sensing.c ****      (CapSense_ENABLE == CapSense_CSDV2)))
2392:Generated_Source\PSoC4/CapSense_Sensing.c **** /*******************************************************************************
2393:Generated_Source\PSoC4/CapSense_Sensing.c **** * Function Name: CapSense_SsInitializeSourceSenseClk
2394:Generated_Source\PSoC4/CapSense_Sensing.c **** ****************************************************************************//**
2395:Generated_Source\PSoC4/CapSense_Sensing.c **** *
2396:Generated_Source\PSoC4/CapSense_Sensing.c **** * \brief
2397:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Sets a source for Sense Clk for all CSD widgets.
2398:Generated_Source\PSoC4/CapSense_Sensing.c **** *
2399:Generated_Source\PSoC4/CapSense_Sensing.c **** * \details
2400:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Updates snsClkSource and rowSnsClkSource with a source for the sense Clk.
2401:Generated_Source\PSoC4/CapSense_Sensing.c **** *  for all CSD widgets.
2402:Generated_Source\PSoC4/CapSense_Sensing.c **** *
2403:Generated_Source\PSoC4/CapSense_Sensing.c **** *******************************************************************************/
2404:Generated_Source\PSoC4/CapSense_Sensing.c **** void CapSense_SsInitializeSourceSenseClk(void)
2405:Generated_Source\PSoC4/CapSense_Sensing.c **** {
2406:Generated_Source\PSoC4/CapSense_Sensing.c ****     uint32 wdgtIndex;
2407:Generated_Source\PSoC4/CapSense_Sensing.c ****     CapSense_RAM_WD_BASE_STRUCT *ptrWdgt;
2408:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2409:Generated_Source\PSoC4/CapSense_Sensing.c ****     for (wdgtIndex = 0u; wdgtIndex < CapSense_TOTAL_WIDGETS; wdgtIndex++)
2410:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
2411:Generated_Source\PSoC4/CapSense_Sensing.c ****         ptrWdgt = (CapSense_RAM_WD_BASE_STRUCT *)CapSense_dsFlash.wdgtArray[wdgtIndex].ptr2WdgtRam;
2412:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2413:Generated_Source\PSoC4/CapSense_Sensing.c ****         switch (CapSense_GET_SENSE_METHOD(&CapSense_dsFlash.wdgtArray[wdgtIndex]))
2414:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
2415:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_ENABLE == CapSense_CSD_EN)
2416:Generated_Source\PSoC4/CapSense_Sensing.c ****             case CapSense_SENSE_METHOD_CSD_E:
2417:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_SsSetWidgetSenseClkSrc(wdgtIndex, ptrWdgt);
2418:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
2419:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif /* (CapSense_ENABLE == CapSense_CSD_EN) */
2420:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if ((CapSense_ENABLE == CapSense_CSX_EN) && (CapSense_ENABLE == CapSense_CSDV2))
2421:Generated_Source\PSoC4/CapSense_Sensing.c ****             case CapSense_SENSE_METHOD_CSX_E:
2422:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_SsSetWidgetTxClkSrc(wdgtIndex, ptrWdgt);
2423:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
2424:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif /* (((CapSense_ENABLE == CapSense_CSX_EN) || (CapSense_ENABLE == CapSense_ISX_EN)) &
ARM GAS  C:\Users\mstai\AppData\Local\Temp\ccHdifRP.s 			page 44


2425:Generated_Source\PSoC4/CapSense_Sensing.c ****         default:
2426:Generated_Source\PSoC4/CapSense_Sensing.c ****             break;
2427:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
2428:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_ENABLE == CapSense_TST_WDGT_CRC_EN)
2429:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_DsUpdateWidgetCrc(wdgtIndex);
2430:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif /* (CapSense_ENABLE == CapSense_TST_WDGT_CRC_EN) */
2431:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
2432:Generated_Source\PSoC4/CapSense_Sensing.c **** }
2433:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* ((CapSense_ENABLE == CapSense_CSD_EN) || \
2434:Generated_Source\PSoC4/CapSense_Sensing.c ****            (((CapSense_ENABLE == CapSense_CSX_EN) || \
2435:Generated_Source\PSoC4/CapSense_Sensing.c ****            (CapSense_ENABLE == CapSense_ISX_EN)) && \
2436:Generated_Source\PSoC4/CapSense_Sensing.c ****            (CapSense_ENABLE == CapSense_CSDV2))) */
2437:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2438:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2439:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_ENABLE == CapSense_CSD_EN)
2440:Generated_Source\PSoC4/CapSense_Sensing.c ****     /*******************************************************************************
2441:Generated_Source\PSoC4/CapSense_Sensing.c ****     * Function Name: CapSense_SsSetWidgetSenseClkSrc
2442:Generated_Source\PSoC4/CapSense_Sensing.c ****     ****************************************************************************//**
2443:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2444:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \brief
2445:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  Sets a source for the sense clock for a widget.
2446:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2447:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \param wdgtIndex
2448:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  Specifies the ID of the widget.
2449:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \param ptrWdgt
2450:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  The pointer to the RAM_WD_BASE_STRUCT structure.
2451:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2452:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \details
2453:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  Updates snsClkSource and rowSnsClkSource with a source for the sense Clk for a
2454:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  widget.
2455:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2456:Generated_Source\PSoC4/CapSense_Sensing.c ****     *******************************************************************************/
2457:Generated_Source\PSoC4/CapSense_Sensing.c ****     static void CapSense_SsSetWidgetSenseClkSrc(uint32 wdgtIndex, CapSense_RAM_WD_BASE_STRUCT * ptr
2458:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
2459:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint8 lfsrSize;
2460:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint8 lfsrScale;
2461:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2462:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if(CapSense_CLK_SOURCE_PRSAUTO == CapSense_CSD_SNS_CLK_SOURCE)
2463:Generated_Source\PSoC4/CapSense_Sensing.c ****             #if(CapSense_ENABLE == CapSense_CSDV2)
2464:Generated_Source\PSoC4/CapSense_Sensing.c ****                 uint32 conversionsNum;
2465:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif /* (CapSense_ENABLE == CapSense_CSDV2) */
2466:Generated_Source\PSoC4/CapSense_Sensing.c ****             uint32 snsClkDivider;
2467:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif /* (CapSense_CLK_SOURCE_PRSAUTO == CapSense_CSD_SNS_CLK_SOURCE) */
2468:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2469:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if(CapSense_CLK_SOURCE_PRSAUTO == CapSense_CSD_SNS_CLK_SOURCE)
2470:Generated_Source\PSoC4/CapSense_Sensing.c ****             snsClkDivider = CapSense_SsCSDGetColSnsClkDivider(wdgtIndex);
2471:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2472:Generated_Source\PSoC4/CapSense_Sensing.c ****             #if(CapSense_ENABLE == CapSense_CSDV2)
2473:Generated_Source\PSoC4/CapSense_Sensing.c ****                 conversionsNum = CapSense_SsCSDGetNumberOfConversions(snsClkDivider, (uint32)ptrWdg
2474:Generated_Source\PSoC4/CapSense_Sensing.c ****                                                                                              CapSen
2475:Generated_Source\PSoC4/CapSense_Sensing.c ****                 lfsrSize = CapSense_SsCalcLfsrSize(snsClkDivider, conversionsNum);
2476:Generated_Source\PSoC4/CapSense_Sensing.c ****                 if (CapSense_CLK_SOURCE_DIRECT == lfsrSize)
2477:Generated_Source\PSoC4/CapSense_Sensing.c ****                 {
2478:Generated_Source\PSoC4/CapSense_Sensing.c ****                     /*
2479:Generated_Source\PSoC4/CapSense_Sensing.c ****                     * Multiplying of the snsClkDivider by 2 is needed to pass the
2480:Generated_Source\PSoC4/CapSense_Sensing.c ****                     * average PRS frequency through the argument.
2481:Generated_Source\PSoC4/CapSense_Sensing.c ****                     */
ARM GAS  C:\Users\mstai\AppData\Local\Temp\ccHdifRP.s 			page 45


2482:Generated_Source\PSoC4/CapSense_Sensing.c ****                     lfsrSize = CapSense_SsCSDCalcPrsSize(snsClkDivider << 1uL, (uint32)ptrWdgt->res
2483:Generated_Source\PSoC4/CapSense_Sensing.c ****                 }
2484:Generated_Source\PSoC4/CapSense_Sensing.c ****                 lfsrScale = CapSense_SsCalcLfsrScale(snsClkDivider, lfsrSize);
2485:Generated_Source\PSoC4/CapSense_Sensing.c ****             #else
2486:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /*
2487:Generated_Source\PSoC4/CapSense_Sensing.c ****                 * Multiplying of the snsClkDivider by 2 is needed to pass the
2488:Generated_Source\PSoC4/CapSense_Sensing.c ****                 * average PRS frequency through the argument.
2489:Generated_Source\PSoC4/CapSense_Sensing.c ****                 */
2490:Generated_Source\PSoC4/CapSense_Sensing.c ****                 lfsrSize = CapSense_SsCSDCalcPrsSize(snsClkDivider << 1uL, (uint32)ptrWdgt->resolut
2491:Generated_Source\PSoC4/CapSense_Sensing.c ****                 lfsrScale = 0u;
2492:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif /* (CapSense_ENABLE == CapSense_CSDV2) */
2493:Generated_Source\PSoC4/CapSense_Sensing.c ****         #else
2494:Generated_Source\PSoC4/CapSense_Sensing.c ****             lfsrSize = (uint8)CapSense_DEFAULT_MODULATION_MODE;
2495:Generated_Source\PSoC4/CapSense_Sensing.c ****             lfsrScale = 0u;
2496:Generated_Source\PSoC4/CapSense_Sensing.c ****             (void)wdgtIndex; /* This parameter is unused in such configurations */
2497:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif /* (CapSense_CLK_SOURCE_PRSAUTO == CapSense_CSD_SNS_CLK_SOURCE) */
2498:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2499:Generated_Source\PSoC4/CapSense_Sensing.c ****         ptrWdgt->snsClkSource = lfsrSize | (uint8)(lfsrScale << CapSense_CLK_SOURCE_LFSR_SCALE_OFFS
2500:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2501:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_CSD_MATRIX_WIDGET_EN || CapSense_CSD_TOUCHPAD_WIDGET_EN)
2502:Generated_Source\PSoC4/CapSense_Sensing.c ****             if ((CapSense_WD_TOUCHPAD_E == (CapSense_WD_TYPE_ENUM)CapSense_dsFlash.wdgtArray[wdgtIn
2503:Generated_Source\PSoC4/CapSense_Sensing.c ****                 (CapSense_WD_MATRIX_BUTTON_E == (CapSense_WD_TYPE_ENUM)CapSense_dsFlash.wdgtArray[w
2504:Generated_Source\PSoC4/CapSense_Sensing.c ****             {
2505:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #if(CapSense_CLK_SOURCE_PRSAUTO == CapSense_CSD_SNS_CLK_SOURCE)
2506:Generated_Source\PSoC4/CapSense_Sensing.c ****                     snsClkDivider = CapSense_SsCSDGetRowSnsClkDivider(wdgtIndex);
2507:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2508:Generated_Source\PSoC4/CapSense_Sensing.c ****                     #if(CapSense_ENABLE == CapSense_CSDV2)
2509:Generated_Source\PSoC4/CapSense_Sensing.c ****                         lfsrSize = CapSense_SsCalcLfsrSize(snsClkDivider, conversionsNum);
2510:Generated_Source\PSoC4/CapSense_Sensing.c ****                         if (CapSense_CLK_SOURCE_DIRECT == lfsrSize)
2511:Generated_Source\PSoC4/CapSense_Sensing.c ****                         {
2512:Generated_Source\PSoC4/CapSense_Sensing.c ****                             /*
2513:Generated_Source\PSoC4/CapSense_Sensing.c ****                             * Multiplying of the snsClkDivider by 2 is needed to pass the
2514:Generated_Source\PSoC4/CapSense_Sensing.c ****                             * average PRS frequency through the argument.
2515:Generated_Source\PSoC4/CapSense_Sensing.c ****                             */
2516:Generated_Source\PSoC4/CapSense_Sensing.c ****                             lfsrSize = CapSense_SsCSDCalcPrsSize(snsClkDivider << 1uL, (uint32)ptrW
2517:Generated_Source\PSoC4/CapSense_Sensing.c ****                         }
2518:Generated_Source\PSoC4/CapSense_Sensing.c ****                         lfsrScale = CapSense_SsCalcLfsrScale(snsClkDivider, lfsrSize);
2519:Generated_Source\PSoC4/CapSense_Sensing.c ****                     #else
2520:Generated_Source\PSoC4/CapSense_Sensing.c ****                         /*
2521:Generated_Source\PSoC4/CapSense_Sensing.c ****                         * Multiplying of the snsClkDivider by 2 is needed to pass the
2522:Generated_Source\PSoC4/CapSense_Sensing.c ****                         * average PRS frequency through the argument.
2523:Generated_Source\PSoC4/CapSense_Sensing.c ****                         */
2524:Generated_Source\PSoC4/CapSense_Sensing.c ****                         lfsrSize = CapSense_SsCSDCalcPrsSize(snsClkDivider << 1uL, (uint32)ptrWdgt-
2525:Generated_Source\PSoC4/CapSense_Sensing.c ****                         lfsrScale = 0u;
2526:Generated_Source\PSoC4/CapSense_Sensing.c ****                     #endif /* (CapSense_ENABLE == CapSense_CSDV2) */
2527:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #else
2528:Generated_Source\PSoC4/CapSense_Sensing.c ****                     lfsrSize = (uint8)CapSense_DEFAULT_MODULATION_MODE;
2529:Generated_Source\PSoC4/CapSense_Sensing.c ****                     lfsrScale = 0u;
2530:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #endif /* (CapSense_CLK_SOURCE_PRSAUTO == CapSense_CSD_SNS_CLK_SOURCE) */
2531:Generated_Source\PSoC4/CapSense_Sensing.c ****                 ptrWdgt->rowSnsClkSource = lfsrSize | (uint8)(lfsrScale << CapSense_CLK_SOURCE_LFSR
2532:Generated_Source\PSoC4/CapSense_Sensing.c ****             }
2533:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif /* (CapSense_CSD_MATRIX_WIDGET_EN || CapSense_CSD_TOUCHPAD_WIDGET_EN) */
2534:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
2535:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* (CapSense_ENABLE == CapSense_CSD_EN) */
2536:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2537:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2538:Generated_Source\PSoC4/CapSense_Sensing.c **** #if ((CapSense_ENABLE == CapSense_CSX_EN) && (CapSense_ENABLE == CapSense_CSDV2))
ARM GAS  C:\Users\mstai\AppData\Local\Temp\ccHdifRP.s 			page 46


2539:Generated_Source\PSoC4/CapSense_Sensing.c ****     /*******************************************************************************
2540:Generated_Source\PSoC4/CapSense_Sensing.c ****     * Function Name: CapSense_SsSetWidgetTxClkSrc
2541:Generated_Source\PSoC4/CapSense_Sensing.c ****     ****************************************************************************//**
2542:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2543:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \brief
2544:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  Sets a source for the Tx clock for a widget.
2545:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2546:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \param wdgtIndex
2547:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  Specifies the ID of the widget.
2548:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \param ptrWdgt
2549:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  The pointer to the RAM_WD_BASE_STRUCT structure.
2550:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2551:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \details
2552:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  Updates snsClkSource with a source for Tx Clk for a widget.
2553:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2554:Generated_Source\PSoC4/CapSense_Sensing.c ****     *******************************************************************************/
2555:Generated_Source\PSoC4/CapSense_Sensing.c ****     static void CapSense_SsSetWidgetTxClkSrc(uint32 wdgtIndex, CapSense_RAM_WD_BASE_STRUCT * ptrWdg
2556:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
2557:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint8 lfsrSize;
2558:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint8 lfsrScale;
2559:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2560:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if ((CapSense_CLK_SOURCE_PRSAUTO == CapSense_CSX_TX_CLK_SOURCE) && \
2561:Generated_Source\PSoC4/CapSense_Sensing.c ****              (CapSense_DISABLE == CapSense_CSX_SKIP_OVSMPL_SPECIFIC_NODES))
2562:Generated_Source\PSoC4/CapSense_Sensing.c ****             uint32 conversionsNum;
2563:Generated_Source\PSoC4/CapSense_Sensing.c ****             uint32 snsClkDivider;
2564:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif
2565:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2566:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if(CapSense_CLK_SOURCE_PRSAUTO == CapSense_CSX_TX_CLK_SOURCE)
2567:Generated_Source\PSoC4/CapSense_Sensing.c ****             #if (CapSense_DISABLE == CapSense_CSX_SKIP_OVSMPL_SPECIFIC_NODES)
2568:Generated_Source\PSoC4/CapSense_Sensing.c ****                 conversionsNum = (uint32)ptrWdgt->resolution;
2569:Generated_Source\PSoC4/CapSense_Sensing.c ****                 snsClkDivider = CapSense_SsCSXGetTxClkDivider(wdgtIndex);
2570:Generated_Source\PSoC4/CapSense_Sensing.c ****                 lfsrSize = CapSense_SsCalcLfsrSize(snsClkDivider, conversionsNum);
2571:Generated_Source\PSoC4/CapSense_Sensing.c ****                 lfsrScale = CapSense_SsCalcLfsrScale(snsClkDivider, lfsrSize);
2572:Generated_Source\PSoC4/CapSense_Sensing.c ****             #else
2573:Generated_Source\PSoC4/CapSense_Sensing.c ****                 lfsrSize = (uint8)CapSense_CLK_SOURCE_DIRECT;
2574:Generated_Source\PSoC4/CapSense_Sensing.c ****                 lfsrScale = 0u;
2575:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Unused function argument */
2576:Generated_Source\PSoC4/CapSense_Sensing.c ****                 (void)wdgtIndex;
2577:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif /* (CapSense_ENABLE == CapSense_CSX_SKIP_OVSMPL_SPECIFIC_NODES) */
2578:Generated_Source\PSoC4/CapSense_Sensing.c ****         #else
2579:Generated_Source\PSoC4/CapSense_Sensing.c ****             lfsrSize = (uint8)CapSense_CSX_TX_CLK_SOURCE;
2580:Generated_Source\PSoC4/CapSense_Sensing.c ****             lfsrScale = 0u;
2581:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* Unused function argument */
2582:Generated_Source\PSoC4/CapSense_Sensing.c ****             (void)wdgtIndex;
2583:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif /* (CapSense_CLK_SOURCE_PRSAUTO == CapSense_CSX_TX_CLK_SOURCE) */
2584:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2585:Generated_Source\PSoC4/CapSense_Sensing.c ****         ptrWdgt->snsClkSource = lfsrSize | (uint8)(lfsrScale << CapSense_CLK_SOURCE_LFSR_SCALE_OFFS
2586:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
2587:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* ((CapSense_ENABLE == CapSense_CSX_EN) && (CapSense_ENABLE == CapSense_CSDV2)) */
2588:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2589:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2590:Generated_Source\PSoC4/CapSense_Sensing.c **** #if(((CapSense_ENABLE == CapSense_CSX_EN) && \
2591:Generated_Source\PSoC4/CapSense_Sensing.c ****      (CapSense_DISABLE == CapSense_CSX_SKIP_OVSMPL_SPECIFIC_NODES) && \
2592:Generated_Source\PSoC4/CapSense_Sensing.c ****      (CapSense_ENABLE == CapSense_CSDV2) && \
2593:Generated_Source\PSoC4/CapSense_Sensing.c ****      (CapSense_CLK_SOURCE_PRSAUTO == CapSense_CSX_TX_CLK_SOURCE)) ||\
2594:Generated_Source\PSoC4/CapSense_Sensing.c ****     ((CapSense_ENABLE == CapSense_CSD_EN) && \
2595:Generated_Source\PSoC4/CapSense_Sensing.c ****      (CapSense_ENABLE == CapSense_CSDV2) && \
ARM GAS  C:\Users\mstai\AppData\Local\Temp\ccHdifRP.s 			page 47


2596:Generated_Source\PSoC4/CapSense_Sensing.c ****      (CapSense_CLK_SOURCE_PRSAUTO == CapSense_CSD_SNS_CLK_SOURCE)))
2597:Generated_Source\PSoC4/CapSense_Sensing.c **** /*******************************************************************************
2598:Generated_Source\PSoC4/CapSense_Sensing.c **** * Function Name: CapSense_SsCalcLfsrSize
2599:Generated_Source\PSoC4/CapSense_Sensing.c **** ****************************************************************************//**
2600:Generated_Source\PSoC4/CapSense_Sensing.c **** *
2601:Generated_Source\PSoC4/CapSense_Sensing.c **** * \brief
2602:Generated_Source\PSoC4/CapSense_Sensing.c **** *  This is an internal function that finds a SSC polynomial size in the Auto mode.
2603:Generated_Source\PSoC4/CapSense_Sensing.c **** *
2604:Generated_Source\PSoC4/CapSense_Sensing.c **** * \details
2605:Generated_Source\PSoC4/CapSense_Sensing.c **** *  The SSC polynomial size in the auto mode is found based on the following
2606:Generated_Source\PSoC4/CapSense_Sensing.c **** *  requirements:
2607:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - an LFSR value should be selected so that the max clock dither is limited with +/-10%.
2608:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - at least one full spread spectrum polynomial should pass during the scan time.
2609:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - the value of the number of conversions should be an integer multiple of the
2610:Generated_Source\PSoC4/CapSense_Sensing.c **** *    repeat period of the programmed LFSR_SIZE.
2611:Generated_Source\PSoC4/CapSense_Sensing.c **** *
2612:Generated_Source\PSoC4/CapSense_Sensing.c **** * \param
2613:Generated_Source\PSoC4/CapSense_Sensing.c **** *  snsClkDivider The divider value for the sense clock.
2614:Generated_Source\PSoC4/CapSense_Sensing.c **** *  resolution The widget resolution.
2615:Generated_Source\PSoC4/CapSense_Sensing.c **** *
2616:Generated_Source\PSoC4/CapSense_Sensing.c **** * \return lfsrSize The LFSRSIZE value for the SENSE_PERIOD register.
2617:Generated_Source\PSoC4/CapSense_Sensing.c **** *
2618:Generated_Source\PSoC4/CapSense_Sensing.c **** *******************************************************************************/
2619:Generated_Source\PSoC4/CapSense_Sensing.c **** static uint8 CapSense_SsCalcLfsrSize(uint32 snsClkDivider, uint32 conversionsNum)
2620:Generated_Source\PSoC4/CapSense_Sensing.c **** {
  28              		.loc 1 2620 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              	.LVL0:
  33 0000 70B5     		push	{r4, r5, r6, lr}
  34              		.cfi_def_cfa_offset 16
  35              		.cfi_offset 4, -16
  36              		.cfi_offset 5, -12
  37              		.cfi_offset 6, -8
  38              		.cfi_offset 14, -4
  39 0002 0400     		movs	r4, r0
  40 0004 0D00     		movs	r5, r1
  41              	.LVL1:
2621:Generated_Source\PSoC4/CapSense_Sensing.c ****     uint8 lfsrSize = 0u;
2622:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2623:Generated_Source\PSoC4/CapSense_Sensing.c ****     /* Find LFSR value */
2624:Generated_Source\PSoC4/CapSense_Sensing.c ****     if((CapSense_SNSCLK_SSC4_THRESHOLD <= snsClkDivider) &&
  42              		.loc 1 2624 0
  43 0006 9F28     		cmp	r0, #159
  44 0008 08D9     		bls	.L2
  45              		.loc 1 2624 0 is_stmt 0 discriminator 1
  46 000a 1B4B     		ldr	r3, .L12
  47 000c 9942     		cmp	r1, r3
  48 000e 05D9     		bls	.L2
2625:Generated_Source\PSoC4/CapSense_Sensing.c ****        (CapSense_SNSCLK_SSC4_PERIOD <= conversionsNum) &&
2626:Generated_Source\PSoC4/CapSense_Sensing.c ****        (0uL == (conversionsNum % CapSense_SNSCLK_SSC4_PERIOD)))
  49              		.loc 1 2626 0 is_stmt 1
  50 0010 1A49     		ldr	r1, .L12+4
  51              	.LVL2:
  52 0012 2800     		movs	r0, r5
  53              	.LVL3:
ARM GAS  C:\Users\mstai\AppData\Local\Temp\ccHdifRP.s 			page 48


  54 0014 FFF7FEFF 		bl	__aeabi_uidivmod
  55              	.LVL4:
2625:Generated_Source\PSoC4/CapSense_Sensing.c ****        (CapSense_SNSCLK_SSC4_PERIOD <= conversionsNum) &&
  56              		.loc 1 2625 0
  57 0018 0029     		cmp	r1, #0
  58 001a 21D0     		beq	.L6
  59              	.L2:
2627:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
2628:Generated_Source\PSoC4/CapSense_Sensing.c ****         lfsrSize = CapSense_CLK_SOURCE_SSC4;
2629:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
2630:Generated_Source\PSoC4/CapSense_Sensing.c ****     else if((CapSense_SNSCLK_SSC3_THRESHOLD <= snsClkDivider) &&
  60              		.loc 1 2630 0
  61 001c 9F2C     		cmp	r4, #159
  62 001e 09D9     		bls	.L4
  63              		.loc 1 2630 0 is_stmt 0 discriminator 1
  64 0020 FF23     		movs	r3, #255
  65 0022 5B00     		lsls	r3, r3, #1
  66 0024 9D42     		cmp	r5, r3
  67 0026 05D9     		bls	.L4
2631:Generated_Source\PSoC4/CapSense_Sensing.c ****             (CapSense_SNSCLK_SSC3_PERIOD <= conversionsNum) &&
2632:Generated_Source\PSoC4/CapSense_Sensing.c ****             (0uL == (conversionsNum % CapSense_SNSCLK_SSC3_PERIOD)))
  68              		.loc 1 2632 0 is_stmt 1
  69 0028 1549     		ldr	r1, .L12+8
  70 002a 2800     		movs	r0, r5
  71 002c FFF7FEFF 		bl	__aeabi_uidivmod
  72              	.LVL5:
2631:Generated_Source\PSoC4/CapSense_Sensing.c ****             (CapSense_SNSCLK_SSC3_PERIOD <= conversionsNum) &&
  73              		.loc 1 2631 0
  74 0030 0029     		cmp	r1, #0
  75 0032 17D0     		beq	.L7
  76              	.L4:
2633:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
2634:Generated_Source\PSoC4/CapSense_Sensing.c ****         lfsrSize = CapSense_CLK_SOURCE_SSC3;
2635:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
2636:Generated_Source\PSoC4/CapSense_Sensing.c ****     else if((CapSense_SNSCLK_SSC2_THRESHOLD <= snsClkDivider) &&
  77              		.loc 1 2636 0
  78 0034 9F2C     		cmp	r4, #159
  79 0036 07D9     		bls	.L5
  80              		.loc 1 2636 0 is_stmt 0 discriminator 1
  81 0038 7E2D     		cmp	r5, #126
  82 003a 05D9     		bls	.L5
2637:Generated_Source\PSoC4/CapSense_Sensing.c ****             (CapSense_SNSCLK_SSC2_PERIOD <= conversionsNum) &&
2638:Generated_Source\PSoC4/CapSense_Sensing.c ****             (0uL == (conversionsNum % CapSense_SNSCLK_SSC2_PERIOD)))
  83              		.loc 1 2638 0 is_stmt 1
  84 003c 7F21     		movs	r1, #127
  85 003e 2800     		movs	r0, r5
  86 0040 FFF7FEFF 		bl	__aeabi_uidivmod
  87              	.LVL6:
2637:Generated_Source\PSoC4/CapSense_Sensing.c ****             (CapSense_SNSCLK_SSC2_PERIOD <= conversionsNum) &&
  88              		.loc 1 2637 0
  89 0044 0029     		cmp	r1, #0
  90 0046 0FD0     		beq	.L8
  91              	.L5:
2639:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
2640:Generated_Source\PSoC4/CapSense_Sensing.c ****         lfsrSize = CapSense_CLK_SOURCE_SSC2;
2641:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
2642:Generated_Source\PSoC4/CapSense_Sensing.c ****     else if((CapSense_SNSCLK_SSC1_THRESHOLD <= snsClkDivider) &&
ARM GAS  C:\Users\mstai\AppData\Local\Temp\ccHdifRP.s 			page 49


  92              		.loc 1 2642 0
  93 0048 9F2C     		cmp	r4, #159
  94 004a 0FD9     		bls	.L9
  95              		.loc 1 2642 0 is_stmt 0 discriminator 1
  96 004c 3E2D     		cmp	r5, #62
  97 004e 0FD9     		bls	.L10
2643:Generated_Source\PSoC4/CapSense_Sensing.c ****             (CapSense_SNSCLK_SSC1_PERIOD <= conversionsNum) &&
2644:Generated_Source\PSoC4/CapSense_Sensing.c ****             (0uL == (conversionsNum % CapSense_SNSCLK_SSC1_PERIOD)))
  98              		.loc 1 2644 0 is_stmt 1
  99 0050 3F21     		movs	r1, #63
 100 0052 2800     		movs	r0, r5
 101 0054 FFF7FEFF 		bl	__aeabi_uidivmod
 102              	.LVL7:
2643:Generated_Source\PSoC4/CapSense_Sensing.c ****             (CapSense_SNSCLK_SSC1_PERIOD <= conversionsNum) &&
 103              		.loc 1 2643 0
 104 0058 0029     		cmp	r1, #0
 105 005a 0BD0     		beq	.L11
2645:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
2646:Generated_Source\PSoC4/CapSense_Sensing.c ****         lfsrSize = CapSense_CLK_SOURCE_SSC1;
2647:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
2648:Generated_Source\PSoC4/CapSense_Sensing.c ****     else
2649:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
2650:Generated_Source\PSoC4/CapSense_Sensing.c ****         lfsrSize = (uint8)CapSense_CLK_SOURCE_DIRECT;
 106              		.loc 1 2650 0
 107 005c 0020     		movs	r0, #0
 108 005e 0AE0     		b	.L3
 109              	.L6:
2628:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 110              		.loc 1 2628 0
 111 0060 0420     		movs	r0, #4
 112 0062 08E0     		b	.L3
 113              	.L7:
2634:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 114              		.loc 1 2634 0
 115 0064 0320     		movs	r0, #3
 116 0066 06E0     		b	.L3
 117              	.L8:
2640:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 118              		.loc 1 2640 0
 119 0068 0220     		movs	r0, #2
 120 006a 04E0     		b	.L3
 121              	.L9:
 122              		.loc 1 2650 0
 123 006c 0020     		movs	r0, #0
 124 006e 02E0     		b	.L3
 125              	.L10:
 126 0070 0020     		movs	r0, #0
 127 0072 00E0     		b	.L3
 128              	.L11:
2646:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 129              		.loc 1 2646 0
 130 0074 0120     		movs	r0, #1
 131              	.L3:
 132              	.LVL8:
2651:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
2652:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2653:Generated_Source\PSoC4/CapSense_Sensing.c ****     return (lfsrSize);
ARM GAS  C:\Users\mstai\AppData\Local\Temp\ccHdifRP.s 			page 50


2654:Generated_Source\PSoC4/CapSense_Sensing.c **** }
 133              		.loc 1 2654 0
 134              		@ sp needed
 135              	.LVL9:
 136              	.LVL10:
 137 0076 70BD     		pop	{r4, r5, r6, pc}
 138              	.L13:
 139              		.align	2
 140              	.L12:
 141 0078 FE030000 		.word	1022
 142 007c FF030000 		.word	1023
 143 0080 FF010000 		.word	511
 144              		.cfi_endproc
 145              	.LFE21:
 146              		.size	CapSense_SsCalcLfsrSize, .-CapSense_SsCalcLfsrSize
 147              		.global	__aeabi_uidiv
 148              		.section	.text.CapSense_SsCalcLfsrScale,"ax",%progbits
 149              		.align	2
 150              		.code	16
 151              		.thumb_func
 152              		.type	CapSense_SsCalcLfsrScale, %function
 153              	CapSense_SsCalcLfsrScale:
 154              	.LFB22:
2655:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2656:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2657:Generated_Source\PSoC4/CapSense_Sensing.c **** /*******************************************************************************
2658:Generated_Source\PSoC4/CapSense_Sensing.c **** * Function Name: CapSense_SsCalcLfsrScale
2659:Generated_Source\PSoC4/CapSense_Sensing.c **** ****************************************************************************//**
2660:Generated_Source\PSoC4/CapSense_Sensing.c **** *
2661:Generated_Source\PSoC4/CapSense_Sensing.c **** * \brief
2662:Generated_Source\PSoC4/CapSense_Sensing.c **** *  This is an internal function that calculates the LFSR scale value.
2663:Generated_Source\PSoC4/CapSense_Sensing.c **** *
2664:Generated_Source\PSoC4/CapSense_Sensing.c **** * \details
2665:Generated_Source\PSoC4/CapSense_Sensing.c **** *  The LFSR scale value is used to increase the clock dither if the desired dither
2666:Generated_Source\PSoC4/CapSense_Sensing.c **** *  is wider than can be achieved with the current Sense Clock Divider and current LFSR
2667:Generated_Source\PSoC4/CapSense_Sensing.c **** *  period.
2668:Generated_Source\PSoC4/CapSense_Sensing.c **** *
2669:Generated_Source\PSoC4/CapSense_Sensing.c **** *  This returns the LFSR scale value needed to keep the clock dither in
2670:Generated_Source\PSoC4/CapSense_Sensing.c **** *  range +/-10%.
2671:Generated_Source\PSoC4/CapSense_Sensing.c **** *
2672:Generated_Source\PSoC4/CapSense_Sensing.c **** * \param
2673:Generated_Source\PSoC4/CapSense_Sensing.c **** *  snsClkDivider The divider value for the sense clock.
2674:Generated_Source\PSoC4/CapSense_Sensing.c **** *  lfsrSize The period of the LFSR sequence.
2675:Generated_Source\PSoC4/CapSense_Sensing.c **** *          For devices with CapSense_CSDV2_REF9P6UA_EN = TRUE, the
2676:Generated_Source\PSoC4/CapSense_Sensing.c **** *          mode parameters can take the following values:
2677:Generated_Source\PSoC4/CapSense_Sensing.c **** *          CapSense_CLK_SOURCE_DIRECT The spreadspectrum is not used.
2678:Generated_Source\PSoC4/CapSense_Sensing.c **** *          CapSense_CLK_SOURCE_SSC1   The length of LFSR sequence is 63 cycles.
2679:Generated_Source\PSoC4/CapSense_Sensing.c **** *          CapSense_CLK_SOURCE_SSC2   The length of LFSR sequence is 127 cycles.
2680:Generated_Source\PSoC4/CapSense_Sensing.c **** *          CapSense_CLK_SOURCE_SSC3   The length of LFSR sequence is 255 cycles.
2681:Generated_Source\PSoC4/CapSense_Sensing.c **** *          CapSense_CLK_SOURCE_SSC4   The length of LFSR sequence is 511 cycles.
2682:Generated_Source\PSoC4/CapSense_Sensing.c **** *
2683:Generated_Source\PSoC4/CapSense_Sensing.c **** *          For devices with CapSense_CSDV2_REF9P6UA_EN = TRUE, the
2684:Generated_Source\PSoC4/CapSense_Sensing.c **** *          mode parameters can take the following values:
2685:Generated_Source\PSoC4/CapSense_Sensing.c **** *          CapSense_CLK_SOURCE_DIRECT The spreadspectrum is not used.
2686:Generated_Source\PSoC4/CapSense_Sensing.c **** *          CapSense_CLK_SOURCE_SSC1   The length of LFSR sequence is 3 cycles.
2687:Generated_Source\PSoC4/CapSense_Sensing.c **** *          CapSense_CLK_SOURCE_SSC2   The length of LFSR sequence is 7 cycles.
2688:Generated_Source\PSoC4/CapSense_Sensing.c **** *          CapSense_CLK_SOURCE_SSC3   The length of LFSR sequence is 15 cycles.
ARM GAS  C:\Users\mstai\AppData\Local\Temp\ccHdifRP.s 			page 51


2689:Generated_Source\PSoC4/CapSense_Sensing.c **** *          CapSense_CLK_SOURCE_SSC4   The length of LFSR sequence is 31 cycles.
2690:Generated_Source\PSoC4/CapSense_Sensing.c **** *
2691:Generated_Source\PSoC4/CapSense_Sensing.c **** * \return
2692:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Returns the LFSR scale value needed to keep the clock dither in range +/-10%.
2693:Generated_Source\PSoC4/CapSense_Sensing.c **** *
2694:Generated_Source\PSoC4/CapSense_Sensing.c **** *******************************************************************************/
2695:Generated_Source\PSoC4/CapSense_Sensing.c **** static uint8 CapSense_SsCalcLfsrScale(uint32 snsClkDivider, uint8 lfsrSize)
2696:Generated_Source\PSoC4/CapSense_Sensing.c **** {
 155              		.loc 1 2696 0
 156              		.cfi_startproc
 157              		@ args = 0, pretend = 0, frame = 0
 158              		@ frame_needed = 0, uses_anonymous_args = 0
 159              	.LVL11:
 160 0000 10B5     		push	{r4, lr}
 161              		.cfi_def_cfa_offset 8
 162              		.cfi_offset 4, -8
 163              		.cfi_offset 14, -4
2697:Generated_Source\PSoC4/CapSense_Sensing.c ****     uint32 lfsrScale;
2698:Generated_Source\PSoC4/CapSense_Sensing.c ****     uint32 lfsrRange;
2699:Generated_Source\PSoC4/CapSense_Sensing.c ****     uint32 lfsrDither;
2700:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2701:Generated_Source\PSoC4/CapSense_Sensing.c ****     /* Initialize the lfsrSize variable with the LFSR Range for given Lfsr Size. */
2702:Generated_Source\PSoC4/CapSense_Sensing.c ****     switch(lfsrSize)
 164              		.loc 1 2702 0
 165 0002 4B1E     		subs	r3, r1, #1
 166 0004 DBB2     		uxtb	r3, r3
 167 0006 032B     		cmp	r3, #3
 168 0008 01D8     		bhi	.L20
2703:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
2704:Generated_Source\PSoC4/CapSense_Sensing.c ****         case CapSense_CLK_SOURCE_SSC1:
2705:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
2706:Generated_Source\PSoC4/CapSense_Sensing.c ****             lfsrRange = CapSense_SNSCLK_SSC1_RANGE;
 169              		.loc 1 2706 0
 170 000a 1023     		movs	r3, #16
 171 000c 00E0     		b	.L15
 172              	.L20:
2707:Generated_Source\PSoC4/CapSense_Sensing.c ****             break;
2708:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
2709:Generated_Source\PSoC4/CapSense_Sensing.c ****         case CapSense_CLK_SOURCE_SSC2:
2710:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
2711:Generated_Source\PSoC4/CapSense_Sensing.c ****             lfsrRange = CapSense_SNSCLK_SSC2_RANGE;
2712:Generated_Source\PSoC4/CapSense_Sensing.c ****             break;
2713:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
2714:Generated_Source\PSoC4/CapSense_Sensing.c ****         case CapSense_CLK_SOURCE_SSC3:
2715:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
2716:Generated_Source\PSoC4/CapSense_Sensing.c ****             lfsrRange = CapSense_SNSCLK_SSC3_RANGE;
2717:Generated_Source\PSoC4/CapSense_Sensing.c ****             break;
2718:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
2719:Generated_Source\PSoC4/CapSense_Sensing.c ****         case CapSense_CLK_SOURCE_SSC4:
2720:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
2721:Generated_Source\PSoC4/CapSense_Sensing.c ****             lfsrRange = CapSense_SNSCLK_SSC4_RANGE;
2722:Generated_Source\PSoC4/CapSense_Sensing.c ****             break;
2723:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
2724:Generated_Source\PSoC4/CapSense_Sensing.c ****         default:
2725:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
2726:Generated_Source\PSoC4/CapSense_Sensing.c ****             lfsrRange = 0u;
 173              		.loc 1 2726 0
ARM GAS  C:\Users\mstai\AppData\Local\Temp\ccHdifRP.s 			page 52


 174 000e 0023     		movs	r3, #0
 175              	.L15:
 176              	.LVL12:
2727:Generated_Source\PSoC4/CapSense_Sensing.c ****             break;
2728:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
2729:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
2730:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2731:Generated_Source\PSoC4/CapSense_Sensing.c ****     /* Calculate the LFSR Scale value that is required to keep the Clock dither
2732:Generated_Source\PSoC4/CapSense_Sensing.c ****      * as close as possible to the +/-10% limit of the used frequency.
2733:Generated_Source\PSoC4/CapSense_Sensing.c ****      */
2734:Generated_Source\PSoC4/CapSense_Sensing.c ****     if((lfsrSize != CapSense_CLK_SOURCE_DIRECT) && (0u != lfsrRange))
 177              		.loc 1 2734 0
 178 0010 0029     		cmp	r1, #0
 179 0012 11D0     		beq	.L21
 180              		.loc 1 2734 0 is_stmt 0 discriminator 1
 181 0014 002B     		cmp	r3, #0
 182 0016 11D0     		beq	.L22
2735:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
2736:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Calculate the LFSR Dither in percents. */
2737:Generated_Source\PSoC4/CapSense_Sensing.c ****         lfsrDither  = ((lfsrRange * 100uL) / snsClkDivider);
 183              		.loc 1 2737 0 is_stmt 1
 184 0018 6422     		movs	r2, #100
 185 001a 5343     		muls	r3, r2
 186              	.LVL13:
 187 001c 0100     		movs	r1, r0
 188              	.LVL14:
 189 001e 1800     		movs	r0, r3
 190              	.LVL15:
 191 0020 FFF7FEFF 		bl	__aeabi_uidiv
 192              	.LVL16:
2738:Generated_Source\PSoC4/CapSense_Sensing.c ****         lfsrScale = 0uL;
 193              		.loc 1 2738 0
 194 0024 0023     		movs	r3, #0
2739:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2740:Generated_Source\PSoC4/CapSense_Sensing.c ****         while(lfsrDither < CapSense_LFSR_DITHER_PERCENTAGE)
 195              		.loc 1 2740 0
 196 0026 01E0     		b	.L18
 197              	.LVL17:
 198              	.L19:
2741:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
2742:Generated_Source\PSoC4/CapSense_Sensing.c ****             lfsrScale++;
 199              		.loc 1 2742 0
 200 0028 0133     		adds	r3, r3, #1
 201              	.LVL18:
2743:Generated_Source\PSoC4/CapSense_Sensing.c ****             lfsrDither <<=1uL;
 202              		.loc 1 2743 0
 203 002a 4000     		lsls	r0, r0, #1
 204              	.LVL19:
 205              	.L18:
2740:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 206              		.loc 1 2740 0
 207 002c 0928     		cmp	r0, #9
 208 002e FBD9     		bls	.L19
2744:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
2745:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2746:Generated_Source\PSoC4/CapSense_Sensing.c ****         if(lfsrDither > CapSense_LFSR_DITHER_PERCENTAGE)
 209              		.loc 1 2746 0
ARM GAS  C:\Users\mstai\AppData\Local\Temp\ccHdifRP.s 			page 53


 210 0030 0A28     		cmp	r0, #10
 211 0032 04D9     		bls	.L17
2747:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
2748:Generated_Source\PSoC4/CapSense_Sensing.c ****             lfsrScale--;
 212              		.loc 1 2748 0
 213 0034 013B     		subs	r3, r3, #1
 214              	.LVL20:
 215 0036 02E0     		b	.L17
 216              	.LVL21:
 217              	.L21:
2749:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
2750:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
2751:Generated_Source\PSoC4/CapSense_Sensing.c ****     else
2752:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
2753:Generated_Source\PSoC4/CapSense_Sensing.c ****         lfsrScale = 0uL;
 218              		.loc 1 2753 0
 219 0038 0023     		movs	r3, #0
 220              	.LVL22:
 221 003a 00E0     		b	.L17
 222              	.LVL23:
 223              	.L22:
 224 003c 0023     		movs	r3, #0
 225              	.LVL24:
 226              	.L17:
2754:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
2755:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2756:Generated_Source\PSoC4/CapSense_Sensing.c ****     return ((uint8)lfsrScale);
 227              		.loc 1 2756 0
 228 003e D8B2     		uxtb	r0, r3
2757:Generated_Source\PSoC4/CapSense_Sensing.c **** }
 229              		.loc 1 2757 0
 230              		@ sp needed
 231 0040 10BD     		pop	{r4, pc}
 232              		.cfi_endproc
 233              	.LFE22:
 234              		.size	CapSense_SsCalcLfsrScale, .-CapSense_SsCalcLfsrScale
 235 0042 C046     		.section	.text.CapSense_IsBusy,"ax",%progbits
 236              		.align	2
 237              		.global	CapSense_IsBusy
 238              		.code	16
 239              		.thumb_func
 240              		.type	CapSense_IsBusy, %function
 241              	CapSense_IsBusy:
 242              	.LFB1:
 237:Generated_Source\PSoC4/CapSense_Sensing.c ****     return (CapSense_dsRam.status & CapSense_SW_STS_BUSY);
 243              		.loc 1 237 0
 244              		.cfi_startproc
 245              		@ args = 0, pretend = 0, frame = 0
 246              		@ frame_needed = 0, uses_anonymous_args = 0
 247              		@ link register save eliminated.
 238:Generated_Source\PSoC4/CapSense_Sensing.c **** }
 248              		.loc 1 238 0
 249 0000 024B     		ldr	r3, .L24
 250 0002 DB68     		ldr	r3, [r3, #12]
 251 0004 8020     		movs	r0, #128
 252 0006 1840     		ands	r0, r3
 239:Generated_Source\PSoC4/CapSense_Sensing.c **** 
ARM GAS  C:\Users\mstai\AppData\Local\Temp\ccHdifRP.s 			page 54


 253              		.loc 1 239 0
 254              		@ sp needed
 255 0008 7047     		bx	lr
 256              	.L25:
 257 000a C046     		.align	2
 258              	.L24:
 259 000c 00000000 		.word	CapSense_dsRam
 260              		.cfi_endproc
 261              	.LFE1:
 262              		.size	CapSense_IsBusy, .-CapSense_IsBusy
 263              		.section	.text.CapSense_SetupWidget,"ax",%progbits
 264              		.align	2
 265              		.global	CapSense_SetupWidget
 266              		.code	16
 267              		.thumb_func
 268              		.type	CapSense_SetupWidget, %function
 269              	CapSense_SetupWidget:
 270              	.LFB2:
 283:Generated_Source\PSoC4/CapSense_Sensing.c ****     cystatus widgetStatus;
 271              		.loc 1 283 0
 272              		.cfi_startproc
 273              		@ args = 0, pretend = 0, frame = 0
 274              		@ frame_needed = 0, uses_anonymous_args = 0
 275              	.LVL25:
 276 0000 10B5     		push	{r4, lr}
 277              		.cfi_def_cfa_offset 8
 278              		.cfi_offset 4, -8
 279              		.cfi_offset 14, -4
 286:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 280              		.loc 1 286 0
 281 0002 114B     		ldr	r3, .L32
 282 0004 DB68     		ldr	r3, [r3, #12]
 283 0006 DB03     		lsls	r3, r3, #15
 284 0008 12D4     		bmi	.L29
 296:Generated_Source\PSoC4/CapSense_Sensing.c ****         (0uL != CapSense_GET_WIDGET_EN_STATUS(widgetId)))
 285              		.loc 1 296 0
 286 000a 0028     		cmp	r0, #0
 287 000c 12D1     		bne	.L30
 297:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 288              		.loc 1 297 0 discriminator 1
 289 000e 1F23     		movs	r3, #31
 290 0010 0340     		ands	r3, r0
 291 0012 0122     		movs	r2, #1
 292 0014 9A40     		lsls	r2, r2, r3
 293 0016 1100     		movs	r1, r2
 294 0018 4209     		lsrs	r2, r0, #5
 295 001a 0B4C     		ldr	r4, .L32
 296 001c 0432     		adds	r2, r2, #4
 297 001e 9300     		lsls	r3, r2, #2
 298 0020 1A59     		ldr	r2, [r3, r4]
 299 0022 0A40     		ands	r2, r1
 300 0024 E318     		adds	r3, r4, r3
 301 0026 5B68     		ldr	r3, [r3, #4]
 296:Generated_Source\PSoC4/CapSense_Sensing.c ****         (0uL != CapSense_GET_WIDGET_EN_STATUS(widgetId)))
 302              		.loc 1 296 0 discriminator 1
 303 0028 1342     		tst	r3, r2
 304 002a 05D1     		bne	.L31
ARM GAS  C:\Users\mstai\AppData\Local\Temp\ccHdifRP.s 			page 55


 304:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 305              		.loc 1 304 0
 306 002c 0124     		movs	r4, #1
 307 002e 04E0     		b	.L27
 308              	.L29:
 289:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 309              		.loc 1 289 0
 310 0030 1124     		movs	r4, #17
 311 0032 02E0     		b	.L27
 312              	.L30:
 304:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 313              		.loc 1 304 0
 314 0034 0124     		movs	r4, #1
 315 0036 00E0     		b	.L27
 316              	.L31:
 300:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 317              		.loc 1 300 0
 318 0038 0024     		movs	r4, #0
 319              	.L27:
 320              	.LVL26:
 311:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 321              		.loc 1 311 0
 322 003a 002C     		cmp	r4, #0
 323 003c 01D1     		bne	.L28
 324:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
 324              		.loc 1 324 0
 325 003e FFF7FEFF 		bl	CapSense_CSDSetupWidget
 326              	.LVL27:
 327              	.L28:
 340:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 328              		.loc 1 340 0
 329 0042 2000     		movs	r0, r4
 330              		@ sp needed
 331              	.LVL28:
 332 0044 10BD     		pop	{r4, pc}
 333              	.L33:
 334 0046 C046     		.align	2
 335              	.L32:
 336 0048 00000000 		.word	CapSense_dsRam
 337              		.cfi_endproc
 338              	.LFE2:
 339              		.size	CapSense_SetupWidget, .-CapSense_SetupWidget
 340              		.section	.text.CapSense_Scan,"ax",%progbits
 341              		.align	2
 342              		.global	CapSense_Scan
 343              		.code	16
 344              		.thumb_func
 345              		.type	CapSense_Scan, %function
 346              	CapSense_Scan:
 347              	.LFB3:
 366:Generated_Source\PSoC4/CapSense_Sensing.c ****     cystatus scanStatus = CYRET_SUCCESS;
 348              		.loc 1 366 0
 349              		.cfi_startproc
 350              		@ args = 0, pretend = 0, frame = 0
 351              		@ frame_needed = 0, uses_anonymous_args = 0
 352 0000 10B5     		push	{r4, lr}
 353              		.cfi_def_cfa_offset 8
ARM GAS  C:\Users\mstai\AppData\Local\Temp\ccHdifRP.s 			page 56


 354              		.cfi_offset 4, -8
 355              		.cfi_offset 14, -4
 356              	.LVL29:
 369:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 357              		.loc 1 369 0
 358 0002 084B     		ldr	r3, .L40
 359 0004 DB68     		ldr	r3, [r3, #12]
 360 0006 DB03     		lsls	r3, r3, #15
 361 0008 07D4     		bmi	.L37
 376:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 362              		.loc 1 376 0
 363 000a 074B     		ldr	r3, .L40+4
 364 000c 1B78     		ldrb	r3, [r3]
 365 000e 012B     		cmp	r3, #1
 366 0010 05D1     		bne	.L39
 385:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
 367              		.loc 1 385 0
 368 0012 FFF7FEFF 		bl	CapSense_CSDScan
 369              	.LVL30:
 367:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 370              		.loc 1 367 0
 371 0016 0020     		movs	r0, #0
 386:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif
 372              		.loc 1 386 0
 373 0018 03E0     		b	.L35
 374              	.L37:
 372:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 375              		.loc 1 372 0
 376 001a 1120     		movs	r0, #17
 377 001c 01E0     		b	.L35
 378              	.L39:
 394:Generated_Source\PSoC4/CapSense_Sensing.c ****             break;
 379              		.loc 1 394 0
 380 001e 0120     		movs	r0, #1
 381 0020 4042     		rsbs	r0, r0, #0
 382              	.L35:
 383              	.LVL31:
 399:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 384              		.loc 1 399 0
 385              		@ sp needed
 386 0022 10BD     		pop	{r4, pc}
 387              	.L41:
 388              		.align	2
 389              	.L40:
 390 0024 00000000 		.word	CapSense_dsRam
 391 0028 00000000 		.word	.LANCHOR0
 392              		.cfi_endproc
 393              	.LFE3:
 394              		.size	CapSense_Scan, .-CapSense_Scan
 395              		.section	.text.CapSense_ScanAllWidgets,"ax",%progbits
 396              		.align	2
 397              		.global	CapSense_ScanAllWidgets
 398              		.code	16
 399              		.thumb_func
 400              		.type	CapSense_ScanAllWidgets, %function
 401              	CapSense_ScanAllWidgets:
 402              	.LFB4:
ARM GAS  C:\Users\mstai\AppData\Local\Temp\ccHdifRP.s 			page 57


 428:Generated_Source\PSoC4/CapSense_Sensing.c ****     cystatus scanStatus = CYRET_UNKNOWN;
 403              		.loc 1 428 0
 404              		.cfi_startproc
 405              		@ args = 0, pretend = 0, frame = 0
 406              		@ frame_needed = 0, uses_anonymous_args = 0
 407 0000 10B5     		push	{r4, lr}
 408              		.cfi_def_cfa_offset 8
 409              		.cfi_offset 4, -8
 410              		.cfi_offset 14, -4
 411              	.LVL32:
 433:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 412              		.loc 1 433 0
 413 0002 0C4B     		ldr	r3, .L48
 414 0004 DB68     		ldr	r3, [r3, #12]
 415 0006 1B06     		lsls	r3, r3, #24
 416 0008 12D4     		bmi	.L47
 417 000a 0024     		movs	r4, #0
 418 000c 0120     		movs	r0, #1
 419 000e 4042     		rsbs	r0, r0, #0
 420 0010 0BE0     		b	.L44
 421              	.LVL33:
 422              	.L46:
 449:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 423              		.loc 1 449 0
 424 0012 2000     		movs	r0, r4
 425              	.LVL34:
 426 0014 FFF7FEFF 		bl	CapSense_SetupWidget
 427              	.LVL35:
 451:Generated_Source\PSoC4/CapSense_Sensing.c ****             {
 428              		.loc 1 451 0
 429 0018 0028     		cmp	r0, #0
 430 001a 05D1     		bne	.L45
 468:Generated_Source\PSoC4/CapSense_Sensing.c ****                     }
 431              		.loc 1 468 0
 432 001c 0022     		movs	r2, #0
 433 001e 064B     		ldr	r3, .L48+4
 434 0020 5A70     		strb	r2, [r3, #1]
 473:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 435              		.loc 1 473 0
 436 0022 FFF7FEFF 		bl	CapSense_Scan
 437              	.LVL36:
 475:Generated_Source\PSoC4/CapSense_Sensing.c ****             }
 438              		.loc 1 475 0
 439 0026 04E0     		b	.L43
 440              	.L45:
 446:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 441              		.loc 1 446 0
 442 0028 0134     		adds	r4, r4, #1
 443              	.LVL37:
 444              	.L44:
 444:Generated_Source\PSoC4/CapSense_Sensing.c ****              wdgtIndex < CapSense_TOTAL_WIDGETS;
 445              		.loc 1 444 0 discriminator 1
 446 002a 002C     		cmp	r4, #0
 447 002c F1D0     		beq	.L46
 448 002e 00E0     		b	.L43
 449              	.LVL38:
 450              	.L47:
ARM GAS  C:\Users\mstai\AppData\Local\Temp\ccHdifRP.s 			page 58


 436:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 451              		.loc 1 436 0
 452 0030 1120     		movs	r0, #17
 453              	.LVL39:
 454              	.L43:
 481:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 455              		.loc 1 481 0
 456              		@ sp needed
 457 0032 10BD     		pop	{r4, pc}
 458              	.L49:
 459              		.align	2
 460              	.L48:
 461 0034 00000000 		.word	CapSense_dsRam
 462 0038 00000000 		.word	.LANCHOR0
 463              		.cfi_endproc
 464              	.LFE4:
 465              		.size	CapSense_ScanAllWidgets, .-CapSense_ScanAllWidgets
 466              		.section	.text.CapSense_SetupWidgetExt,"ax",%progbits
 467              		.align	2
 468              		.global	CapSense_SetupWidgetExt
 469              		.code	16
 470              		.thumb_func
 471              		.type	CapSense_SetupWidgetExt, %function
 472              	CapSense_SetupWidgetExt:
 473              	.LFB5:
 536:Generated_Source\PSoC4/CapSense_Sensing.c ****     cystatus widgetStatus;
 474              		.loc 1 536 0
 475              		.cfi_startproc
 476              		@ args = 0, pretend = 0, frame = 0
 477              		@ frame_needed = 0, uses_anonymous_args = 0
 478              	.LVL40:
 479 0000 70B5     		push	{r4, r5, r6, lr}
 480              		.cfi_def_cfa_offset 16
 481              		.cfi_offset 4, -16
 482              		.cfi_offset 5, -12
 483              		.cfi_offset 6, -8
 484              		.cfi_offset 14, -4
 539:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 485              		.loc 1 539 0
 486 0002 154B     		ldr	r3, .L57
 487 0004 DB68     		ldr	r3, [r3, #12]
 488 0006 DB03     		lsls	r3, r3, #15
 489 0008 18D4     		bmi	.L53
 549:Generated_Source\PSoC4/CapSense_Sensing.c ****         (0uL != CapSense_GET_WIDGET_EN_STATUS(widgetId)) &&
 490              		.loc 1 549 0
 491 000a 0028     		cmp	r0, #0
 492 000c 18D1     		bne	.L54
 550:Generated_Source\PSoC4/CapSense_Sensing.c ****         (sensorId < CapSense_GET_SENSOR_COUNT(widgetId)))
 493              		.loc 1 550 0 discriminator 1
 494 000e 1F23     		movs	r3, #31
 495 0010 0340     		ands	r3, r0
 496 0012 0122     		movs	r2, #1
 497 0014 9A40     		lsls	r2, r2, r3
 498 0016 1400     		movs	r4, r2
 499 0018 4209     		lsrs	r2, r0, #5
 500 001a 0F4D     		ldr	r5, .L57
 501 001c 0432     		adds	r2, r2, #4
ARM GAS  C:\Users\mstai\AppData\Local\Temp\ccHdifRP.s 			page 59


 502 001e 9300     		lsls	r3, r2, #2
 503 0020 5A59     		ldr	r2, [r3, r5]
 504 0022 2240     		ands	r2, r4
 505 0024 EB18     		adds	r3, r5, r3
 506 0026 5B68     		ldr	r3, [r3, #4]
 549:Generated_Source\PSoC4/CapSense_Sensing.c ****         (0uL != CapSense_GET_WIDGET_EN_STATUS(widgetId)) &&
 507              		.loc 1 549 0 discriminator 1
 508 0028 1342     		tst	r3, r2
 509 002a 0BD0     		beq	.L55
 551:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 510              		.loc 1 551 0
 511 002c 4301     		lsls	r3, r0, #5
 512 002e 0B4A     		ldr	r2, .L57+4
 513 0030 D318     		adds	r3, r2, r3
 514 0032 1B8B     		ldrh	r3, [r3, #24]
 550:Generated_Source\PSoC4/CapSense_Sensing.c ****         (sensorId < CapSense_GET_SENSOR_COUNT(widgetId)))
 515              		.loc 1 550 0
 516 0034 8B42     		cmp	r3, r1
 517 0036 07D8     		bhi	.L56
 558:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 518              		.loc 1 558 0
 519 0038 0124     		movs	r4, #1
 520 003a 06E0     		b	.L51
 521              	.L53:
 542:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 522              		.loc 1 542 0
 523 003c 1124     		movs	r4, #17
 524 003e 04E0     		b	.L51
 525              	.L54:
 558:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 526              		.loc 1 558 0
 527 0040 0124     		movs	r4, #1
 528 0042 02E0     		b	.L51
 529              	.L55:
 530 0044 0124     		movs	r4, #1
 531 0046 00E0     		b	.L51
 532              	.L56:
 554:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 533              		.loc 1 554 0
 534 0048 0024     		movs	r4, #0
 535              	.L51:
 536              	.LVL41:
 565:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 537              		.loc 1 565 0
 538 004a 002C     		cmp	r4, #0
 539 004c 01D1     		bne	.L52
 578:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
 540              		.loc 1 578 0
 541 004e FFF7FEFF 		bl	CapSense_CSDSetupWidgetExt
 542              	.LVL42:
 543              	.L52:
 594:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 544              		.loc 1 594 0
 545 0052 2000     		movs	r0, r4
 546              		@ sp needed
 547              	.LVL43:
 548 0054 70BD     		pop	{r4, r5, r6, pc}
ARM GAS  C:\Users\mstai\AppData\Local\Temp\ccHdifRP.s 			page 60


 549              	.L58:
 550 0056 C046     		.align	2
 551              	.L57:
 552 0058 00000000 		.word	CapSense_dsRam
 553 005c 00000000 		.word	CapSense_dsFlash
 554              		.cfi_endproc
 555              	.LFE5:
 556              		.size	CapSense_SetupWidgetExt, .-CapSense_SetupWidgetExt
 557              		.section	.text.CapSense_ScanExt,"ax",%progbits
 558              		.align	2
 559              		.global	CapSense_ScanExt
 560              		.code	16
 561              		.thumb_func
 562              		.type	CapSense_ScanExt, %function
 563              	CapSense_ScanExt:
 564              	.LFB6:
 642:Generated_Source\PSoC4/CapSense_Sensing.c ****     cystatus scanStatus = CYRET_SUCCESS;
 565              		.loc 1 642 0
 566              		.cfi_startproc
 567              		@ args = 0, pretend = 0, frame = 0
 568              		@ frame_needed = 0, uses_anonymous_args = 0
 569 0000 10B5     		push	{r4, lr}
 570              		.cfi_def_cfa_offset 8
 571              		.cfi_offset 4, -8
 572              		.cfi_offset 14, -4
 573              	.LVL44:
 645:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 574              		.loc 1 645 0
 575 0002 084B     		ldr	r3, .L65
 576 0004 DB68     		ldr	r3, [r3, #12]
 577 0006 DB03     		lsls	r3, r3, #15
 578 0008 07D4     		bmi	.L62
 652:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 579              		.loc 1 652 0
 580 000a 074B     		ldr	r3, .L65+4
 581 000c 1B78     		ldrb	r3, [r3]
 582 000e 012B     		cmp	r3, #1
 583 0010 05D1     		bne	.L64
 661:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
 584              		.loc 1 661 0
 585 0012 FFF7FEFF 		bl	CapSense_CSDScanExt
 586              	.LVL45:
 643:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 587              		.loc 1 643 0
 588 0016 0020     		movs	r0, #0
 662:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif
 589              		.loc 1 662 0
 590 0018 03E0     		b	.L60
 591              	.L62:
 648:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 592              		.loc 1 648 0
 593 001a 1120     		movs	r0, #17
 594 001c 01E0     		b	.L60
 595              	.L64:
 670:Generated_Source\PSoC4/CapSense_Sensing.c ****             break;
 596              		.loc 1 670 0
 597 001e 0120     		movs	r0, #1
ARM GAS  C:\Users\mstai\AppData\Local\Temp\ccHdifRP.s 			page 61


 598 0020 4042     		rsbs	r0, r0, #0
 599              	.L60:
 600              	.LVL46:
 675:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 601              		.loc 1 675 0
 602              		@ sp needed
 603 0022 10BD     		pop	{r4, pc}
 604              	.L66:
 605              		.align	2
 606              	.L65:
 607 0024 00000000 		.word	CapSense_dsRam
 608 0028 00000000 		.word	.LANCHOR0
 609              		.cfi_endproc
 610              	.LFE6:
 611              		.size	CapSense_ScanExt, .-CapSense_ScanExt
 612              		.section	.text.CapSense_SetPinState,"ax",%progbits
 613              		.align	2
 614              		.global	CapSense_SetPinState
 615              		.code	16
 616              		.thumb_func
 617              		.type	CapSense_SetPinState, %function
 618              	CapSense_SetPinState:
 619              	.LFB8:
 841:Generated_Source\PSoC4/CapSense_Sensing.c ****     uint32 eltdNum;
 620              		.loc 1 841 0
 621              		.cfi_startproc
 622              		@ args = 0, pretend = 0, frame = 0
 623              		@ frame_needed = 0, uses_anonymous_args = 0
 624              	.LVL47:
 625 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 626              		.cfi_def_cfa_offset 24
 627              		.cfi_offset 3, -24
 628              		.cfi_offset 4, -20
 629              		.cfi_offset 5, -16
 630              		.cfi_offset 6, -12
 631              		.cfi_offset 7, -8
 632              		.cfi_offset 14, -4
 633 0002 1600     		movs	r6, r2
 866:Generated_Source\PSoC4/CapSense_Sensing.c ****         eltdNum = 1u;
 634              		.loc 1 866 0
 635 0004 4001     		lsls	r0, r0, #5
 636              	.LVL48:
 637 0006 234B     		ldr	r3, .L74
 638 0008 C458     		ldr	r4, [r0, r3]
 639 000a 4901     		lsls	r1, r1, #5
 640              	.LVL49:
 641 000c 6418     		adds	r4, r4, r1
 642              	.LVL50:
 871:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 643              		.loc 1 871 0
 644 000e 0025     		movs	r5, #0
 645 0010 3CE0     		b	.L68
 646              	.LVL51:
 647              	.L73:
 874:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32(ioPtr->hsiomPtr, CY_GET_REG32(ioPtr->hsiomPtr) & ~(CapSense_HSIOM_SEL_MASK << 
 648              		.loc 1 874 0
 649 0012 FFF7FEFF 		bl	CyEnterCriticalSection
ARM GAS  C:\Users\mstai\AppData\Local\Temp\ccHdifRP.s 			page 62


 650              	.LVL52:
 875:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32(ioPtr->pcPtr, CY_GET_REG32(ioPtr->pcPtr) & ~(CapSense_GPIO_PC_MASK << ioPtr->s
 651              		.loc 1 875 0
 652 0016 2168     		ldr	r1, [r4]
 653 0018 0B68     		ldr	r3, [r1]
 654 001a 277F     		ldrb	r7, [r4, #28]
 655 001c 0F22     		movs	r2, #15
 656 001e BA40     		lsls	r2, r2, r7
 657 0020 9343     		bics	r3, r2
 658 0022 0B60     		str	r3, [r1]
 876:Generated_Source\PSoC4/CapSense_Sensing.c ****         CyExitCriticalSection(interruptState);
 659              		.loc 1 876 0
 660 0024 6168     		ldr	r1, [r4, #4]
 661 0026 0B68     		ldr	r3, [r1]
 662 0028 A77F     		ldrb	r7, [r4, #30]
 663 002a 0722     		movs	r2, #7
 664 002c BA40     		lsls	r2, r2, r7
 665 002e 9343     		bics	r3, r2
 666 0030 0B60     		str	r3, [r1]
 877:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 667              		.loc 1 877 0
 668 0032 FFF7FEFF 		bl	CyExitCriticalSection
 669              	.LVL53:
 879:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 670              		.loc 1 879 0
 671 0036 012E     		cmp	r6, #1
 672 0038 17D0     		beq	.L70
 673 003a 002E     		cmp	r6, #0
 674 003c 02D0     		beq	.L71
 675 003e 032E     		cmp	r6, #3
 676 0040 1FD0     		beq	.L72
 677 0042 21E0     		b	.L69
 678              	.L71:
 883:Generated_Source\PSoC4/CapSense_Sensing.c ****             CY_SET_REG32(ioPtr->pcPtr, CY_GET_REG32(ioPtr->pcPtr) | (CapSense_SNS_GROUND_CONNECT <<
 679              		.loc 1 883 0
 680 0044 FFF7FEFF 		bl	CyEnterCriticalSection
 681              	.LVL54:
 884:Generated_Source\PSoC4/CapSense_Sensing.c ****             CY_SET_REG32(ioPtr->drPtr, CY_GET_REG32(ioPtr->drPtr) & (uint32)(~(uint32)((uint32)1u <
 682              		.loc 1 884 0
 683 0048 6268     		ldr	r2, [r4, #4]
 684 004a 1168     		ldr	r1, [r2]
 685 004c A77F     		ldrb	r7, [r4, #30]
 686 004e 0623     		movs	r3, #6
 687 0050 BB40     		lsls	r3, r3, r7
 688 0052 0B43     		orrs	r3, r1
 689 0054 1360     		str	r3, [r2]
 885:Generated_Source\PSoC4/CapSense_Sensing.c ****             CyExitCriticalSection(interruptState);
 690              		.loc 1 885 0
 691 0056 E168     		ldr	r1, [r4, #12]
 692 0058 0B68     		ldr	r3, [r1]
 693 005a 677F     		ldrb	r7, [r4, #29]
 694 005c 0122     		movs	r2, #1
 695 005e BA40     		lsls	r2, r2, r7
 696 0060 9343     		bics	r3, r2
 697 0062 0B60     		str	r3, [r1]
 886:Generated_Source\PSoC4/CapSense_Sensing.c ****             break;
 698              		.loc 1 886 0
ARM GAS  C:\Users\mstai\AppData\Local\Temp\ccHdifRP.s 			page 63


 699 0064 FFF7FEFF 		bl	CyExitCriticalSection
 700              	.LVL55:
 887:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 701              		.loc 1 887 0
 702 0068 0EE0     		b	.L69
 703              	.L70:
 890:Generated_Source\PSoC4/CapSense_Sensing.c ****             CY_SET_REG32(ioPtr->drPtr, CY_GET_REG32(ioPtr->drPtr) & (uint32)~(uint32)((uint32)1u <<
 704              		.loc 1 890 0
 705 006a FFF7FEFF 		bl	CyEnterCriticalSection
 706              	.LVL56:
 891:Generated_Source\PSoC4/CapSense_Sensing.c ****             CyExitCriticalSection(interruptState);
 707              		.loc 1 891 0
 708 006e E168     		ldr	r1, [r4, #12]
 709 0070 0B68     		ldr	r3, [r1]
 710 0072 677F     		ldrb	r7, [r4, #29]
 711 0074 0122     		movs	r2, #1
 712 0076 BA40     		lsls	r2, r2, r7
 713 0078 9343     		bics	r3, r2
 714 007a 0B60     		str	r3, [r1]
 892:Generated_Source\PSoC4/CapSense_Sensing.c ****             break;
 715              		.loc 1 892 0
 716 007c FFF7FEFF 		bl	CyExitCriticalSection
 717              	.LVL57:
 893:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 718              		.loc 1 893 0
 719 0080 02E0     		b	.L69
 720              	.L72:
 898:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
 721              		.loc 1 898 0
 722 0082 2000     		movs	r0, r4
 723 0084 FFF7FEFF 		bl	CapSense_CSDConnectSns
 724              	.LVL58:
 725              	.L69:
 933:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 726              		.loc 1 933 0 discriminator 2
 727 0088 2034     		adds	r4, r4, #32
 728              	.LVL59:
 871:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 729              		.loc 1 871 0 discriminator 2
 730 008a 0135     		adds	r5, r5, #1
 731              	.LVL60:
 732              	.L68:
 871:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 733              		.loc 1 871 0 is_stmt 0 discriminator 1
 734 008c 002D     		cmp	r5, #0
 735 008e C0D0     		beq	.L73
 935:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 736              		.loc 1 935 0 is_stmt 1
 737              		@ sp needed
 738              	.LVL61:
 739              	.LVL62:
 740              	.LVL63:
 741 0090 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 742              	.L75:
 743 0092 C046     		.align	2
 744              	.L74:
 745 0094 00000000 		.word	CapSense_dsFlash
ARM GAS  C:\Users\mstai\AppData\Local\Temp\ccHdifRP.s 			page 64


 746              		.cfi_endproc
 747              	.LFE8:
 748              		.size	CapSense_SetPinState, .-CapSense_SetPinState
 749              		.section	.text.CapSense_SsSetAllIOsState,"ax",%progbits
 750              		.align	2
 751              		.global	CapSense_SsSetAllIOsState
 752              		.code	16
 753              		.thumb_func
 754              		.type	CapSense_SsSetAllIOsState, %function
 755              	CapSense_SsSetAllIOsState:
 756              	.LFB11:
1167:Generated_Source\PSoC4/CapSense_Sensing.c ****     uint8  interruptState;
 757              		.loc 1 1167 0
 758              		.cfi_startproc
 759              		@ args = 0, pretend = 0, frame = 8
 760              		@ frame_needed = 0, uses_anonymous_args = 0
 761              	.LVL64:
 762 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 763              		.cfi_def_cfa_offset 20
 764              		.cfi_offset 4, -20
 765              		.cfi_offset 5, -16
 766              		.cfi_offset 6, -12
 767              		.cfi_offset 7, -8
 768              		.cfi_offset 14, -4
 769 0002 4F46     		mov	r7, r9
 770 0004 4646     		mov	r6, r8
 771 0006 C0B4     		push	{r6, r7}
 772              		.cfi_def_cfa_offset 28
 773              		.cfi_offset 8, -28
 774              		.cfi_offset 9, -24
 775 0008 83B0     		sub	sp, sp, #12
 776              		.cfi_def_cfa_offset 40
1180:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 777              		.loc 1 1180 0
 778 000a 0128     		cmp	r0, #1
 779 000c 09D0     		beq	.L82
 780 000e 0228     		cmp	r0, #2
 781 0010 03D0     		beq	.L79
1184:Generated_Source\PSoC4/CapSense_Sensing.c ****             break;
 782              		.loc 1 1184 0
 783 0012 0027     		movs	r7, #0
1183:Generated_Source\PSoC4/CapSense_Sensing.c ****             newPinHsiomVal = CapSense_HSIOM_SEL_GPIO;
 784              		.loc 1 1183 0
 785 0014 0623     		movs	r3, #6
 786 0016 9946     		mov	r9, r3
 787 0018 06E0     		b	.L78
 788              	.L79:
 789              	.LVL65:
1192:Generated_Source\PSoC4/CapSense_Sensing.c ****             break;
 790              		.loc 1 1192 0
 791 001a 0527     		movs	r7, #5
1191:Generated_Source\PSoC4/CapSense_Sensing.c ****             newPinHsiomVal = CapSense_HSIOM_SEL_CSD_SHIELD;
 792              		.loc 1 1191 0
 793 001c 0023     		movs	r3, #0
 794 001e 9946     		mov	r9, r3
1193:Generated_Source\PSoC4/CapSense_Sensing.c ****         default:
 795              		.loc 1 1193 0
ARM GAS  C:\Users\mstai\AppData\Local\Temp\ccHdifRP.s 			page 65


 796 0020 02E0     		b	.L78
 797              	.LVL66:
 798              	.L82:
1188:Generated_Source\PSoC4/CapSense_Sensing.c ****             break;
 799              		.loc 1 1188 0
 800 0022 0027     		movs	r7, #0
1187:Generated_Source\PSoC4/CapSense_Sensing.c ****             newPinHsiomVal = CapSense_HSIOM_SEL_GPIO;
 801              		.loc 1 1187 0
 802 0024 0023     		movs	r3, #0
 803 0026 9946     		mov	r9, r3
 804              	.L78:
 805              	.LVL67:
1201:Generated_Source\PSoC4/CapSense_Sensing.c ****     for (loopIndex = 0u; loopIndex < CapSense_TOTAL_ELECTRODES; loopIndex++)
 806              		.loc 1 1201 0
 807 0028 164C     		ldr	r4, .L83
1202:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 808              		.loc 1 1202 0
 809 002a 0025     		movs	r5, #0
 810 002c 23E0     		b	.L80
 811              	.LVL68:
 812              	.L81:
1204:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 813              		.loc 1 1204 0 discriminator 3
 814 002e FFF7FEFF 		bl	CyEnterCriticalSection
 815              	.LVL69:
 816 0032 0190     		str	r0, [sp, #4]
 817              	.LVL70:
1206:Generated_Source\PSoC4/CapSense_Sensing.c ****         tmpHsiomRegValue &= ~(snsIoPtr->hsiomMask);
 818              		.loc 1 1206 0 discriminator 3
 819 0034 2268     		ldr	r2, [r4]
 820 0036 1368     		ldr	r3, [r2]
 821              	.LVL71:
1207:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32 (snsIoPtr->hsiomPtr, tmpHsiomRegValue);
 822              		.loc 1 1207 0 discriminator 3
 823 0038 6169     		ldr	r1, [r4, #20]
 824 003a 8B43     		bics	r3, r1
 825              	.LVL72:
1208:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 826              		.loc 1 1208 0 discriminator 3
 827 003c 1360     		str	r3, [r2]
1210:Generated_Source\PSoC4/CapSense_Sensing.c ****         tmpPcDrRegValue &= ~(CapSense_GPIO_PC_MASK << snsIoPtr->shift);
 828              		.loc 1 1210 0 discriminator 3
 829 003e 6068     		ldr	r0, [r4, #4]
 830 0040 0268     		ldr	r2, [r0]
 831              	.LVL73:
1211:Generated_Source\PSoC4/CapSense_Sensing.c ****         tmpPcDrRegValue |=  (newPinPcVal << snsIoPtr->shift);
 832              		.loc 1 1211 0 discriminator 3
 833 0042 A17F     		ldrb	r1, [r4, #30]
 834 0044 8846     		mov	r8, r1
 835 0046 0721     		movs	r1, #7
 836 0048 4646     		mov	r6, r8
 837 004a B140     		lsls	r1, r1, r6
 838 004c 8A43     		bics	r2, r1
 839              	.LVL74:
1212:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32 (snsIoPtr->pcPtr, tmpPcDrRegValue);
 840              		.loc 1 1212 0 discriminator 3
 841 004e 4946     		mov	r1, r9
ARM GAS  C:\Users\mstai\AppData\Local\Temp\ccHdifRP.s 			page 66


 842 0050 B140     		lsls	r1, r1, r6
 843 0052 0A43     		orrs	r2, r1
 844              	.LVL75:
1213:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 845              		.loc 1 1213 0 discriminator 3
 846 0054 0260     		str	r2, [r0]
1215:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32 (snsIoPtr->hsiomPtr, tmpHsiomRegValue);
 847              		.loc 1 1215 0 discriminator 3
 848 0056 227F     		ldrb	r2, [r4, #28]
 849              	.LVL76:
 850 0058 3900     		movs	r1, r7
 851 005a 9140     		lsls	r1, r1, r2
 852 005c 0B43     		orrs	r3, r1
 853              	.LVL77:
1216:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 854              		.loc 1 1216 0 discriminator 3
 855 005e 2268     		ldr	r2, [r4]
 856 0060 1360     		str	r3, [r2]
 857              	.LVL78:
1218:Generated_Source\PSoC4/CapSense_Sensing.c ****         tmpPcDrRegValue &= ~(snsIoPtr->mask);
 858              		.loc 1 1218 0 discriminator 3
 859 0062 E268     		ldr	r2, [r4, #12]
 860 0064 1368     		ldr	r3, [r2]
 861              	.LVL79:
1219:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32 (snsIoPtr->drPtr, tmpPcDrRegValue);
 862              		.loc 1 1219 0 discriminator 3
 863 0066 A169     		ldr	r1, [r4, #24]
 864 0068 8B43     		bics	r3, r1
 865              	.LVL80:
1220:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 866              		.loc 1 1220 0 discriminator 3
 867 006a 1360     		str	r3, [r2]
1222:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 868              		.loc 1 1222 0 discriminator 3
 869 006c 0198     		ldr	r0, [sp, #4]
 870 006e FFF7FEFF 		bl	CyExitCriticalSection
 871              	.LVL81:
1225:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 872              		.loc 1 1225 0 discriminator 3
 873 0072 2034     		adds	r4, r4, #32
 874              	.LVL82:
1202:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 875              		.loc 1 1202 0 discriminator 3
 876 0074 0135     		adds	r5, r5, #1
 877              	.LVL83:
 878              	.L80:
1202:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 879              		.loc 1 1202 0 is_stmt 0 discriminator 1
 880 0076 002D     		cmp	r5, #0
 881 0078 D9D0     		beq	.L81
1238:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 882              		.loc 1 1238 0 is_stmt 1
 883 007a 03B0     		add	sp, sp, #12
 884              		@ sp needed
 885              	.LVL84:
 886              	.LVL85:
 887              	.LVL86:
ARM GAS  C:\Users\mstai\AppData\Local\Temp\ccHdifRP.s 			page 67


 888              	.LVL87:
 889 007c 0CBC     		pop	{r2, r3}
 890 007e 9046     		mov	r8, r2
 891 0080 9946     		mov	r9, r3
 892 0082 F0BD     		pop	{r4, r5, r6, r7, pc}
 893              	.L84:
 894              		.align	2
 895              	.L83:
 896 0084 00000000 		.word	CapSense_ioList
 897              		.cfi_endproc
 898              	.LFE11:
 899              		.size	CapSense_SsSetAllIOsState, .-CapSense_SsSetAllIOsState
 900              		.section	.text.CapSense_SsPostAllWidgetsScan,"ax",%progbits
 901              		.align	2
 902              		.global	CapSense_SsPostAllWidgetsScan
 903              		.code	16
 904              		.thumb_func
 905              		.type	CapSense_SsPostAllWidgetsScan, %function
 906              	CapSense_SsPostAllWidgetsScan:
 907              	.LFB12:
1317:Generated_Source\PSoC4/CapSense_Sensing.c ****     /*
 908              		.loc 1 1317 0
 909              		.cfi_startproc
 910              		@ args = 0, pretend = 0, frame = 0
 911              		@ frame_needed = 0, uses_anonymous_args = 0
 912              		@ link register save eliminated.
1374:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 913              		.loc 1 1374 0
 914              		@ sp needed
 915 0000 7047     		bx	lr
 916              		.cfi_endproc
 917              	.LFE12:
 918              		.size	CapSense_SsPostAllWidgetsScan, .-CapSense_SsPostAllWidgetsScan
 919 0002 C046     		.section	.text.CapSense_SsIsrInitialize,"ax",%progbits
 920              		.align	2
 921              		.global	CapSense_SsIsrInitialize
 922              		.code	16
 923              		.thumb_func
 924              		.type	CapSense_SsIsrInitialize, %function
 925              	CapSense_SsIsrInitialize:
 926              	.LFB13:
1394:Generated_Source\PSoC4/CapSense_Sensing.c ****     CapSense_ISR_StartEx(address);
 927              		.loc 1 1394 0
 928              		.cfi_startproc
 929              		@ args = 0, pretend = 0, frame = 0
 930              		@ frame_needed = 0, uses_anonymous_args = 0
 931              	.LVL88:
 932 0000 10B5     		push	{r4, lr}
 933              		.cfi_def_cfa_offset 8
 934              		.cfi_offset 4, -8
 935              		.cfi_offset 14, -4
1395:Generated_Source\PSoC4/CapSense_Sensing.c **** }
 936              		.loc 1 1395 0
 937 0002 FFF7FEFF 		bl	CapSense_ISR_StartEx
 938              	.LVL89:
1396:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 939              		.loc 1 1396 0
ARM GAS  C:\Users\mstai\AppData\Local\Temp\ccHdifRP.s 			page 68


 940              		@ sp needed
 941 0006 10BD     		pop	{r4, pc}
 942              		.cfi_endproc
 943              	.LFE13:
 944              		.size	CapSense_SsIsrInitialize, .-CapSense_SsIsrInitialize
 945              		.section	.text.CapSense_SsSetModClkClockDivider,"ax",%progbits
 946              		.align	2
 947              		.global	CapSense_SsSetModClkClockDivider
 948              		.code	16
 949              		.thumb_func
 950              		.type	CapSense_SsSetModClkClockDivider, %function
 951              	CapSense_SsSetModClkClockDivider:
 952              	.LFB14:
1417:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_ENABLE == CapSense_IS_M0S8PERI_BLOCK)
 953              		.loc 1 1417 0
 954              		.cfi_startproc
 955              		@ args = 0, pretend = 0, frame = 0
 956              		@ frame_needed = 0, uses_anonymous_args = 0
 957              		@ link register save eliminated.
 958              	.LVL90:
1420:Generated_Source\PSoC4/CapSense_Sensing.c ****                  ((uint32)CapSense_ModClk__DIV_ID <<
 959              		.loc 1 1420 0
 960 0000 074A     		ldr	r2, .L89
 961 0002 084B     		ldr	r3, .L89+4
 962 0004 1A60     		str	r2, [r3]
1430:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 963              		.loc 1 1430 0
 964 0006 0138     		subs	r0, r0, #1
 965              	.LVL91:
 966 0008 0002     		lsls	r0, r0, #8
 967              	.LVL92:
 968 000a 074B     		ldr	r3, .L89+8
 969 000c 1860     		str	r0, [r3]
 970              	.L88:
1433:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 971              		.loc 1 1433 0 discriminator 1
 972 000e 054B     		ldr	r3, .L89+4
 973 0010 1B68     		ldr	r3, [r3]
 974 0012 002B     		cmp	r3, #0
 975 0014 FBDB     		blt	.L88
1439:Generated_Source\PSoC4/CapSense_Sensing.c ****                  (uint32)(((uint32)CapSense_ModClk__DIV_ID << CapSense_MODCLK_CMD_DIV_SHIFT) |
 976              		.loc 1 1439 0
 977 0016 054A     		ldr	r2, .L89+12
 978 0018 024B     		ldr	r3, .L89+4
 979 001a 1A60     		str	r2, [r3]
1464:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 980              		.loc 1 1464 0
 981              		@ sp needed
 982 001c 7047     		bx	lr
 983              	.L90:
 984 001e C046     		.align	2
 985              	.L89:
 986 0020 40000040 		.word	1073741888
 987 0024 00000140 		.word	1073807360
 988 0028 00030140 		.word	1073808128
 989 002c 40FF0080 		.word	-2147418304
 990              		.cfi_endproc
ARM GAS  C:\Users\mstai\AppData\Local\Temp\ccHdifRP.s 			page 69


 991              	.LFE14:
 992              		.size	CapSense_SsSetModClkClockDivider, .-CapSense_SsSetModClkClockDivider
 993              		.section	.text.CapSense_SsSetSnsClockDivider,"ax",%progbits
 994              		.align	2
 995              		.global	CapSense_SsSetSnsClockDivider
 996              		.code	16
 997              		.thumb_func
 998              		.type	CapSense_SsSetSnsClockDivider, %function
 999              	CapSense_SsSetSnsClockDivider:
 1000              	.LFB15:
1485:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_ENABLE == CapSense_CSDV2)
 1001              		.loc 1 1485 0
 1002              		.cfi_startproc
 1003              		@ args = 0, pretend = 0, frame = 0
 1004              		@ frame_needed = 0, uses_anonymous_args = 0
 1005              		@ link register save eliminated.
 1006              	.LVL93:
1494:Generated_Source\PSoC4/CapSense_Sensing.c ****     newRegValue &= (uint32)(~CapSense_SENSE_PERIOD_SENSE_DIV_MASK);
 1007              		.loc 1 1494 0
 1008 0000 034A     		ldr	r2, .L92
 1009 0002 1368     		ldr	r3, [r2]
 1010              	.LVL94:
1495:Generated_Source\PSoC4/CapSense_Sensing.c ****     newRegValue |= snsClk - 1u;
 1011              		.loc 1 1495 0
 1012 0004 1B0B     		lsrs	r3, r3, #12
 1013              	.LVL95:
 1014 0006 1B03     		lsls	r3, r3, #12
 1015              	.LVL96:
1496:Generated_Source\PSoC4/CapSense_Sensing.c ****     CY_SET_REG32(CapSense_SENSE_PERIOD_PTR, newRegValue);
 1016              		.loc 1 1496 0
 1017 0008 0138     		subs	r0, r0, #1
 1018              	.LVL97:
 1019 000a 1843     		orrs	r0, r3
 1020              	.LVL98:
1497:Generated_Source\PSoC4/CapSense_Sensing.c **** #else
 1021              		.loc 1 1497 0
 1022 000c 1060     		str	r0, [r2]
1546:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 1023              		.loc 1 1546 0
 1024              		@ sp needed
 1025 000e 7047     		bx	lr
 1026              	.L93:
 1027              		.align	2
 1028              	.L92:
 1029 0010 00022940 		.word	1076429312
 1030              		.cfi_endproc
 1031              	.LFE15:
 1032              		.size	CapSense_SsSetSnsClockDivider, .-CapSense_SsSetSnsClockDivider
 1033              		.section	.text.CapSense_SsSetClockDividers,"ax",%progbits
 1034              		.align	2
 1035              		.global	CapSense_SsSetClockDividers
 1036              		.code	16
 1037              		.thumb_func
 1038              		.type	CapSense_SsSetClockDividers, %function
 1039              	CapSense_SsSetClockDividers:
 1040              	.LFB16:
1569:Generated_Source\PSoC4/CapSense_Sensing.c ****     /* Configure Mod clock */
ARM GAS  C:\Users\mstai\AppData\Local\Temp\ccHdifRP.s 			page 70


 1041              		.loc 1 1569 0
 1042              		.cfi_startproc
 1043              		@ args = 0, pretend = 0, frame = 0
 1044              		@ frame_needed = 0, uses_anonymous_args = 0
 1045              	.LVL99:
 1046 0000 10B5     		push	{r4, lr}
 1047              		.cfi_def_cfa_offset 8
 1048              		.cfi_offset 4, -8
 1049              		.cfi_offset 14, -4
 1050 0002 0400     		movs	r4, r0
1571:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 1051              		.loc 1 1571 0
 1052 0004 0800     		movs	r0, r1
 1053              	.LVL100:
 1054 0006 FFF7FEFF 		bl	CapSense_SsSetModClkClockDivider
 1055              	.LVL101:
1574:Generated_Source\PSoC4/CapSense_Sensing.c **** }
 1056              		.loc 1 1574 0
 1057 000a 2000     		movs	r0, r4
 1058 000c FFF7FEFF 		bl	CapSense_SsSetSnsClockDivider
 1059              	.LVL102:
1575:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 1060              		.loc 1 1575 0
 1061              		@ sp needed
 1062              	.LVL103:
 1063 0010 10BD     		pop	{r4, pc}
 1064              		.cfi_endproc
 1065              	.LFE16:
 1066              		.size	CapSense_SsSetClockDividers, .-CapSense_SsSetClockDividers
 1067 0012 C046     		.section	.text.CapSense_CalibrateWidget,"ax",%progbits
 1068              		.align	2
 1069              		.global	CapSense_CalibrateWidget
 1070              		.code	16
 1071              		.thumb_func
 1072              		.type	CapSense_CalibrateWidget, %function
 1073              	CapSense_CalibrateWidget:
 1074              	.LFB17:
1621:Generated_Source\PSoC4/CapSense_Sensing.c ****         cystatus calibrateStatus = CYRET_SUCCESS;
 1075              		.loc 1 1621 0
 1076              		.cfi_startproc
 1077              		@ args = 0, pretend = 0, frame = 0
 1078              		@ frame_needed = 0, uses_anonymous_args = 0
 1079              	.LVL104:
 1080 0000 10B5     		push	{r4, lr}
 1081              		.cfi_def_cfa_offset 8
 1082              		.cfi_offset 4, -8
 1083              		.cfi_offset 14, -4
 1084              	.LVL105:
1636:Generated_Source\PSoC4/CapSense_Sensing.c ****                 {
 1085              		.loc 1 1636 0
 1086 0002 1F23     		movs	r3, #31
 1087 0004 0340     		ands	r3, r0
 1088 0006 0122     		movs	r2, #1
 1089 0008 9A40     		lsls	r2, r2, r3
 1090 000a 1100     		movs	r1, r2
 1091 000c 4209     		lsrs	r2, r0, #5
 1092 000e 0A4C     		ldr	r4, .L99
ARM GAS  C:\Users\mstai\AppData\Local\Temp\ccHdifRP.s 			page 71


 1093 0010 0432     		adds	r2, r2, #4
 1094 0012 9300     		lsls	r3, r2, #2
 1095 0014 1A59     		ldr	r2, [r3, r4]
 1096 0016 0A40     		ands	r2, r1
 1097 0018 E318     		adds	r3, r4, r3
 1098 001a 5B68     		ldr	r3, [r3, #4]
 1099 001c 1342     		tst	r3, r2
 1100 001e 01D0     		beq	.L98
1638:Generated_Source\PSoC4/CapSense_Sensing.c ****                 }
 1101              		.loc 1 1638 0
 1102 0020 0023     		movs	r3, #0
 1103 0022 00E0     		b	.L96
 1104              	.L98:
1642:Generated_Source\PSoC4/CapSense_Sensing.c ****                 }
 1105              		.loc 1 1642 0
 1106 0024 1123     		movs	r3, #17
 1107              	.L96:
 1108              	.LVL106:
1646:Generated_Source\PSoC4/CapSense_Sensing.c ****             {
 1109              		.loc 1 1646 0
 1110 0026 002B     		cmp	r3, #0
 1111 0028 03D1     		bne	.L97
1685:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 1112              		.loc 1 1685 0
 1113 002a 5521     		movs	r1, #85
 1114 002c FFF7FEFF 		bl	CapSense_CSDCalibrateWidget
 1115              	.LVL107:
 1116 0030 0300     		movs	r3, r0
 1117              	.LVL108:
 1118              	.L97:
1701:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 1119              		.loc 1 1701 0
 1120 0032 1800     		movs	r0, r3
 1121              		@ sp needed
 1122 0034 10BD     		pop	{r4, pc}
 1123              	.L100:
 1124 0036 C046     		.align	2
 1125              	.L99:
 1126 0038 00000000 		.word	CapSense_dsRam
 1127              		.cfi_endproc
 1128              	.LFE17:
 1129              		.size	CapSense_CalibrateWidget, .-CapSense_CalibrateWidget
 1130              		.section	.text.CapSense_CalibrateAllWidgets,"ax",%progbits
 1131              		.align	2
 1132              		.global	CapSense_CalibrateAllWidgets
 1133              		.code	16
 1134              		.thumb_func
 1135              		.type	CapSense_CalibrateAllWidgets, %function
 1136              	CapSense_CalibrateAllWidgets:
 1137              	.LFB18:
1738:Generated_Source\PSoC4/CapSense_Sensing.c ****         cystatus calibrateStatus = CYRET_SUCCESS;
 1138              		.loc 1 1738 0
 1139              		.cfi_startproc
 1140              		@ args = 0, pretend = 0, frame = 0
 1141              		@ frame_needed = 0, uses_anonymous_args = 0
 1142 0000 70B5     		push	{r4, r5, r6, lr}
 1143              		.cfi_def_cfa_offset 16
ARM GAS  C:\Users\mstai\AppData\Local\Temp\ccHdifRP.s 			page 72


 1144              		.cfi_offset 4, -16
 1145              		.cfi_offset 5, -12
 1146              		.cfi_offset 6, -8
 1147              		.cfi_offset 14, -4
 1148              	.LVL109:
1742:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 1149              		.loc 1 1742 0
 1150 0002 0024     		movs	r4, #0
1739:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint32 wdgtIndex;
 1151              		.loc 1 1739 0
 1152 0004 0025     		movs	r5, #0
1742:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 1153              		.loc 1 1742 0
 1154 0006 04E0     		b	.L102
 1155              	.LVL110:
 1156              	.L103:
1744:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
 1157              		.loc 1 1744 0 discriminator 3
 1158 0008 2000     		movs	r0, r4
 1159 000a FFF7FEFF 		bl	CapSense_CalibrateWidget
 1160              	.LVL111:
 1161 000e 0543     		orrs	r5, r0
 1162              	.LVL112:
1742:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 1163              		.loc 1 1742 0 discriminator 3
 1164 0010 0134     		adds	r4, r4, #1
 1165              	.LVL113:
 1166              	.L102:
1742:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 1167              		.loc 1 1742 0 is_stmt 0 discriminator 1
 1168 0012 002C     		cmp	r4, #0
 1169 0014 F8D0     		beq	.L103
1748:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* (CapSense_ANYMODE_AUTOCAL) */
 1170              		.loc 1 1748 0 is_stmt 1
 1171 0016 2800     		movs	r0, r5
 1172              		@ sp needed
 1173              	.LVL114:
 1174              	.LVL115:
 1175 0018 70BD     		pop	{r4, r5, r6, pc}
 1176              		.cfi_endproc
 1177              	.LFE18:
 1178              		.size	CapSense_CalibrateAllWidgets, .-CapSense_CalibrateAllWidgets
 1179 001a C046     		.section	.text.CapSense_SsCSDGetColSnsClkDivider,"ax",%progbits
 1180              		.align	2
 1181              		.global	CapSense_SsCSDGetColSnsClkDivider
 1182              		.code	16
 1183              		.thumb_func
 1184              		.type	CapSense_SsCSDGetColSnsClkDivider, %function
 1185              	CapSense_SsCSDGetColSnsClkDivider:
 1186              	.LFB23:
2758:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2759:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* (((CapSense_ENABLE == CapSense_CSX_EN) && \
2760:Generated_Source\PSoC4/CapSense_Sensing.c ****            (CapSense_DISABLE == CapSense_CSX_SKIP_OVSMPL_SPECIFIC_NODES) && \
2761:Generated_Source\PSoC4/CapSense_Sensing.c ****            (CapSense_ENABLE == CapSense_CSDV2) && \
2762:Generated_Source\PSoC4/CapSense_Sensing.c ****            (CapSense_CLK_SOURCE_PRSAUTO == CapSense_CSX_TX_CLK_SOURCE)) ||\
2763:Generated_Source\PSoC4/CapSense_Sensing.c ****           ((CapSense_ENABLE == CapSense_CSD_EN) && \
2764:Generated_Source\PSoC4/CapSense_Sensing.c ****            (CapSense_ENABLE == CapSense_CSDV2) && \
ARM GAS  C:\Users\mstai\AppData\Local\Temp\ccHdifRP.s 			page 73


2765:Generated_Source\PSoC4/CapSense_Sensing.c ****            (CapSense_CLK_SOURCE_PRSAUTO == CapSense_CSD_SNS_CLK_SOURCE))) */
2766:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2767:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2768:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_ENABLE == CapSense_CSD_EN)
2769:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2770:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2771:Generated_Source\PSoC4/CapSense_Sensing.c ****     /*******************************************************************************
2772:Generated_Source\PSoC4/CapSense_Sensing.c ****     * Function Name: CapSense_SsCSDGetColSnsClkDivider
2773:Generated_Source\PSoC4/CapSense_Sensing.c ****     ****************************************************************************//**
2774:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2775:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \brief
2776:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  This function gets the Sense Clock Divider value for one-dimension widgets
2777:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  and Column Sense Clock divider value for two-dimension widgets.
2778:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2779:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \details
2780:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  This function gets the Sense Clock Divider value based on the Component
2781:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  configuration. The function is applicable for one-dimension widgets and for
2782:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  two-dimension widgets.
2783:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2784:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \param widgetId
2785:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  Specifies the ID of the widget.
2786:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2787:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \return
2788:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  Returns the Sense Clock Divider value for one-dimension widgets
2789:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  and the Column Sense Clock divider value for two-dimension widgets.
2790:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2791:Generated_Source\PSoC4/CapSense_Sensing.c ****     *******************************************************************************/
2792:Generated_Source\PSoC4/CapSense_Sensing.c ****     uint32 CapSense_SsCSDGetColSnsClkDivider(uint32 widgetId)
2793:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 1187              		.loc 1 2793 0
 1188              		.cfi_startproc
 1189              		@ args = 0, pretend = 0, frame = 0
 1190              		@ frame_needed = 0, uses_anonymous_args = 0
 1191              		@ link register save eliminated.
 1192              	.LVL116:
2794:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint32 retVal;
2795:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2796:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Get sense divider based on configuration */
2797:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_ENABLE != CapSense_CSD_COMMON_SNS_CLK_EN)
2798:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_RAM_WD_BASE_STRUCT *ptrWdgt;
2799:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2800:Generated_Source\PSoC4/CapSense_Sensing.c ****             ptrWdgt = (CapSense_RAM_WD_BASE_STRUCT *)
 1193              		.loc 1 2800 0
 1194 0000 4001     		lsls	r0, r0, #5
 1195              	.LVL117:
 1196 0002 024B     		ldr	r3, .L105
 1197 0004 1818     		adds	r0, r3, r0
 1198 0006 4368     		ldr	r3, [r0, #4]
 1199              	.LVL118:
2801:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_dsFlash.wdgtArray[widgetId].ptr2WdgtRam;
2802:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2803:Generated_Source\PSoC4/CapSense_Sensing.c ****             retVal = (uint32)(ptrWdgt->snsClk);
 1200              		.loc 1 2803 0
 1201 0008 D889     		ldrh	r0, [r3, #14]
 1202              	.LVL119:
2804:Generated_Source\PSoC4/CapSense_Sensing.c ****         #else
2805:Generated_Source\PSoC4/CapSense_Sensing.c ****             retVal = (uint32)CapSense_dsRam.snsCsdClk;
ARM GAS  C:\Users\mstai\AppData\Local\Temp\ccHdifRP.s 			page 74


2806:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2807:Generated_Source\PSoC4/CapSense_Sensing.c ****             (void)widgetId; /* This parameter is unused in such configurations */
2808:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif /* (CapSense_ENABLE == CapSense_CSD_COMMON_SNS_CLK_EN) */
2809:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2810:Generated_Source\PSoC4/CapSense_Sensing.c ****         return (retVal);
2811:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 1203              		.loc 1 2811 0
 1204              		@ sp needed
 1205 000a 7047     		bx	lr
 1206              	.L106:
 1207              		.align	2
 1208              	.L105:
 1209 000c 00000000 		.word	CapSense_dsFlash
 1210              		.cfi_endproc
 1211              	.LFE23:
 1212              		.size	CapSense_SsCSDGetColSnsClkDivider, .-CapSense_SsCSDGetColSnsClkDivider
 1213              		.section	.text.CapSense_SsCSDCalcPrsSize,"ax",%progbits
 1214              		.align	2
 1215              		.global	CapSense_SsCSDCalcPrsSize
 1216              		.code	16
 1217              		.thumb_func
 1218              		.type	CapSense_SsCSDCalcPrsSize, %function
 1219              	CapSense_SsCSDCalcPrsSize:
 1220              	.LFB24:
2812:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2813:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2814:Generated_Source\PSoC4/CapSense_Sensing.c ****     #if (CapSense_CSD_MATRIX_WIDGET_EN || CapSense_CSD_TOUCHPAD_WIDGET_EN)
2815:Generated_Source\PSoC4/CapSense_Sensing.c ****         /*******************************************************************************
2816:Generated_Source\PSoC4/CapSense_Sensing.c ****         * Function Name: CapSense_SsCSDGetRowSnsClkDivider
2817:Generated_Source\PSoC4/CapSense_Sensing.c ****         ****************************************************************************//**
2818:Generated_Source\PSoC4/CapSense_Sensing.c ****         *
2819:Generated_Source\PSoC4/CapSense_Sensing.c ****         * \brief
2820:Generated_Source\PSoC4/CapSense_Sensing.c ****         *  This function gets the Sense Clock Divider value for one-dimension widgets
2821:Generated_Source\PSoC4/CapSense_Sensing.c ****         *  and the Column Sense Clock divider value for two-dimension widgets.
2822:Generated_Source\PSoC4/CapSense_Sensing.c ****         *
2823:Generated_Source\PSoC4/CapSense_Sensing.c ****         * \details
2824:Generated_Source\PSoC4/CapSense_Sensing.c ****         *  This function gets the Sense Clock Divider value based on the Component
2825:Generated_Source\PSoC4/CapSense_Sensing.c ****         *  configuration. The function is applicable for one-dimension widgets and for
2826:Generated_Source\PSoC4/CapSense_Sensing.c ****         *  two-dimension widgets.
2827:Generated_Source\PSoC4/CapSense_Sensing.c ****         *
2828:Generated_Source\PSoC4/CapSense_Sensing.c ****         * \param
2829:Generated_Source\PSoC4/CapSense_Sensing.c ****         *  widgetId Specifies the ID of the widget.
2830:Generated_Source\PSoC4/CapSense_Sensing.c ****         *
2831:Generated_Source\PSoC4/CapSense_Sensing.c ****         * \return
2832:Generated_Source\PSoC4/CapSense_Sensing.c ****         *  Returns the sense clock divider value for one-dimension widgets
2833:Generated_Source\PSoC4/CapSense_Sensing.c ****         *  and column sense clock divider value for two-dimension widgets.
2834:Generated_Source\PSoC4/CapSense_Sensing.c ****         *
2835:Generated_Source\PSoC4/CapSense_Sensing.c ****         *******************************************************************************/
2836:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint32 CapSense_SsCSDGetRowSnsClkDivider(uint32 widgetId)
2837:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
2838:Generated_Source\PSoC4/CapSense_Sensing.c ****             uint32 retVal;
2839:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2840:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* Get sense divider based on configuration */
2841:Generated_Source\PSoC4/CapSense_Sensing.c ****             #if (CapSense_ENABLE != CapSense_CSD_COMMON_SNS_CLK_EN)
2842:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_RAM_WD_BASE_STRUCT *ptrWdgt;
2843:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2844:Generated_Source\PSoC4/CapSense_Sensing.c ****                 ptrWdgt = (CapSense_RAM_WD_BASE_STRUCT *)
ARM GAS  C:\Users\mstai\AppData\Local\Temp\ccHdifRP.s 			page 75


2845:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_dsFlash.wdgtArray[widgetId].ptr2WdgtRam;
2846:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2847:Generated_Source\PSoC4/CapSense_Sensing.c ****                 retVal = ptrWdgt->rowSnsClk;
2848:Generated_Source\PSoC4/CapSense_Sensing.c ****             #else
2849:Generated_Source\PSoC4/CapSense_Sensing.c ****                 retVal = (uint32)CapSense_dsRam.snsCsdClk;
2850:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2851:Generated_Source\PSoC4/CapSense_Sensing.c ****                 (void)widgetId; /* This parameter is unused in such configurations */
2852:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif /* (CapSense_ENABLE == CapSense_CSD_COMMON_SNS_CLK_EN) */
2853:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2854:Generated_Source\PSoC4/CapSense_Sensing.c ****             return (retVal);
2855:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
2856:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2857:Generated_Source\PSoC4/CapSense_Sensing.c ****     #endif /* (CapSense_CSD_MATRIX_WIDGET_EN || CapSense_CSD_TOUCHPAD_WIDGET_EN) */
2858:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2859:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2860:Generated_Source\PSoC4/CapSense_Sensing.c ****     #if (CapSense_CLK_SOURCE_PRSAUTO == CapSense_CSD_SNS_CLK_SOURCE)
2861:Generated_Source\PSoC4/CapSense_Sensing.c ****         /*******************************************************************************
2862:Generated_Source\PSoC4/CapSense_Sensing.c ****         * Function Name: CapSense_SsCSDCalcPrsSize
2863:Generated_Source\PSoC4/CapSense_Sensing.c ****         ****************************************************************************//**
2864:Generated_Source\PSoC4/CapSense_Sensing.c ****         *
2865:Generated_Source\PSoC4/CapSense_Sensing.c ****         * \brief
2866:Generated_Source\PSoC4/CapSense_Sensing.c ****         *  The function finds PRS polynomial size in the Auto mode.
2867:Generated_Source\PSoC4/CapSense_Sensing.c ****         *
2868:Generated_Source\PSoC4/CapSense_Sensing.c ****         * \details
2869:Generated_Source\PSoC4/CapSense_Sensing.c ****         *  The PRS polynomial size in the Auto mode is found based on the following
2870:Generated_Source\PSoC4/CapSense_Sensing.c ****         *  requirements:
2871:Generated_Source\PSoC4/CapSense_Sensing.c ****         *  - at least one full spread spectrum polynomial should pass during scan time.
2872:Generated_Source\PSoC4/CapSense_Sensing.c ****         *
2873:Generated_Source\PSoC4/CapSense_Sensing.c ****         * \param
2874:Generated_Source\PSoC4/CapSense_Sensing.c ****         *  snsClkDivider The divider value for the sense clock.
2875:Generated_Source\PSoC4/CapSense_Sensing.c ****         *  resolution The widget resolution.
2876:Generated_Source\PSoC4/CapSense_Sensing.c ****         *
2877:Generated_Source\PSoC4/CapSense_Sensing.c ****         * \return prsSize PRS value for SENSE_PERIOD register.
2878:Generated_Source\PSoC4/CapSense_Sensing.c ****         *
2879:Generated_Source\PSoC4/CapSense_Sensing.c ****         *******************************************************************************/
2880:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint8 CapSense_SsCSDCalcPrsSize(uint32 snsClkDivider, uint32 resolution)
2881:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 1221              		.loc 1 2881 0
 1222              		.cfi_startproc
 1223              		@ args = 0, pretend = 0, frame = 0
 1224              		@ frame_needed = 0, uses_anonymous_args = 0
 1225              		@ link register save eliminated.
 1226              	.LVL120:
2882:Generated_Source\PSoC4/CapSense_Sensing.c ****             uint32 prsSize;
2883:Generated_Source\PSoC4/CapSense_Sensing.c ****             uint32 modClkDivider = 1u;
2884:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2885:Generated_Source\PSoC4/CapSense_Sensing.c ****             #if (CapSense_ENABLE != CapSense_CSDV2)
2886:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #if(CapSense_ENABLE == CapSense_IS_M0S8PERI_BLOCK)
2887:Generated_Source\PSoC4/CapSense_Sensing.c ****                     modClkDivider = (uint32)CapSense_dsRam.modCsdClk;
2888:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #endif
2889:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2890:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /*
2891:Generated_Source\PSoC4/CapSense_Sensing.c ****                 * This operation is needed for Third-generation HW Block
2892:Generated_Source\PSoC4/CapSense_Sensing.c ****                 * based devices to take into account DIV-2 flip-flop.
2893:Generated_Source\PSoC4/CapSense_Sensing.c ****                 */
2894:Generated_Source\PSoC4/CapSense_Sensing.c ****                 snsClkDivider <<= 1uL;
2895:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif
ARM GAS  C:\Users\mstai\AppData\Local\Temp\ccHdifRP.s 			page 76


2896:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2897:Generated_Source\PSoC4/CapSense_Sensing.c ****             if ((snsClkDivider * CapSense_PRS_LENGTH_12_BITS) <= (modClkDivider * ((0x00000001Lu <<
 1227              		.loc 1 2897 0
 1228 0000 0203     		lsls	r2, r0, #12
 1229 0002 121A     		subs	r2, r2, r0
 1230 0004 0123     		movs	r3, #1
 1231 0006 8B40     		lsls	r3, r3, r1
 1232 0008 013B     		subs	r3, r3, #1
 1233 000a 9A42     		cmp	r2, r3
 1234 000c 05D9     		bls	.L109
2898:Generated_Source\PSoC4/CapSense_Sensing.c ****             {
2899:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Set PRS12 mode */
2900:Generated_Source\PSoC4/CapSense_Sensing.c ****                 prsSize = CapSense_PRS_12_CONFIG;
2901:Generated_Source\PSoC4/CapSense_Sensing.c ****             }
2902:Generated_Source\PSoC4/CapSense_Sensing.c ****             else if ((snsClkDivider * CapSense_PRS_LENGTH_8_BITS) <= (modClkDivider * ((0x00000001L
 1235              		.loc 1 2902 0
 1236 000e 0202     		lsls	r2, r0, #8
 1237 0010 101A     		subs	r0, r2, r0
 1238              	.LVL121:
 1239 0012 8342     		cmp	r3, r0
 1240 0014 03D3     		bcc	.L110
2903:Generated_Source\PSoC4/CapSense_Sensing.c ****             {
2904:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Set PRS8 mode */
2905:Generated_Source\PSoC4/CapSense_Sensing.c ****                 prsSize = CapSense_PRS_8_CONFIG;
 1241              		.loc 1 2905 0
 1242 0016 0520     		movs	r0, #5
 1243 0018 02E0     		b	.L108
 1244              	.LVL122:
 1245              	.L109:
2900:Generated_Source\PSoC4/CapSense_Sensing.c ****             }
 1246              		.loc 1 2900 0
 1247 001a 0620     		movs	r0, #6
 1248              	.LVL123:
 1249 001c 00E0     		b	.L108
 1250              	.L110:
2906:Generated_Source\PSoC4/CapSense_Sensing.c ****             }
2907:Generated_Source\PSoC4/CapSense_Sensing.c ****             else
2908:Generated_Source\PSoC4/CapSense_Sensing.c ****             {
2909:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Set Direct clock mode */
2910:Generated_Source\PSoC4/CapSense_Sensing.c ****                 prsSize = CapSense_CLK_SOURCE_DIRECT;
 1251              		.loc 1 2910 0
 1252 001e 0020     		movs	r0, #0
 1253              	.L108:
 1254              	.LVL124:
2911:Generated_Source\PSoC4/CapSense_Sensing.c ****             }
2912:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2913:Generated_Source\PSoC4/CapSense_Sensing.c ****             return (uint8)prsSize;
 1255              		.loc 1 2913 0
 1256 0020 C0B2     		uxtb	r0, r0
 1257              	.LVL125:
2914:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
 1258              		.loc 1 2914 0
 1259              		@ sp needed
 1260 0022 7047     		bx	lr
 1261              		.cfi_endproc
 1262              	.LFE24:
 1263              		.size	CapSense_SsCSDCalcPrsSize, .-CapSense_SsCSDCalcPrsSize
ARM GAS  C:\Users\mstai\AppData\Local\Temp\ccHdifRP.s 			page 77


 1264              		.section	.text.CapSense_SsSetWidgetSenseClkSrc,"ax",%progbits
 1265              		.align	2
 1266              		.code	16
 1267              		.thumb_func
 1268              		.type	CapSense_SsSetWidgetSenseClkSrc, %function
 1269              	CapSense_SsSetWidgetSenseClkSrc:
 1270              	.LFB20:
2458:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint8 lfsrSize;
 1271              		.loc 1 2458 0
 1272              		.cfi_startproc
 1273              		@ args = 0, pretend = 0, frame = 0
 1274              		@ frame_needed = 0, uses_anonymous_args = 0
 1275              	.LVL126:
 1276 0000 70B5     		push	{r4, r5, r6, lr}
 1277              		.cfi_def_cfa_offset 16
 1278              		.cfi_offset 4, -16
 1279              		.cfi_offset 5, -12
 1280              		.cfi_offset 6, -8
 1281              		.cfi_offset 14, -4
 1282 0002 0E00     		movs	r6, r1
2470:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 1283              		.loc 1 2470 0
 1284 0004 FFF7FEFF 		bl	CapSense_SsCSDGetColSnsClkDivider
 1285              	.LVL127:
 1286 0008 0500     		movs	r5, r0
 1287              	.LVL128:
2473:Generated_Source\PSoC4/CapSense_Sensing.c ****                                                                                              CapSen
 1288              		.loc 1 2473 0
 1289 000a 7188     		ldrh	r1, [r6, #2]
 1290 000c 0022     		movs	r2, #0
 1291 000e FFF7FEFF 		bl	CapSense_SsCSDGetNumberOfConversions
 1292              	.LVL129:
 1293 0012 0100     		movs	r1, r0
 1294              	.LVL130:
2475:Generated_Source\PSoC4/CapSense_Sensing.c ****                 if (CapSense_CLK_SOURCE_DIRECT == lfsrSize)
 1295              		.loc 1 2475 0
 1296 0014 2800     		movs	r0, r5
 1297              	.LVL131:
 1298 0016 FFF7FEFF 		bl	CapSense_SsCalcLfsrSize
 1299              	.LVL132:
 1300 001a 041E     		subs	r4, r0, #0
 1301              	.LVL133:
2476:Generated_Source\PSoC4/CapSense_Sensing.c ****                 {
 1302              		.loc 1 2476 0
 1303 001c 04D1     		bne	.L112
2482:Generated_Source\PSoC4/CapSense_Sensing.c ****                 }
 1304              		.loc 1 2482 0
 1305 001e 6800     		lsls	r0, r5, #1
 1306              	.LVL134:
 1307 0020 7188     		ldrh	r1, [r6, #2]
 1308 0022 FFF7FEFF 		bl	CapSense_SsCSDCalcPrsSize
 1309              	.LVL135:
 1310 0026 0400     		movs	r4, r0
 1311              	.LVL136:
 1312              	.L112:
2484:Generated_Source\PSoC4/CapSense_Sensing.c ****             #else
 1313              		.loc 1 2484 0
ARM GAS  C:\Users\mstai\AppData\Local\Temp\ccHdifRP.s 			page 78


 1314 0028 2100     		movs	r1, r4
 1315 002a 2800     		movs	r0, r5
 1316 002c FFF7FEFF 		bl	CapSense_SsCalcLfsrScale
 1317              	.LVL137:
2499:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 1318              		.loc 1 2499 0
 1319 0030 0001     		lsls	r0, r0, #4
 1320              	.LVL138:
 1321 0032 C0B2     		uxtb	r0, r0
 1322 0034 2043     		orrs	r0, r4
 1323 0036 3074     		strb	r0, [r6, #16]
2534:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* (CapSense_ENABLE == CapSense_CSD_EN) */
 1324              		.loc 1 2534 0
 1325              		@ sp needed
 1326              	.LVL139:
 1327              	.LVL140:
 1328              	.LVL141:
 1329 0038 70BD     		pop	{r4, r5, r6, pc}
 1330              		.cfi_endproc
 1331              	.LFE20:
 1332              		.size	CapSense_SsSetWidgetSenseClkSrc, .-CapSense_SsSetWidgetSenseClkSrc
 1333 003a C046     		.section	.text.CapSense_SsInitializeSourceSenseClk,"ax",%progbits
 1334              		.align	2
 1335              		.global	CapSense_SsInitializeSourceSenseClk
 1336              		.code	16
 1337              		.thumb_func
 1338              		.type	CapSense_SsInitializeSourceSenseClk, %function
 1339              	CapSense_SsInitializeSourceSenseClk:
 1340              	.LFB19:
2405:Generated_Source\PSoC4/CapSense_Sensing.c ****     uint32 wdgtIndex;
 1341              		.loc 1 2405 0
 1342              		.cfi_startproc
 1343              		@ args = 0, pretend = 0, frame = 0
 1344              		@ frame_needed = 0, uses_anonymous_args = 0
 1345 0000 10B5     		push	{r4, lr}
 1346              		.cfi_def_cfa_offset 8
 1347              		.cfi_offset 4, -8
 1348              		.cfi_offset 14, -4
 1349              	.LVL142:
2409:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 1350              		.loc 1 2409 0
 1351 0002 0024     		movs	r4, #0
 1352 0004 0AE0     		b	.L114
 1353              	.LVL143:
 1354              	.L115:
2411:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 1355              		.loc 1 2411 0
 1356 0006 6301     		lsls	r3, r4, #5
 1357 0008 064A     		ldr	r2, .L116
 1358 000a D318     		adds	r3, r2, r3
 1359 000c 5968     		ldr	r1, [r3, #4]
 1360              	.LVL144:
2417:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
 1361              		.loc 1 2417 0
 1362 000e 2000     		movs	r0, r4
 1363 0010 FFF7FEFF 		bl	CapSense_SsSetWidgetSenseClkSrc
 1364              	.LVL145:
ARM GAS  C:\Users\mstai\AppData\Local\Temp\ccHdifRP.s 			page 79


2429:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif /* (CapSense_ENABLE == CapSense_TST_WDGT_CRC_EN) */
 1365              		.loc 1 2429 0
 1366 0014 2000     		movs	r0, r4
 1367 0016 FFF7FEFF 		bl	CapSense_DsUpdateWidgetCrc
 1368              	.LVL146:
2409:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 1369              		.loc 1 2409 0
 1370 001a 0134     		adds	r4, r4, #1
 1371              	.LVL147:
 1372              	.L114:
2409:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 1373              		.loc 1 2409 0 is_stmt 0 discriminator 1
 1374 001c 002C     		cmp	r4, #0
 1375 001e F2D0     		beq	.L115
2432:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* ((CapSense_ENABLE == CapSense_CSD_EN) || \
 1376              		.loc 1 2432 0 is_stmt 1
 1377              		@ sp needed
 1378              	.LVL148:
 1379 0020 10BD     		pop	{r4, pc}
 1380              	.L117:
 1381 0022 C046     		.align	2
 1382              	.L116:
 1383 0024 00000000 		.word	CapSense_dsFlash
 1384              		.cfi_endproc
 1385              	.LFE19:
 1386              		.size	CapSense_SsInitializeSourceSenseClk, .-CapSense_SsInitializeSourceSenseClk
 1387              		.section	.text.CapSense_DischargeExtCapacitors,"ax",%progbits
 1388              		.align	2
 1389              		.global	CapSense_DischargeExtCapacitors
 1390              		.code	16
 1391              		.thumb_func
 1392              		.type	CapSense_DischargeExtCapacitors, %function
 1393              	CapSense_DischargeExtCapacitors:
 1394              	.LFB25:
2915:Generated_Source\PSoC4/CapSense_Sensing.c ****     #endif /* (CapSense_CLK_SOURCE_PRSAUTO == CapSense_CSD_SNS_CLK_SOURCE) */
2916:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* (CapSense_ENABLE == CapSense_CSD_EN) */
2917:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2918:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2919:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_ENABLE == CapSense_CSDV2)
2920:Generated_Source\PSoC4/CapSense_Sensing.c ****     /*******************************************************************************
2921:Generated_Source\PSoC4/CapSense_Sensing.c ****     * Function Name: CapSense_DischargeExtCapacitors
2922:Generated_Source\PSoC4/CapSense_Sensing.c ****     ****************************************************************************//**
2923:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2924:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \brief
2925:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  The internal function discharge available external capacitors.
2926:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2927:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \details
2928:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  The function discharge available external capacitors by connection them
2929:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  to GND using STRONG GPIO drive mode. Additionaly, the function disconnects
2930:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  the capacitors from analog mux buses if connected.
2931:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  Note: the function does not restore the connection to analog mux busses
2932:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  and supposes that all the capacitors belong to a single device port.
2933:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2934:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \param
2935:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  dischargeTime The discharge time in us.
2936:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2937:Generated_Source\PSoC4/CapSense_Sensing.c ****     *******************************************************************************/
ARM GAS  C:\Users\mstai\AppData\Local\Temp\ccHdifRP.s 			page 80


2938:Generated_Source\PSoC4/CapSense_Sensing.c ****     void CapSense_DischargeExtCapacitors(uint32 dischargeTime)
2939:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 1395              		.loc 1 2939 0
 1396              		.cfi_startproc
 1397              		@ args = 0, pretend = 0, frame = 8
 1398              		@ frame_needed = 0, uses_anonymous_args = 0
 1399              	.LVL149:
 1400 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 1401              		.cfi_def_cfa_offset 20
 1402              		.cfi_offset 4, -20
 1403              		.cfi_offset 5, -16
 1404              		.cfi_offset 6, -12
 1405              		.cfi_offset 7, -8
 1406              		.cfi_offset 14, -4
 1407 0002 5F46     		mov	r7, fp
 1408 0004 5646     		mov	r6, r10
 1409 0006 4D46     		mov	r5, r9
 1410 0008 4446     		mov	r4, r8
 1411 000a F0B4     		push	{r4, r5, r6, r7}
 1412              		.cfi_def_cfa_offset 36
 1413              		.cfi_offset 8, -36
 1414              		.cfi_offset 9, -32
 1415              		.cfi_offset 10, -28
 1416              		.cfi_offset 11, -24
 1417 000c 83B0     		sub	sp, sp, #12
 1418              		.cfi_def_cfa_offset 48
 1419 000e 0190     		str	r0, [sp, #4]
2940:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint32 hsiomReg;
2941:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint32 drReg;
2942:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint32 pcReg;
2943:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint32 newRegValue;
2944:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint8  interruptState;
2945:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2946:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Store register state */
2947:Generated_Source\PSoC4/CapSense_Sensing.c ****         hsiomReg = CY_GET_REG32(CapSense_EXT_CAP_HSIOM_PTR) & CapSense_EXT_CAP_HSIOM_MASK;
 1420              		.loc 1 2947 0
 1421 0010 2B4E     		ldr	r6, .L119
 1422 0012 3468     		ldr	r4, [r6]
 1423 0014 F023     		movs	r3, #240
 1424 0016 1B01     		lsls	r3, r3, #4
 1425 0018 1C40     		ands	r4, r3
 1426 001a 0094     		str	r4, [sp]
 1427              	.LVL150:
2948:Generated_Source\PSoC4/CapSense_Sensing.c ****         drReg = CY_GET_REG32(CapSense_EXT_CAP_DR_PTR) & CapSense_EXT_CAP_DR_MASK;
 1428              		.loc 1 2948 0
 1429 001c 294F     		ldr	r7, .L119+4
 1430 001e 3B68     		ldr	r3, [r7]
 1431 0020 0422     		movs	r2, #4
 1432 0022 9246     		mov	r10, r2
 1433 0024 1A40     		ands	r2, r3
 1434 0026 9146     		mov	r9, r2
 1435              	.LVL151:
2949:Generated_Source\PSoC4/CapSense_Sensing.c ****         pcReg = CY_GET_REG32(CapSense_EXT_CAP_PC_PTR) & CapSense_EXT_CAP_PC_MASK;
 1436              		.loc 1 2949 0
 1437 0028 274C     		ldr	r4, .L119+8
 1438              	.LVL152:
 1439 002a 2568     		ldr	r5, [r4]
ARM GAS  C:\Users\mstai\AppData\Local\Temp\ccHdifRP.s 			page 81


 1440 002c E023     		movs	r3, #224
 1441 002e 5B00     		lsls	r3, r3, #1
 1442 0030 1D40     		ands	r5, r3
 1443 0032 AB46     		mov	fp, r5
 1444              	.LVL153:
2950:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2951:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Disconnect Ext Cap from AMUXBUS-A using HSIOM registers */
2952:Generated_Source\PSoC4/CapSense_Sensing.c ****         interruptState = CyEnterCriticalSection();
 1445              		.loc 1 2952 0
 1446 0034 FFF7FEFF 		bl	CyEnterCriticalSection
 1447              	.LVL154:
2953:Generated_Source\PSoC4/CapSense_Sensing.c ****         newRegValue = CY_GET_REG32(CapSense_EXT_CAP_HSIOM_PTR);
 1448              		.loc 1 2953 0
 1449 0038 3368     		ldr	r3, [r6]
 1450              	.LVL155:
2954:Generated_Source\PSoC4/CapSense_Sensing.c ****         newRegValue &= (uint32)(~(uint32)CapSense_EXT_CAP_HSIOM_MASK);
 1451              		.loc 1 2954 0
 1452 003a 244A     		ldr	r2, .L119+12
 1453 003c 9046     		mov	r8, r2
 1454 003e 1340     		ands	r3, r2
 1455              	.LVL156:
2955:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32(CapSense_EXT_CAP_HSIOM_PTR, newRegValue);
 1456              		.loc 1 2955 0
 1457 0040 3360     		str	r3, [r6]
 1458              	.LVL157:
2956:Generated_Source\PSoC4/CapSense_Sensing.c ****         CyExitCriticalSection(interruptState);
 1459              		.loc 1 2956 0
 1460 0042 FFF7FEFF 		bl	CyExitCriticalSection
 1461              	.LVL158:
2957:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2958:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Set output port register to 0 to connect to GND */
2959:Generated_Source\PSoC4/CapSense_Sensing.c ****         interruptState = CyEnterCriticalSection();
 1462              		.loc 1 2959 0
 1463 0046 FFF7FEFF 		bl	CyEnterCriticalSection
 1464              	.LVL159:
2960:Generated_Source\PSoC4/CapSense_Sensing.c ****         newRegValue = CY_GET_REG32(CapSense_EXT_CAP_DR_PTR);
 1465              		.loc 1 2960 0
 1466 004a 3B68     		ldr	r3, [r7]
 1467              	.LVL160:
2961:Generated_Source\PSoC4/CapSense_Sensing.c ****         newRegValue &= (uint32)(~(uint32)CapSense_EXT_CAP_DR_MASK);
 1468              		.loc 1 2961 0
 1469 004c 5246     		mov	r2, r10
 1470 004e 9343     		bics	r3, r2
 1471              	.LVL161:
2962:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32(CapSense_EXT_CAP_DR_PTR, newRegValue);
 1472              		.loc 1 2962 0
 1473 0050 3B60     		str	r3, [r7]
2963:Generated_Source\PSoC4/CapSense_Sensing.c ****         CyExitCriticalSection(interruptState);
 1474              		.loc 1 2963 0
 1475 0052 FFF7FEFF 		bl	CyExitCriticalSection
 1476              	.LVL162:
2964:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2965:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Set port configuration register (drive mode) in STRONG mode */
2966:Generated_Source\PSoC4/CapSense_Sensing.c ****         interruptState = CyEnterCriticalSection();
 1477              		.loc 1 2966 0
 1478 0056 FFF7FEFF 		bl	CyEnterCriticalSection
 1479              	.LVL163:
ARM GAS  C:\Users\mstai\AppData\Local\Temp\ccHdifRP.s 			page 82


2967:Generated_Source\PSoC4/CapSense_Sensing.c ****         newRegValue = CY_GET_REG32(CapSense_EXT_CAP_PC_PTR);
 1480              		.loc 1 2967 0
 1481 005a 2368     		ldr	r3, [r4]
 1482              	.LVL164:
2968:Generated_Source\PSoC4/CapSense_Sensing.c ****         newRegValue &= (uint32)(~((uint32)CapSense_EXT_CAP_PC_MASK));
 1483              		.loc 1 2968 0
 1484 005c 1C4D     		ldr	r5, .L119+16
 1485              	.LVL165:
 1486 005e 2B40     		ands	r3, r5
 1487              	.LVL166:
2969:Generated_Source\PSoC4/CapSense_Sensing.c ****         newRegValue |= (CapSense_EXT_CAP_PC_STRONG_CFG);
 1488              		.loc 1 2969 0
 1489 0060 C022     		movs	r2, #192
 1490 0062 5200     		lsls	r2, r2, #1
 1491 0064 1343     		orrs	r3, r2
 1492              	.LVL167:
2970:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32(CapSense_EXT_CAP_PC_PTR, newRegValue);
 1493              		.loc 1 2970 0
 1494 0066 2360     		str	r3, [r4]
2971:Generated_Source\PSoC4/CapSense_Sensing.c ****         CyExitCriticalSection(interruptState);
 1495              		.loc 1 2971 0
 1496 0068 FFF7FEFF 		bl	CyExitCriticalSection
 1497              	.LVL168:
2972:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2973:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Delay to discharge external capacitors */
2974:Generated_Source\PSoC4/CapSense_Sensing.c ****         CyDelayUs((uint16)dischargeTime);
 1498              		.loc 1 2974 0
 1499 006c 6B46     		mov	r3, sp
 1500 006e 9888     		ldrh	r0, [r3, #4]
 1501 0070 FFF7FEFF 		bl	CyDelayUs
 1502              	.LVL169:
2975:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2976:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Restore previous register values */
2977:Generated_Source\PSoC4/CapSense_Sensing.c ****         interruptState = CyEnterCriticalSection();
 1503              		.loc 1 2977 0
 1504 0074 FFF7FEFF 		bl	CyEnterCriticalSection
 1505              	.LVL170:
2978:Generated_Source\PSoC4/CapSense_Sensing.c ****         newRegValue = CY_GET_REG32(CapSense_EXT_CAP_PC_PTR);
 1506              		.loc 1 2978 0
 1507 0078 2368     		ldr	r3, [r4]
 1508              	.LVL171:
2979:Generated_Source\PSoC4/CapSense_Sensing.c ****         newRegValue &= (uint32)(~((uint32)CapSense_EXT_CAP_PC_MASK));
 1509              		.loc 1 2979 0
 1510 007a 1D40     		ands	r5, r3
 1511              	.LVL172:
2980:Generated_Source\PSoC4/CapSense_Sensing.c ****         newRegValue |= pcReg;
 1512              		.loc 1 2980 0
 1513 007c 5A46     		mov	r2, fp
 1514 007e 1543     		orrs	r5, r2
 1515              	.LVL173:
2981:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32(CapSense_EXT_CAP_PC_PTR, newRegValue);
 1516              		.loc 1 2981 0
 1517 0080 2560     		str	r5, [r4]
2982:Generated_Source\PSoC4/CapSense_Sensing.c ****         CyExitCriticalSection(interruptState);
 1518              		.loc 1 2982 0
 1519 0082 FFF7FEFF 		bl	CyExitCriticalSection
 1520              	.LVL174:
ARM GAS  C:\Users\mstai\AppData\Local\Temp\ccHdifRP.s 			page 83


2983:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2984:Generated_Source\PSoC4/CapSense_Sensing.c ****         interruptState = CyEnterCriticalSection();
 1521              		.loc 1 2984 0
 1522 0086 FFF7FEFF 		bl	CyEnterCriticalSection
 1523              	.LVL175:
2985:Generated_Source\PSoC4/CapSense_Sensing.c ****         newRegValue = CY_GET_REG32(CapSense_EXT_CAP_DR_PTR);
 1524              		.loc 1 2985 0
 1525 008a 3B68     		ldr	r3, [r7]
 1526              	.LVL176:
2986:Generated_Source\PSoC4/CapSense_Sensing.c ****         newRegValue &= (uint32)(~(uint32)CapSense_EXT_CAP_DR_MASK);
 1527              		.loc 1 2986 0
 1528 008c 5246     		mov	r2, r10
 1529 008e 9343     		bics	r3, r2
 1530              	.LVL177:
2987:Generated_Source\PSoC4/CapSense_Sensing.c ****         newRegValue |= drReg;
 1531              		.loc 1 2987 0
 1532 0090 4A46     		mov	r2, r9
 1533 0092 1343     		orrs	r3, r2
 1534              	.LVL178:
2988:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32(CapSense_EXT_CAP_DR_PTR, newRegValue);
 1535              		.loc 1 2988 0
 1536 0094 3B60     		str	r3, [r7]
2989:Generated_Source\PSoC4/CapSense_Sensing.c ****         CyExitCriticalSection(interruptState);
 1537              		.loc 1 2989 0
 1538 0096 FFF7FEFF 		bl	CyExitCriticalSection
 1539              	.LVL179:
2990:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2991:Generated_Source\PSoC4/CapSense_Sensing.c ****         interruptState = CyEnterCriticalSection();
 1540              		.loc 1 2991 0
 1541 009a FFF7FEFF 		bl	CyEnterCriticalSection
 1542              	.LVL180:
2992:Generated_Source\PSoC4/CapSense_Sensing.c ****         newRegValue = CY_GET_REG32(CapSense_EXT_CAP_HSIOM_PTR);
 1543              		.loc 1 2992 0
 1544 009e 3368     		ldr	r3, [r6]
 1545              	.LVL181:
2993:Generated_Source\PSoC4/CapSense_Sensing.c ****         newRegValue &= (uint32)(~(uint32)CapSense_EXT_CAP_HSIOM_MASK);
 1546              		.loc 1 2993 0
 1547 00a0 4246     		mov	r2, r8
 1548 00a2 1A40     		ands	r2, r3
 1549 00a4 1400     		movs	r4, r2
 1550              	.LVL182:
2994:Generated_Source\PSoC4/CapSense_Sensing.c ****         newRegValue |= hsiomReg;
 1551              		.loc 1 2994 0
 1552 00a6 009B     		ldr	r3, [sp]
 1553 00a8 1C43     		orrs	r4, r3
 1554              	.LVL183:
2995:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32(CapSense_EXT_CAP_HSIOM_PTR, newRegValue);
 1555              		.loc 1 2995 0
 1556 00aa 3460     		str	r4, [r6]
2996:Generated_Source\PSoC4/CapSense_Sensing.c ****         CyExitCriticalSection(interruptState);
 1557              		.loc 1 2996 0
 1558 00ac FFF7FEFF 		bl	CyExitCriticalSection
 1559              	.LVL184:
2997:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 1560              		.loc 1 2997 0
 1561 00b0 03B0     		add	sp, sp, #12
 1562              		@ sp needed
ARM GAS  C:\Users\mstai\AppData\Local\Temp\ccHdifRP.s 			page 84


 1563              	.LVL185:
 1564              	.LVL186:
 1565              	.LVL187:
 1566 00b2 3CBC     		pop	{r2, r3, r4, r5}
 1567 00b4 9046     		mov	r8, r2
 1568 00b6 9946     		mov	r9, r3
 1569 00b8 A246     		mov	r10, r4
 1570 00ba AB46     		mov	fp, r5
 1571 00bc F0BD     		pop	{r4, r5, r6, r7, pc}
 1572              	.L120:
 1573 00be C046     		.align	2
 1574              	.L119:
 1575 00c0 00040240 		.word	1073873920
 1576 00c4 00040440 		.word	1074004992
 1577 00c8 08040440 		.word	1074005000
 1578 00cc FFF0FFFF 		.word	-3841
 1579 00d0 3FFEFFFF 		.word	-449
 1580              		.cfi_endproc
 1581              	.LFE25:
 1582              		.size	CapSense_DischargeExtCapacitors, .-CapSense_DischargeExtCapacitors
 1583              		.section	.text.CapSense_SetInactiveElectrodeState,"ax",%progbits
 1584              		.align	2
 1585              		.global	CapSense_SetInactiveElectrodeState
 1586              		.code	16
 1587              		.thumb_func
 1588              		.type	CapSense_SetInactiveElectrodeState, %function
 1589              	CapSense_SetInactiveElectrodeState:
 1590              	.LFB26:
2998:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2999:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* (CapSense_ENABLE == CapSense_CSDV2) */
3000:Generated_Source\PSoC4/CapSense_Sensing.c **** 
3001:Generated_Source\PSoC4/CapSense_Sensing.c **** 
3002:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_ENABLE == CapSense_CSDV1)
3003:Generated_Source\PSoC4/CapSense_Sensing.c ****     /*******************************************************************************
3004:Generated_Source\PSoC4/CapSense_Sensing.c ****     * Function Name: CapSense_DischargeExtCapacitors
3005:Generated_Source\PSoC4/CapSense_Sensing.c ****     ****************************************************************************//**
3006:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
3007:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \brief
3008:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  The internal function discharge available external capacitors.
3009:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
3010:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \details
3011:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  The function discharge available external capacitors by connection them
3012:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  to GND using STRONG GPIO drive mode. Additionaly, the function disconnects
3013:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  the capacitors from analog mux buses if connected.
3014:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  Note: the function does not restore the connection to analog mux busses
3015:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  and supposes that all the capacitors belong to a single device port.
3016:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
3017:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \param
3018:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  dischargeTime The discharge time in us.
3019:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
3020:Generated_Source\PSoC4/CapSense_Sensing.c ****     *******************************************************************************/
3021:Generated_Source\PSoC4/CapSense_Sensing.c ****     void CapSense_DischargeExtCapacitors(uint32 dischargeTime)
3022:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
3023:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Store the pin configuration, the CMOD capacitor is connected to. */
3024:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_ENABLE == CapSense_CSD_EN)
3025:Generated_Source\PSoC4/CapSense_Sensing.c ****             uint32 cmodHsiom = CY_GET_REG32(CapSense_CMOD_HSIOM_PTR) & CapSense_EXT_CAP_HSIOM_MASK_
3026:Generated_Source\PSoC4/CapSense_Sensing.c ****             uint32 cmodDr = CY_GET_REG32(CapSense_CMOD_DR_PTR) & CapSense_EXT_CAP_DR_MASK_CMOD;
ARM GAS  C:\Users\mstai\AppData\Local\Temp\ccHdifRP.s 			page 85


3027:Generated_Source\PSoC4/CapSense_Sensing.c ****             uint32 cmodPc = CY_GET_REG32(CapSense_CMOD_PC_PTR) & CapSense_EXT_CAP_PC_MASK_CMOD;
3028:Generated_Source\PSoC4/CapSense_Sensing.c **** 
3029:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* Store the pin configuration, the CSH capacitor is connected to. */
3030:Generated_Source\PSoC4/CapSense_Sensing.c ****             #if((CapSense_ENABLE == CapSense_CSD_SHIELD_EN) &&\
3031:Generated_Source\PSoC4/CapSense_Sensing.c ****                 (CapSense_ENABLE == CapSense_CSD_SHIELD_TANK_EN))
3032:Generated_Source\PSoC4/CapSense_Sensing.c ****                 uint32 cshHsiom = CY_GET_REG32(CapSense_CSH_HSIOM_PTR) & CapSense_EXT_CAP_HSIOM_MAS
3033:Generated_Source\PSoC4/CapSense_Sensing.c ****                 uint32 cshDr = CY_GET_REG32(CapSense_CSH_DR_PTR) & CapSense_EXT_CAP_DR_MASK_CSH;
3034:Generated_Source\PSoC4/CapSense_Sensing.c ****                 uint32 cshPc = CY_GET_REG32(CapSense_CSH_PC_PTR) & CapSense_EXT_CAP_PC_MASK_CSH;
3035:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif
3036:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif
3037:Generated_Source\PSoC4/CapSense_Sensing.c **** 
3038:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_ENABLE == CapSense_CSX_EN)
3039:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* Store the pin configuration, the CintA capacitor is connected to. */
3040:Generated_Source\PSoC4/CapSense_Sensing.c ****             uint32 cintAHsiom = CY_GET_REG32(CapSense_CintA_HSIOM_PTR) & CapSense_EXT_CAP_HSIOM_MAS
3041:Generated_Source\PSoC4/CapSense_Sensing.c ****             uint32 cintADr = CY_GET_REG32(CapSense_CintA_DR_PTR) & CapSense_EXT_CAP_DR_MASK_CINTA;
3042:Generated_Source\PSoC4/CapSense_Sensing.c ****             uint32 cintAPc = CY_GET_REG32(CapSense_CintA_PC_PTR) & CapSense_EXT_CAP_PC_MASK_CINTA;
3043:Generated_Source\PSoC4/CapSense_Sensing.c **** 
3044:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* Store the pin configuration, the CintB capacitor is connected to. */
3045:Generated_Source\PSoC4/CapSense_Sensing.c ****             uint32 cintBHsiom = CY_GET_REG32(CapSense_CintB_HSIOM_PTR) & CapSense_EXT_CAP_HSIOM_MAS
3046:Generated_Source\PSoC4/CapSense_Sensing.c ****             uint32 cintBDr = CY_GET_REG32(CapSense_CintB_DR_PTR) & CapSense_EXT_CAP_DR_MASK_CINTB;
3047:Generated_Source\PSoC4/CapSense_Sensing.c ****             uint32 cintBPc = CY_GET_REG32(CapSense_CintB_PC_PTR) & CapSense_EXT_CAP_PC_MASK_CINTB;
3048:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif
3049:Generated_Source\PSoC4/CapSense_Sensing.c **** 
3050:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_ENABLE == CapSense_CSD_EN)
3051:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* Disconnect the CMOD capacitor from the AMUXBUS and connect it to GND. */
3052:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_WriteBitsSafe(CapSense_CMOD_HSIOM_PTR, CapSense_EXT_CAP_HSIOM_MASK_CMOD,
3053:Generated_Source\PSoC4/CapSense_Sensing.c ****                                            CapSense_HSIOM_SEL_GPIO);
3054:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_WriteBitsSafe(CapSense_CMOD_DR_PTR, CapSense_EXT_CAP_DR_MASK_CMOD, 0u);
3055:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_WriteBitsSafe(CapSense_CMOD_PC_PTR, CapSense_EXT_CAP_PC_MASK_CMOD,
3056:Generated_Source\PSoC4/CapSense_Sensing.c ****                                            CapSense_EXT_CAP_PC_STRONG_CFG_CMOD);
3057:Generated_Source\PSoC4/CapSense_Sensing.c **** 
3058:Generated_Source\PSoC4/CapSense_Sensing.c ****             #if((CapSense_ENABLE == CapSense_CSD_SHIELD_EN) &&\
3059:Generated_Source\PSoC4/CapSense_Sensing.c ****                 (CapSense_ENABLE == CapSense_CSD_SHIELD_TANK_EN))
3060:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Disconnect the CSH capacitor from the AMUXBUS and connect it to GND. */
3061:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_WriteBitsSafe(CapSense_CSH_HSIOM_PTR, CapSense_EXT_CAP_HSIOM_MASK_CSH,
3062:Generated_Source\PSoC4/CapSense_Sensing.c ****                                                CapSense_HSIOM_SEL_GPIO);
3063:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_WriteBitsSafe(CapSense_CSH_DR_PTR, CapSense_EXT_CAP_DR_MASK_CSH, 0u);
3064:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_WriteBitsSafe(CapSense_CSH_PC_PTR, CapSense_EXT_CAP_PC_MASK_CSH,
3065:Generated_Source\PSoC4/CapSense_Sensing.c ****                                                CapSense_EXT_CAP_PC_STRONG_CFG_CSH);
3066:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif
3067:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif
3068:Generated_Source\PSoC4/CapSense_Sensing.c **** 
3069:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_ENABLE == CapSense_CSX_EN)
3070:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* Disconnect the CintA capacitor from the AMUXBUS and connect it to GND. */
3071:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_WriteBitsSafe(CapSense_CintA_HSIOM_PTR, CapSense_EXT_CAP_HSIOM_MASK_CINTA,
3072:Generated_Source\PSoC4/CapSense_Sensing.c ****                                            CapSense_HSIOM_SEL_GPIO);
3073:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_WriteBitsSafe(CapSense_CintA_DR_PTR, CapSense_EXT_CAP_DR_MASK_CINTA, 0u);
3074:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_WriteBitsSafe(CapSense_CintA_PC_PTR, CapSense_EXT_CAP_PC_MASK_CINTA,
3075:Generated_Source\PSoC4/CapSense_Sensing.c ****                                            CapSense_EXT_CAP_PC_STRONG_CFG_CINTA);
3076:Generated_Source\PSoC4/CapSense_Sensing.c **** 
3077:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* Disconnect the CintB capacitor from the AMUXBUS and connect it to GND. */
3078:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_WriteBitsSafe(CapSense_CintB_HSIOM_PTR, CapSense_EXT_CAP_HSIOM_MASK_CINTB,
3079:Generated_Source\PSoC4/CapSense_Sensing.c ****                                            CapSense_HSIOM_SEL_GPIO);
3080:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_WriteBitsSafe(CapSense_CintB_DR_PTR, CapSense_EXT_CAP_DR_MASK_CINTB, 0u);
3081:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_WriteBitsSafe(CapSense_CintB_PC_PTR, CapSense_EXT_CAP_PC_MASK_CINTB,
3082:Generated_Source\PSoC4/CapSense_Sensing.c ****                                            CapSense_EXT_CAP_PC_STRONG_CFG_CINTB);
3083:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif
ARM GAS  C:\Users\mstai\AppData\Local\Temp\ccHdifRP.s 			page 86


3084:Generated_Source\PSoC4/CapSense_Sensing.c **** 
3085:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Delay to discharge external capacitors */
3086:Generated_Source\PSoC4/CapSense_Sensing.c ****         CyDelayUs((uint16)dischargeTime);
3087:Generated_Source\PSoC4/CapSense_Sensing.c **** 
3088:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_ENABLE == CapSense_CSD_EN)
3089:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* Restore the pin configuration, the CMOD capacitor is connected to. */
3090:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_WriteBitsSafe(CapSense_CMOD_PC_PTR,
3091:Generated_Source\PSoC4/CapSense_Sensing.c ****                                            CapSense_EXT_CAP_PC_MASK_CMOD, cmodPc);
3092:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_WriteBitsSafe(CapSense_CMOD_DR_PTR,
3093:Generated_Source\PSoC4/CapSense_Sensing.c ****                                            CapSense_EXT_CAP_DR_MASK_CMOD, cmodDr);
3094:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_WriteBitsSafe(CapSense_CMOD_HSIOM_PTR,
3095:Generated_Source\PSoC4/CapSense_Sensing.c ****                                            CapSense_EXT_CAP_HSIOM_MASK_CMOD, cmodHsiom);
3096:Generated_Source\PSoC4/CapSense_Sensing.c **** 
3097:Generated_Source\PSoC4/CapSense_Sensing.c ****             #if((CapSense_ENABLE == CapSense_CSD_SHIELD_EN) &&\
3098:Generated_Source\PSoC4/CapSense_Sensing.c ****                 (CapSense_ENABLE == CapSense_CSD_SHIELD_TANK_EN))
3099:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Restore the pin configuration, the CSH capacitor is connected to. */
3100:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_WriteBitsSafe(CapSense_CSH_PC_PTR,
3101:Generated_Source\PSoC4/CapSense_Sensing.c ****                                                CapSense_EXT_CAP_PC_MASK_CSH, cshPc);
3102:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_WriteBitsSafe(CapSense_CSH_DR_PTR,
3103:Generated_Source\PSoC4/CapSense_Sensing.c ****                                                CapSense_EXT_CAP_DR_MASK_CSH, cshDr);
3104:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_WriteBitsSafe(CapSense_CSH_HSIOM_PTR,
3105:Generated_Source\PSoC4/CapSense_Sensing.c ****                                                CapSense_EXT_CAP_HSIOM_MASK_CSH, cshHsiom);
3106:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif
3107:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif
3108:Generated_Source\PSoC4/CapSense_Sensing.c **** 
3109:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_ENABLE == CapSense_CSX_EN)
3110:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* Restore the pin configuration, the CintA capacitor is connected to. */
3111:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_WriteBitsSafe(CapSense_CintA_PC_PTR,
3112:Generated_Source\PSoC4/CapSense_Sensing.c ****                                            CapSense_EXT_CAP_PC_MASK_CINTA, cintAPc);
3113:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_WriteBitsSafe(CapSense_CintA_DR_PTR,
3114:Generated_Source\PSoC4/CapSense_Sensing.c ****                                            CapSense_EXT_CAP_DR_MASK_CINTA, cintADr);
3115:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_WriteBitsSafe(CapSense_CintA_HSIOM_PTR,
3116:Generated_Source\PSoC4/CapSense_Sensing.c ****                                            CapSense_EXT_CAP_HSIOM_MASK_CINTA, cintAHsiom);
3117:Generated_Source\PSoC4/CapSense_Sensing.c **** 
3118:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* Restore the pin configuration, the CintB capacitor is connected to. */
3119:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_WriteBitsSafe(CapSense_CintB_PC_PTR,
3120:Generated_Source\PSoC4/CapSense_Sensing.c ****                                            CapSense_EXT_CAP_PC_MASK_CINTB, cintBPc);
3121:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_WriteBitsSafe(CapSense_CintB_DR_PTR,
3122:Generated_Source\PSoC4/CapSense_Sensing.c ****                                            CapSense_EXT_CAP_DR_MASK_CINTB, cintBDr);
3123:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_WriteBitsSafe(CapSense_CintB_HSIOM_PTR,
3124:Generated_Source\PSoC4/CapSense_Sensing.c ****                                            CapSense_EXT_CAP_HSIOM_MASK_CINTB, cintBHsiom);
3125:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif
3126:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
3127:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* (CapSense_ENABLE == CapSense_CSDV1) */
3128:Generated_Source\PSoC4/CapSense_Sensing.c **** 
3129:Generated_Source\PSoC4/CapSense_Sensing.c **** 
3130:Generated_Source\PSoC4/CapSense_Sensing.c **** #if((CapSense_ENABLE == CapSense_CSD_EN) ||\
3131:Generated_Source\PSoC4/CapSense_Sensing.c ****     (CapSense_ENABLE == CapSense_CSX_EN))
3132:Generated_Source\PSoC4/CapSense_Sensing.c ****     /*******************************************************************************
3133:Generated_Source\PSoC4/CapSense_Sensing.c ****     * Function Name: CapSense_SetInactiveElectrodeState
3134:Generated_Source\PSoC4/CapSense_Sensing.c ****     ****************************************************************************//**
3135:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
3136:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \brief
3137:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  The function updates the RAM data structure with the desired state of inactive
3138:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  electrodes for the specified operation mode. The state of pins is not changed
3139:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  in scope of this routine.
3140:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
ARM GAS  C:\Users\mstai\AppData\Local\Temp\ccHdifRP.s 			page 87


3141:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \details
3142:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  The function updates the following registers of RAM data structure:
3143:Generated_Source\PSoC4/CapSense_Sensing.c ****     *   - CapSense_SCAN_CSD_ISC_VALUE - Connection of inactive CSD and CSX
3144:Generated_Source\PSoC4/CapSense_Sensing.c ****     *     electrodes during the regular CSD scan. By default, this register is initialized
3145:Generated_Source\PSoC4/CapSense_Sensing.c ****     *     with the value of Inactive Sensor Connection combobox on the CSD Settings tab.
3146:Generated_Source\PSoC4/CapSense_Sensing.c ****     *     The CapSense_SCAN_CSD_E value should be used as the Mode parameter
3147:Generated_Source\PSoC4/CapSense_Sensing.c ****     *     to update this register.
3148:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
3149:Generated_Source\PSoC4/CapSense_Sensing.c ****     *   - CapSense_SCAN_CSX_ISC_VALUE - Connection of inactive CSD, CSX and
3150:Generated_Source\PSoC4/CapSense_Sensing.c ****     *     the dedicated Shield electrodes during the regular CSX scan. By default, this
3151:Generated_Source\PSoC4/CapSense_Sensing.c ****     *     register is initialized with the value of Inactive Sensor Connection combobox
3152:Generated_Source\PSoC4/CapSense_Sensing.c ****     *     on the CSX Settings tab.
3153:Generated_Source\PSoC4/CapSense_Sensing.c ****     *     The CapSense_SCAN_CSX_E value should be used as the Mode parameter
3154:Generated_Source\PSoC4/CapSense_Sensing.c ****     *     to update this register.
3155:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
3156:Generated_Source\PSoC4/CapSense_Sensing.c ****     *   - CapSense_BIST_CSD_SNS_CAP_ISC_VALUE - Connection of inactive CSD and CSX
3157:Generated_Source\PSoC4/CapSense_Sensing.c ****     *     electrodes during measurement of CSD electrodes capacitance.
3158:Generated_Source\PSoC4/CapSense_Sensing.c ****     *     This register is initialized with the CapSense_SNS_CONNECTION_GROUND value
3159:Generated_Source\PSoC4/CapSense_Sensing.c ****     *     by default.
3160:Generated_Source\PSoC4/CapSense_Sensing.c ****     *     The CapSense_BIST_CSD_SNS_CAP_E value should be used as the Mode parameter
3161:Generated_Source\PSoC4/CapSense_Sensing.c ****     *     to update this register.
3162:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
3163:Generated_Source\PSoC4/CapSense_Sensing.c ****     *   - CapSense_BIST_CSX_SNS_CAP_ISC_VALUE - Connection of inactive CSD, CSX and
3164:Generated_Source\PSoC4/CapSense_Sensing.c ****     *     the dedicated Shield electrodes during measurement of CSX electrodes (Tx and Rx)
3165:Generated_Source\PSoC4/CapSense_Sensing.c ****     *     capacitance. This register is initialized with the CapSense_SNS_CONNECTION_GROUND
3166:Generated_Source\PSoC4/CapSense_Sensing.c ****     *     value by default.
3167:Generated_Source\PSoC4/CapSense_Sensing.c ****     *     The CapSense_BIST_CSX_SNS_CAP_E value should be used as the Mode parameter
3168:Generated_Source\PSoC4/CapSense_Sensing.c ****     *     to update this register.
3169:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
3170:Generated_Source\PSoC4/CapSense_Sensing.c ****     *   - CapSense_BIST_CSD_SH_CAP_ISC_VALUE - Connection of inactive CSD and CSX electrodes
3171:Generated_Source\PSoC4/CapSense_Sensing.c ****     *     measurement of dedicated Shield  electrodes capacitance. This register is initialized wit
3172:Generated_Source\PSoC4/CapSense_Sensing.c ****     *     the CapSense_SNS_CONNECTION_GROUND value by default.
3173:Generated_Source\PSoC4/CapSense_Sensing.c ****     *     The CapSense_BIST_CSD_SH_CAP_E value should be used as the Mode parameter
3174:Generated_Source\PSoC4/CapSense_Sensing.c ****     *     to update this register.
3175:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
3176:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \param
3177:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  mode Operation mode, the state of inactive sensors should be configured for.
3178:Generated_Source\PSoC4/CapSense_Sensing.c ****     *       This parameter can take the following values:
3179:Generated_Source\PSoC4/CapSense_Sensing.c ****     *        - CapSense_SCAN_CSD_E - Regular CSD scan.
3180:Generated_Source\PSoC4/CapSense_Sensing.c ****     *        - CapSense_SCAN_CSX_E - Regular CSX scan.
3181:Generated_Source\PSoC4/CapSense_Sensing.c ****     *        - CapSense_BIST_CSD_SNS_CAP_E - Measurement of the CSD sensor capacitance.
3182:Generated_Source\PSoC4/CapSense_Sensing.c ****     *        - CapSense_BIST_CSX_SNS_CAP_E - Measurement of the CSX electrode capacitance.
3183:Generated_Source\PSoC4/CapSense_Sensing.c ****     *        - CapSense_BIST_CSD_SH_CAP_E - Measurement of the dedicated CSD Shield
3184:Generated_Source\PSoC4/CapSense_Sensing.c ****     *          electrode capacitance.
3185:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
3186:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \param
3187:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  state The desired state of inactive sensors.
3188:Generated_Source\PSoC4/CapSense_Sensing.c ****     *        This parameter can take the following values:
3189:Generated_Source\PSoC4/CapSense_Sensing.c ****     *         - CapSense_SNS_CONNECTION_GROUND - Inactive sensors are connected to the ground.
3190:Generated_Source\PSoC4/CapSense_Sensing.c ****     *         - CapSense_SNS_CONNECTION_HIGHZ - Inactive sensors are floating (not
3191:Generated_Source\PSoC4/CapSense_Sensing.c ****     *           connected to GND or Shield).
3192:Generated_Source\PSoC4/CapSense_Sensing.c ****     *         - CapSense_SNS_CONNECTION_SHIELD - Inactive sensors are connected to the shield.
3193:Generated_Source\PSoC4/CapSense_Sensing.c ****     *           This option is available only if the Enable shield electrode check box is set.
3194:Generated_Source\PSoC4/CapSense_Sensing.c ****     *           At least one dedicated shield electrode is required to use the
3195:Generated_Source\PSoC4/CapSense_Sensing.c ****     *           CapSense_SNS_CONNECTION_SHIELD option for the CapSense_BIST_CSD_SH_CAP_E
3196:Generated_Source\PSoC4/CapSense_Sensing.c ****     *           operation mode.
3197:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
ARM GAS  C:\Users\mstai\AppData\Local\Temp\ccHdifRP.s 			page 88


3198:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \return
3199:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  Returns the status of the operation:
3200:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  - CYRET_SUCCESS - The operation was successfully completed.
3201:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  - CYRET_BAD_PARAM - The input parameter is invalid.
3202:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
3203:Generated_Source\PSoC4/CapSense_Sensing.c ****     *******************************************************************************/
3204:Generated_Source\PSoC4/CapSense_Sensing.c ****     uint32_t CapSense_SetInactiveElectrodeState(CapSense_OPERATION_MODE_ENUM mode, uint32_t state)
3205:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 1591              		.loc 1 3205 0
 1592              		.cfi_startproc
 1593              		@ args = 0, pretend = 0, frame = 0
 1594              		@ frame_needed = 0, uses_anonymous_args = 0
 1595              	.LVL188:
 1596 0000 10B5     		push	{r4, lr}
 1597              		.cfi_def_cfa_offset 8
 1598              		.cfi_offset 4, -8
 1599              		.cfi_offset 14, -4
 1600              	.LVL189:
3206:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint32_t retVal = CYRET_SUCCESS;
3207:Generated_Source\PSoC4/CapSense_Sensing.c **** 
3208:Generated_Source\PSoC4/CapSense_Sensing.c ****         switch(mode)
 1601              		.loc 1 3208 0
 1602 0002 0028     		cmp	r0, #0
 1603 0004 02D0     		beq	.L123
 1604 0006 0228     		cmp	r0, #2
 1605 0008 05D0     		beq	.L124
 1606 000a 09E0     		b	.L126
 1607              	.L123:
3209:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
3210:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if(CapSense_ENABLE == CapSense_CSD_EN)
3211:Generated_Source\PSoC4/CapSense_Sensing.c ****             case CapSense_SCAN_CSD_E:
3212:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_dsRam.scanCsdISC = (uint8)state;
 1608              		.loc 1 3212 0
 1609 000c 8223     		movs	r3, #130
 1610 000e 074A     		ldr	r2, .L127
 1611 0010 D154     		strb	r1, [r2, r3]
3206:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint32_t retVal = CYRET_SUCCESS;
 1612              		.loc 1 3206 0
 1613 0012 0020     		movs	r0, #0
 1614              	.LVL190:
3213:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
 1615              		.loc 1 3213 0
 1616 0014 08E0     		b	.L125
 1617              	.LVL191:
 1618              	.L124:
3214:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif
3215:Generated_Source\PSoC4/CapSense_Sensing.c **** 
3216:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if(CapSense_ENABLE == CapSense_CSX_EN)
3217:Generated_Source\PSoC4/CapSense_Sensing.c ****             case CapSense_SCAN_CSX_E:
3218:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_dsRam.scanCsxISC = (uint8)state;
3219:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
3220:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif
3221:Generated_Source\PSoC4/CapSense_Sensing.c **** 
3222:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if((CapSense_ENABLE == CapSense_SELF_TEST_EN) &&\
3223:Generated_Source\PSoC4/CapSense_Sensing.c ****             (CapSense_ENABLE == CapSense_TST_SNS_CAP_EN) &&\
3224:Generated_Source\PSoC4/CapSense_Sensing.c ****             (CapSense_ENABLE == CapSense_CSD_EN))
3225:Generated_Source\PSoC4/CapSense_Sensing.c ****             case CapSense_BIST_CSD_SNS_CAP_E:
ARM GAS  C:\Users\mstai\AppData\Local\Temp\ccHdifRP.s 			page 89


3226:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_dsRam.selfTestConfig.bistCsdSnsCapISC = (uint8)state;
 1619              		.loc 1 3226 0
 1620 0016 6E23     		movs	r3, #110
 1621 0018 044A     		ldr	r2, .L127
 1622 001a D154     		strb	r1, [r2, r3]
3206:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 1623              		.loc 1 3206 0
 1624 001c 0020     		movs	r0, #0
 1625              	.LVL192:
3227:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
 1626              		.loc 1 3227 0
 1627 001e 03E0     		b	.L125
 1628              	.LVL193:
 1629              	.L126:
3228:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif
3229:Generated_Source\PSoC4/CapSense_Sensing.c **** 
3230:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if((CapSense_ENABLE == CapSense_SELF_TEST_EN) &&\
3231:Generated_Source\PSoC4/CapSense_Sensing.c ****             (CapSense_ENABLE == CapSense_TST_SNS_CAP_EN) &&\
3232:Generated_Source\PSoC4/CapSense_Sensing.c ****             (CapSense_ENABLE == CapSense_CSX_EN))
3233:Generated_Source\PSoC4/CapSense_Sensing.c ****             case CapSense_BIST_CSX_SNS_CAP_E:
3234:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_dsRam.selfTestConfig.bistCsxSnsCapISC = (uint8)state;
3235:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
3236:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif
3237:Generated_Source\PSoC4/CapSense_Sensing.c **** 
3238:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if((CapSense_ENABLE == CapSense_SELF_TEST_EN) &&\
3239:Generated_Source\PSoC4/CapSense_Sensing.c ****             (CapSense_ENABLE == CapSense_TST_SH_CAP_EN) &&\
3240:Generated_Source\PSoC4/CapSense_Sensing.c ****             (CapSense_ENABLE == CapSense_CSD_EN) &&\
3241:Generated_Source\PSoC4/CapSense_Sensing.c ****             (CapSense_ENABLE == CapSense_CSD_SHIELD_EN))
3242:Generated_Source\PSoC4/CapSense_Sensing.c ****             case CapSense_BIST_CSD_SH_CAP_E:
3243:Generated_Source\PSoC4/CapSense_Sensing.c ****                 if((CapSense_CSD_TOTAL_SHIELD_COUNT == 0u) &&
3244:Generated_Source\PSoC4/CapSense_Sensing.c ****                    (CapSense_SNS_CONNECTION_SHIELD != state))
3245:Generated_Source\PSoC4/CapSense_Sensing.c ****                 {
3246:Generated_Source\PSoC4/CapSense_Sensing.c ****                     retVal = CYRET_BAD_PARAM;
3247:Generated_Source\PSoC4/CapSense_Sensing.c ****                 }
3248:Generated_Source\PSoC4/CapSense_Sensing.c ****                 else
3249:Generated_Source\PSoC4/CapSense_Sensing.c ****                 {
3250:Generated_Source\PSoC4/CapSense_Sensing.c ****                     CapSense_dsRam.selfTestConfig.bistCsdShCapISC = (uint8)state;
3251:Generated_Source\PSoC4/CapSense_Sensing.c ****                 }
3252:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
3253:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif
3254:Generated_Source\PSoC4/CapSense_Sensing.c **** 
3255:Generated_Source\PSoC4/CapSense_Sensing.c ****         default:
3256:Generated_Source\PSoC4/CapSense_Sensing.c ****             CYASSERT(0u);
 1630              		.loc 1 3256 0 discriminator 1
 1631 0020 0020     		movs	r0, #0
 1632              	.LVL194:
 1633 0022 FFF7FEFF 		bl	CyHalt
 1634              	.LVL195:
3257:Generated_Source\PSoC4/CapSense_Sensing.c ****             retVal = CYRET_BAD_PARAM;
 1635              		.loc 1 3257 0 discriminator 1
 1636 0026 0120     		movs	r0, #1
 1637              	.LVL196:
 1638              	.L125:
3258:Generated_Source\PSoC4/CapSense_Sensing.c ****             break;
3259:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
3260:Generated_Source\PSoC4/CapSense_Sensing.c **** 
3261:Generated_Source\PSoC4/CapSense_Sensing.c ****         return(retVal);
ARM GAS  C:\Users\mstai\AppData\Local\Temp\ccHdifRP.s 			page 90


3262:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 1639              		.loc 1 3262 0
 1640              		@ sp needed
 1641 0028 10BD     		pop	{r4, pc}
 1642              	.L128:
 1643 002a C046     		.align	2
 1644              	.L127:
 1645 002c 00000000 		.word	CapSense_dsRam
 1646              		.cfi_endproc
 1647              	.LFE26:
 1648              		.size	CapSense_SetInactiveElectrodeState, .-CapSense_SetInactiveElectrodeState
 1649              		.section	.text.CapSense_WriteBitsSafe,"ax",%progbits
 1650              		.align	2
 1651              		.global	CapSense_WriteBitsSafe
 1652              		.code	16
 1653              		.thumb_func
 1654              		.type	CapSense_WriteBitsSafe, %function
 1655              	CapSense_WriteBitsSafe:
 1656              	.LFB27:
3263:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* ((CapSense_ENABLE == CapSense_CSD_EN) ||\
3264:Generated_Source\PSoC4/CapSense_Sensing.c ****            (CapSense_ENABLE == CapSense_CSX_EN)) */
3265:Generated_Source\PSoC4/CapSense_Sensing.c **** 
3266:Generated_Source\PSoC4/CapSense_Sensing.c **** 
3267:Generated_Source\PSoC4/CapSense_Sensing.c **** /*******************************************************************************
3268:Generated_Source\PSoC4/CapSense_Sensing.c **** * Function Name: CapSense_WriteBitsSafe
3269:Generated_Source\PSoC4/CapSense_Sensing.c **** ****************************************************************************//**
3270:Generated_Source\PSoC4/CapSense_Sensing.c **** *
3271:Generated_Source\PSoC4/CapSense_Sensing.c **** * \brief
3272:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Writes a field in port-pin register, specified by the mask parameter
3273:Generated_Source\PSoC4/CapSense_Sensing.c **** *  with the specified value in critical section.
3274:Generated_Source\PSoC4/CapSense_Sensing.c **** *
3275:Generated_Source\PSoC4/CapSense_Sensing.c **** * \details
3276:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Writes a field in port-pin register, specified by the mask parameter
3277:Generated_Source\PSoC4/CapSense_Sensing.c **** *  with the specified value in critical section.
3278:Generated_Source\PSoC4/CapSense_Sensing.c **** *
3279:Generated_Source\PSoC4/CapSense_Sensing.c **** * \param regPtr
3280:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Specifies a pointer to port-pin register.
3281:Generated_Source\PSoC4/CapSense_Sensing.c **** *
3282:Generated_Source\PSoC4/CapSense_Sensing.c **** * \param mask
3283:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Specifies bits to be modified.
3284:Generated_Source\PSoC4/CapSense_Sensing.c **** *
3285:Generated_Source\PSoC4/CapSense_Sensing.c **** * \param value
3286:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Specifies a value to be written to the register.
3287:Generated_Source\PSoC4/CapSense_Sensing.c **** *
3288:Generated_Source\PSoC4/CapSense_Sensing.c **** *******************************************************************************/
3289:Generated_Source\PSoC4/CapSense_Sensing.c **** void CapSense_WriteBitsSafe(reg32 * regPtr, uint32 mask, uint32 value)
3290:Generated_Source\PSoC4/CapSense_Sensing.c **** {
 1657              		.loc 1 3290 0
 1658              		.cfi_startproc
 1659              		@ args = 0, pretend = 0, frame = 0
 1660              		@ frame_needed = 0, uses_anonymous_args = 0
 1661              	.LVL197:
 1662 0000 70B5     		push	{r4, r5, r6, lr}
 1663              		.cfi_def_cfa_offset 16
 1664              		.cfi_offset 4, -16
 1665              		.cfi_offset 5, -12
 1666              		.cfi_offset 6, -8
ARM GAS  C:\Users\mstai\AppData\Local\Temp\ccHdifRP.s 			page 91


 1667              		.cfi_offset 14, -4
 1668 0002 0500     		movs	r5, r0
 1669 0004 0E00     		movs	r6, r1
 1670 0006 1400     		movs	r4, r2
3291:Generated_Source\PSoC4/CapSense_Sensing.c ****     uint8 interruptState = CyEnterCriticalSection();
 1671              		.loc 1 3291 0
 1672 0008 FFF7FEFF 		bl	CyEnterCriticalSection
 1673              	.LVL198:
3292:Generated_Source\PSoC4/CapSense_Sensing.c ****     (* regPtr) = ((* regPtr) & ((uint32)~mask)) | (value & mask);
 1674              		.loc 1 3292 0
 1675 000c 2B68     		ldr	r3, [r5]
 1676 000e 5C40     		eors	r4, r3
 1677              	.LVL199:
 1678 0010 3440     		ands	r4, r6
 1679 0012 5C40     		eors	r4, r3
 1680 0014 2C60     		str	r4, [r5]
3293:Generated_Source\PSoC4/CapSense_Sensing.c ****     CyExitCriticalSection(interruptState);
 1681              		.loc 1 3293 0
 1682 0016 FFF7FEFF 		bl	CyExitCriticalSection
 1683              	.LVL200:
3294:Generated_Source\PSoC4/CapSense_Sensing.c **** }
 1684              		.loc 1 3294 0
 1685              		@ sp needed
 1686              	.LVL201:
 1687              	.LVL202:
 1688 001a 70BD     		pop	{r4, r5, r6, pc}
 1689              		.cfi_endproc
 1690              	.LFE27:
 1691              		.size	CapSense_WriteBitsSafe, .-CapSense_WriteBitsSafe
 1692              		.section	.text.CapSense_SsCSDDisableMode,"ax",%progbits
 1693              		.align	2
 1694              		.code	16
 1695              		.thumb_func
 1696              		.type	CapSense_SsCSDDisableMode, %function
 1697              	CapSense_SsCSDDisableMode:
 1698              	.LFB9:
 954:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if ((CapSense_ENABLE == CapSense_CSDV2) && \
 1699              		.loc 1 954 0
 1700              		.cfi_startproc
 1701              		@ args = 0, pretend = 0, frame = 0
 1702              		@ frame_needed = 0, uses_anonymous_args = 0
 1703 0000 10B5     		push	{r4, lr}
 1704              		.cfi_def_cfa_offset 8
 1705              		.cfi_offset 4, -8
 1706              		.cfi_offset 14, -4
 961:Generated_Source\PSoC4/CapSense_Sensing.c ****             newRegValue &= (uint32)(~CapSense_SW_REFGEN_SEL_SW_IAIB_MASK);
 1707              		.loc 1 961 0
 1708 0002 074A     		ldr	r2, .L131
 1709 0004 1368     		ldr	r3, [r2]
 1710              	.LVL203:
 962:Generated_Source\PSoC4/CapSense_Sensing.c ****             CY_SET_REG32(CapSense_SW_REFGEN_SEL_PTR, newRegValue);
 1711              		.loc 1 962 0
 1712 0006 0121     		movs	r1, #1
 1713 0008 8B43     		bics	r3, r1
 1714              	.LVL204:
 963:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif /* ((CapSense_ENABLE == CapSense_CSDV2) && \
 1715              		.loc 1 963 0
ARM GAS  C:\Users\mstai\AppData\Local\Temp\ccHdifRP.s 			page 92


 1716 000a 1360     		str	r3, [r2]
 968:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 1717              		.loc 1 968 0
 1718 000c 0022     		movs	r2, #0
 1719 000e F021     		movs	r1, #240
 1720 0010 0901     		lsls	r1, r1, #4
 1721 0012 0448     		ldr	r0, .L131+4
 1722 0014 FFF7FEFF 		bl	CapSense_WriteBitsSafe
 1723              	.LVL205:
 971:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 1724              		.loc 1 971 0
 1725 0018 FFF7FEFF 		bl	CapSense_SsCSDElectrodeCheck
 1726              	.LVL206:
 983:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* (CapSense_ENABLE == CapSense_CSD_EN) */
 1727              		.loc 1 983 0
 1728              		@ sp needed
 1729 001c 10BD     		pop	{r4, pc}
 1730              	.L132:
 1731 001e C046     		.align	2
 1732              	.L131:
 1733 0020 A8022940 		.word	1076429480
 1734 0024 00040240 		.word	1073873920
 1735              		.cfi_endproc
 1736              	.LFE9:
 1737              		.size	CapSense_SsCSDDisableMode, .-CapSense_SsCSDDisableMode
 1738              		.section	.text.CapSense_SsSwitchSensingMode,"ax",%progbits
 1739              		.align	2
 1740              		.global	CapSense_SsSwitchSensingMode
 1741              		.code	16
 1742              		.thumb_func
 1743              		.type	CapSense_SsSwitchSensingMode, %function
 1744              	CapSense_SsSwitchSensingMode:
 1745              	.LFB10:
1068:Generated_Source\PSoC4/CapSense_Sensing.c ****     if (CapSense_currentSenseMethod != mode)
 1746              		.loc 1 1068 0
 1747              		.cfi_startproc
 1748              		@ args = 0, pretend = 0, frame = 0
 1749              		@ frame_needed = 0, uses_anonymous_args = 0
 1750              	.LVL207:
 1751 0000 10B5     		push	{r4, lr}
 1752              		.cfi_def_cfa_offset 8
 1753              		.cfi_offset 4, -8
 1754              		.cfi_offset 14, -4
 1755 0002 0400     		movs	r4, r0
1069:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 1756              		.loc 1 1069 0
 1757 0004 144B     		ldr	r3, .L139
 1758 0006 1B78     		ldrb	r3, [r3]
 1759 0008 8342     		cmp	r3, r0
 1760 000a 23D0     		beq	.L133
1072:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 1761              		.loc 1 1072 0
 1762 000c 012B     		cmp	r3, #1
 1763 000e 02D1     		bne	.L135
1075:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif /* (CapSense_ENABLE == CapSense_CSD_EN) */
 1764              		.loc 1 1075 0
 1765 0010 FFF7FEFF 		bl	CapSense_SsCSDDisableMode
ARM GAS  C:\Users\mstai\AppData\Local\Temp\ccHdifRP.s 			page 93


 1766              	.LVL208:
 1767 0014 07E0     		b	.L136
 1768              	.LVL209:
 1769              	.L135:
1078:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 1770              		.loc 1 1078 0
 1771 0016 022B     		cmp	r3, #2
 1772 0018 05D0     		beq	.L136
1084:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 1773              		.loc 1 1084 0
 1774 001a 042B     		cmp	r3, #4
 1775 001c 03D0     		beq	.L136
1090:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 1776              		.loc 1 1090 0
 1777 001e 032B     		cmp	r3, #3
 1778 0020 01D1     		bne	.L136
1093:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif /* (CapSense_ENABLE == CapSense_SELF_TEST_EN) */
 1779              		.loc 1 1093 0
 1780 0022 FFF7FEFF 		bl	CapSense_BistDisableMode
 1781              	.LVL210:
 1782              	.L136:
1105:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 1783              		.loc 1 1105 0
 1784 0026 012C     		cmp	r4, #1
 1785 0028 05D1     		bne	.L137
1109:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_currentSenseMethod = CapSense_SENSE_METHOD_CSD_E;
 1786              		.loc 1 1109 0
 1787 002a FFF7FEFF 		bl	CapSense_SsCSDInitialize
 1788              	.LVL211:
1110:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif /* (CapSense_ENABLE == CapSense_CSD_EN) */
 1789              		.loc 1 1110 0
 1790 002e 0122     		movs	r2, #1
 1791 0030 094B     		ldr	r3, .L139
 1792 0032 1A70     		strb	r2, [r3]
 1793 0034 0EE0     		b	.L133
 1794              	.L137:
1113:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 1795              		.loc 1 1113 0
 1796 0036 022C     		cmp	r4, #2
 1797 0038 0CD0     		beq	.L133
1121:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 1798              		.loc 1 1121 0
 1799 003a 042C     		cmp	r4, #4
 1800 003c 0AD0     		beq	.L133
1129:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 1801              		.loc 1 1129 0
 1802 003e 032C     		cmp	r4, #3
 1803 0040 05D1     		bne	.L138
1132:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_currentSenseMethod = CapSense_SENSE_METHOD_BIST_E;
 1804              		.loc 1 1132 0
 1805 0042 FFF7FEFF 		bl	CapSense_BistInitialize
 1806              	.LVL212:
1133:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif /* (CapSense_ENABLE == CapSense_SELF_TEST_EN) */
 1807              		.loc 1 1133 0
 1808 0046 0322     		movs	r2, #3
 1809 0048 034B     		ldr	r3, .L139
 1810 004a 1A70     		strb	r2, [r3]
ARM GAS  C:\Users\mstai\AppData\Local\Temp\ccHdifRP.s 			page 94


 1811 004c 02E0     		b	.L133
 1812              	.L138:
1138:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
 1813              		.loc 1 1138 0
 1814 004e 0022     		movs	r2, #0
 1815 0050 014B     		ldr	r3, .L139
 1816 0052 1A70     		strb	r2, [r3]
 1817              	.L133:
1141:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 1818              		.loc 1 1141 0
 1819              		@ sp needed
 1820 0054 10BD     		pop	{r4, pc}
 1821              	.L140:
 1822 0056 C046     		.align	2
 1823              	.L139:
 1824 0058 00000000 		.word	.LANCHOR0
 1825              		.cfi_endproc
 1826              	.LFE10:
 1827              		.size	CapSense_SsSwitchSensingMode, .-CapSense_SsSwitchSensingMode
 1828              		.section	.text.CapSense_SsInitialize,"ax",%progbits
 1829              		.align	2
 1830              		.global	CapSense_SsInitialize
 1831              		.code	16
 1832              		.thumb_func
 1833              		.type	CapSense_SsInitialize, %function
 1834              	CapSense_SsInitialize:
 1835              	.LFB7:
 708:Generated_Source\PSoC4/CapSense_Sensing.c ****     cystatus initStatus;
 1836              		.loc 1 708 0
 1837              		.cfi_startproc
 1838              		@ args = 0, pretend = 0, frame = 0
 1839              		@ frame_needed = 0, uses_anonymous_args = 0
 1840 0000 10B5     		push	{r4, lr}
 1841              		.cfi_def_cfa_offset 8
 1842              		.cfi_offset 4, -8
 1843              		.cfi_offset 14, -4
 1844              	.LVL213:
 747:Generated_Source\PSoC4/CapSense_Sensing.c ****     #endif /* ((CapSense_ENABLE == CapSense_CSD_EN) ||\
 1845              		.loc 1 747 0
 1846 0002 FFF7FEFF 		bl	CapSense_SsInitializeSourceSenseClk
 1847              	.LVL214:
 752:Generated_Source\PSoC4/CapSense_Sensing.c ****     CapSense_dsRam.scanCurrentISC = CapSense_SNS_CONNECTION_GROUND;
 1848              		.loc 1 752 0
 1849 0006 0020     		movs	r0, #0
 1850 0008 FFF7FEFF 		bl	CapSense_SsSetAllIOsState
 1851              	.LVL215:
 753:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 1852              		.loc 1 753 0
 1853 000c 0021     		movs	r1, #0
 1854 000e 8323     		movs	r3, #131
 1855 0010 034A     		ldr	r2, .L142
 1856 0012 D154     		strb	r1, [r2, r3]
 755:Generated_Source\PSoC4/CapSense_Sensing.c ****     #if (CapSense_ENABLE == CapSense_MANY_SENSE_MODES_EN)
 1857              		.loc 1 755 0
 1858 0014 0020     		movs	r0, #0
 1859 0016 FFF7FEFF 		bl	CapSense_SsSwitchSensingMode
 1860              	.LVL216:
ARM GAS  C:\Users\mstai\AppData\Local\Temp\ccHdifRP.s 			page 95


 769:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 1861              		.loc 1 769 0
 1862 001a 0020     		movs	r0, #0
 1863              		@ sp needed
 1864 001c 10BD     		pop	{r4, pc}
 1865              	.L143:
 1866 001e C046     		.align	2
 1867              	.L142:
 1868 0020 00000000 		.word	CapSense_dsRam
 1869              		.cfi_endproc
 1870              	.LFE7:
 1871              		.size	CapSense_SsInitialize, .-CapSense_SsInitialize
 1872              		.global	CapSense_idacGainTable
 1873              		.comm	CapSense_curSnsIOPtr,4,4
 1874              		.comm	CapSense_curRamSnsPtr,4,4
 1875              		.global	CapSense_requestScanAllWidget
 1876              		.global	CapSense_sensorIndex
 1877              		.global	CapSense_widgetIndex
 1878              		.global	CapSense_scanFreqIndex
 1879              		.global	CapSense_currentSenseMethod
 1880              		.section	.rodata
 1881              		.align	2
 1882              		.type	CapSense_idacGainTable, %object
 1883              		.size	CapSense_idacGainTable, 56
 1884              	CapSense_idacGainTable:
 1885 0000 00000001 		.word	16777216
 1886 0004 7C920000 		.word	37500
 1887 0008 00000003 		.word	50331648
 1888 000c F8240100 		.word	75000
 1889 0010 00004001 		.word	20971520
 1890 0014 E0930400 		.word	300000
 1891 0018 00004003 		.word	54525952
 1892 001c C0270900 		.word	600000
 1893 0020 0000C001 		.word	29360128
 1894 0024 804F1200 		.word	1200000
 1895 0028 00008001 		.word	25165824
 1896 002c 009F2400 		.word	2400000
 1897 0030 00008003 		.word	58720256
 1898 0034 003E4900 		.word	4800000
 1899              		.type	CapSense_scanFreqIndex, %object
 1900              		.size	CapSense_scanFreqIndex, 1
 1901              	CapSense_scanFreqIndex:
 1902 0038 00       		.space	1
 1903              		.bss
 1904              		.set	.LANCHOR0,. + 0
 1905              		.type	CapSense_currentSenseMethod, %object
 1906              		.size	CapSense_currentSenseMethod, 1
 1907              	CapSense_currentSenseMethod:
 1908 0000 00       		.space	1
 1909              		.type	CapSense_requestScanAllWidget, %object
 1910              		.size	CapSense_requestScanAllWidget, 1
 1911              	CapSense_requestScanAllWidget:
 1912 0001 00       		.space	1
 1913              		.type	CapSense_sensorIndex, %object
 1914              		.size	CapSense_sensorIndex, 1
 1915              	CapSense_sensorIndex:
 1916 0002 00       		.space	1
ARM GAS  C:\Users\mstai\AppData\Local\Temp\ccHdifRP.s 			page 96


 1917              		.type	CapSense_widgetIndex, %object
 1918              		.size	CapSense_widgetIndex, 1
 1919              	CapSense_widgetIndex:
 1920 0003 00       		.space	1
 1921              		.text
 1922              	.Letext0:
 1923              		.file 2 "c:\\users\\mstai\\onedrive\\desktop\\tesi robotica\\psoc creator\\4.2\\psoc creator\\impo
 1924              		.file 3 "c:\\users\\mstai\\onedrive\\desktop\\tesi robotica\\psoc creator\\4.2\\psoc creator\\impo
 1925              		.file 4 "Generated_Source\\PSoC4/cytypes.h"
 1926              		.file 5 "Generated_Source\\PSoC4\\CapSense_Configuration.h"
 1927              		.file 6 "Generated_Source\\PSoC4\\CapSense_Structure.h"
 1928              		.file 7 "Generated_Source\\PSoC4\\CapSense_Sensing.h"
 1929              		.file 8 "Generated_Source\\PSoC4\\CapSense_SensingCSD_LL.h"
 1930              		.file 9 "Generated_Source\\PSoC4/CyLib.h"
 1931              		.file 10 "Generated_Source\\PSoC4\\CapSense_ISR.h"
 1932              		.file 11 "Generated_Source\\PSoC4\\CapSense_SelfTest.h"
 1933              		.section	.debug_info,"",%progbits
 1934              	.Ldebug_info0:
 1935 0000 43140000 		.4byte	0x1443
 1936 0004 0400     		.2byte	0x4
 1937 0006 00000000 		.4byte	.Ldebug_abbrev0
 1938 000a 04       		.byte	0x4
 1939 000b 01       		.uleb128 0x1
 1940 000c B5020000 		.4byte	.LASF236
 1941 0010 0C       		.byte	0xc
 1942 0011 340B0000 		.4byte	.LASF237
 1943 0015 E40D0000 		.4byte	.LASF238
 1944 0019 00000000 		.4byte	.Ldebug_ranges0+0
 1945 001d 00000000 		.4byte	0
 1946 0021 00000000 		.4byte	.Ldebug_line0
 1947 0025 02       		.uleb128 0x2
 1948 0026 01       		.byte	0x1
 1949 0027 06       		.byte	0x6
 1950 0028 2F020000 		.4byte	.LASF0
 1951 002c 02       		.uleb128 0x2
 1952 002d 01       		.byte	0x1
 1953 002e 08       		.byte	0x8
 1954 002f 8A0C0000 		.4byte	.LASF1
 1955 0033 02       		.uleb128 0x2
 1956 0034 02       		.byte	0x2
 1957 0035 05       		.byte	0x5
 1958 0036 E2090000 		.4byte	.LASF2
 1959 003a 02       		.uleb128 0x2
 1960 003b 02       		.byte	0x2
 1961 003c 07       		.byte	0x7
 1962 003d 390E0000 		.4byte	.LASF3
 1963 0041 02       		.uleb128 0x2
 1964 0042 04       		.byte	0x4
 1965 0043 05       		.byte	0x5
 1966 0044 1A0A0000 		.4byte	.LASF4
 1967 0048 03       		.uleb128 0x3
 1968 0049 980C0000 		.4byte	.LASF9
 1969 004d 02       		.byte	0x2
 1970 004e 41       		.byte	0x41
 1971 004f 53000000 		.4byte	0x53
 1972 0053 02       		.uleb128 0x2
 1973 0054 04       		.byte	0x4
ARM GAS  C:\Users\mstai\AppData\Local\Temp\ccHdifRP.s 			page 97


 1974 0055 07       		.byte	0x7
 1975 0056 C60B0000 		.4byte	.LASF5
 1976 005a 02       		.uleb128 0x2
 1977 005b 08       		.byte	0x8
 1978 005c 05       		.byte	0x5
 1979 005d F9060000 		.4byte	.LASF6
 1980 0061 02       		.uleb128 0x2
 1981 0062 08       		.byte	0x8
 1982 0063 07       		.byte	0x7
 1983 0064 81030000 		.4byte	.LASF7
 1984 0068 04       		.uleb128 0x4
 1985 0069 04       		.byte	0x4
 1986 006a 05       		.byte	0x5
 1987 006b 696E7400 		.ascii	"int\000"
 1988 006f 02       		.uleb128 0x2
 1989 0070 04       		.byte	0x4
 1990 0071 07       		.byte	0x7
 1991 0072 C2000000 		.4byte	.LASF8
 1992 0076 03       		.uleb128 0x3
 1993 0077 43020000 		.4byte	.LASF10
 1994 007b 03       		.byte	0x3
 1995 007c 30       		.byte	0x30
 1996 007d 48000000 		.4byte	0x48
 1997 0081 05       		.uleb128 0x5
 1998 0082 AE0E0000 		.4byte	.LASF11
 1999 0086 04       		.byte	0x4
 2000 0087 E401     		.2byte	0x1e4
 2001 0089 2C000000 		.4byte	0x2c
 2002 008d 05       		.uleb128 0x5
 2003 008e 11060000 		.4byte	.LASF12
 2004 0092 04       		.byte	0x4
 2005 0093 E501     		.2byte	0x1e5
 2006 0095 3A000000 		.4byte	0x3a
 2007 0099 05       		.uleb128 0x5
 2008 009a 4D080000 		.4byte	.LASF13
 2009 009e 04       		.byte	0x4
 2010 009f E601     		.2byte	0x1e6
 2011 00a1 53000000 		.4byte	0x53
 2012 00a5 02       		.uleb128 0x2
 2013 00a6 04       		.byte	0x4
 2014 00a7 04       		.byte	0x4
 2015 00a8 A9020000 		.4byte	.LASF14
 2016 00ac 02       		.uleb128 0x2
 2017 00ad 08       		.byte	0x8
 2018 00ae 04       		.byte	0x4
 2019 00af B40E0000 		.4byte	.LASF15
 2020 00b3 02       		.uleb128 0x2
 2021 00b4 01       		.byte	0x1
 2022 00b5 08       		.byte	0x8
 2023 00b6 5C050000 		.4byte	.LASF16
 2024 00ba 05       		.uleb128 0x5
 2025 00bb 810C0000 		.4byte	.LASF17
 2026 00bf 04       		.byte	0x4
 2027 00c0 8602     		.2byte	0x286
 2028 00c2 53000000 		.4byte	0x53
 2029 00c6 06       		.uleb128 0x6
 2030 00c7 81000000 		.4byte	0x81
ARM GAS  C:\Users\mstai\AppData\Local\Temp\ccHdifRP.s 			page 98


 2031 00cb 05       		.uleb128 0x5
 2032 00cc 58090000 		.4byte	.LASF18
 2033 00d0 04       		.byte	0x4
 2034 00d1 9002     		.2byte	0x290
 2035 00d3 D7000000 		.4byte	0xd7
 2036 00d7 06       		.uleb128 0x6
 2037 00d8 99000000 		.4byte	0x99
 2038 00dc 05       		.uleb128 0x5
 2039 00dd F9070000 		.4byte	.LASF19
 2040 00e1 04       		.byte	0x4
 2041 00e2 A002     		.2byte	0x2a0
 2042 00e4 E8000000 		.4byte	0xe8
 2043 00e8 07       		.uleb128 0x7
 2044 00e9 04       		.byte	0x4
 2045 00ea EE000000 		.4byte	0xee
 2046 00ee 08       		.uleb128 0x8
 2047 00ef 05       		.uleb128 0x5
 2048 00f0 E60C0000 		.4byte	.LASF20
 2049 00f4 05       		.byte	0x5
 2050 00f5 1E01     		.2byte	0x11e
 2051 00f7 8D000000 		.4byte	0x8d
 2052 00fb 05       		.uleb128 0x5
 2053 00fc 73060000 		.4byte	.LASF21
 2054 0100 05       		.byte	0x5
 2055 0101 2201     		.2byte	0x122
 2056 0103 81000000 		.4byte	0x81
 2057 0107 09       		.uleb128 0x9
 2058 0108 01       		.byte	0x1
 2059 0109 2C000000 		.4byte	0x2c
 2060 010d 06       		.byte	0x6
 2061 010e 70       		.byte	0x70
 2062 010f 32010000 		.4byte	0x132
 2063 0113 0A       		.uleb128 0xa
 2064 0114 AD000000 		.4byte	.LASF22
 2065 0118 00       		.byte	0
 2066 0119 0A       		.uleb128 0xa
 2067 011a 750B0000 		.4byte	.LASF23
 2068 011e 01       		.byte	0x1
 2069 011f 0A       		.uleb128 0xa
 2070 0120 420A0000 		.4byte	.LASF24
 2071 0124 02       		.byte	0x2
 2072 0125 0A       		.uleb128 0xa
 2073 0126 1B0D0000 		.4byte	.LASF25
 2074 012a 03       		.byte	0x3
 2075 012b 0A       		.uleb128 0xa
 2076 012c 11090000 		.4byte	.LASF26
 2077 0130 04       		.byte	0x4
 2078 0131 00       		.byte	0
 2079 0132 03       		.uleb128 0x3
 2080 0133 AC060000 		.4byte	.LASF27
 2081 0137 06       		.byte	0x6
 2082 0138 76       		.byte	0x76
 2083 0139 07010000 		.4byte	0x107
 2084 013d 0B       		.uleb128 0xb
 2085 013e 12       		.byte	0x12
 2086 013f 06       		.byte	0x6
 2087 0140 AD       		.byte	0xad
ARM GAS  C:\Users\mstai\AppData\Local\Temp\ccHdifRP.s 			page 99


 2088 0141 D6010000 		.4byte	0x1d6
 2089 0145 0C       		.uleb128 0xc
 2090 0146 63726300 		.ascii	"crc\000"
 2091 014a 06       		.byte	0x6
 2092 014b B2       		.byte	0xb2
 2093 014c 8D000000 		.4byte	0x8d
 2094 0150 00       		.byte	0
 2095 0151 0D       		.uleb128 0xd
 2096 0152 34060000 		.4byte	.LASF28
 2097 0156 06       		.byte	0x6
 2098 0157 B7       		.byte	0xb7
 2099 0158 8D000000 		.4byte	0x8d
 2100 015c 02       		.byte	0x2
 2101 015d 0D       		.uleb128 0xd
 2102 015e 320C0000 		.4byte	.LASF29
 2103 0162 06       		.byte	0x6
 2104 0163 BC       		.byte	0xbc
 2105 0164 EF000000 		.4byte	0xef
 2106 0168 04       		.byte	0x4
 2107 0169 0D       		.uleb128 0xd
 2108 016a 54050000 		.4byte	.LASF30
 2109 016e 06       		.byte	0x6
 2110 016f C1       		.byte	0xc1
 2111 0170 81000000 		.4byte	0x81
 2112 0174 06       		.byte	0x6
 2113 0175 0D       		.uleb128 0xd
 2114 0176 E5070000 		.4byte	.LASF31
 2115 017a 06       		.byte	0x6
 2116 017b C6       		.byte	0xc6
 2117 017c 81000000 		.4byte	0x81
 2118 0180 07       		.byte	0x7
 2119 0181 0D       		.uleb128 0xd
 2120 0182 AB040000 		.4byte	.LASF32
 2121 0186 06       		.byte	0x6
 2122 0187 CC       		.byte	0xcc
 2123 0188 81000000 		.4byte	0x81
 2124 018c 08       		.byte	0x8
 2125 018d 0D       		.uleb128 0xd
 2126 018e 39070000 		.4byte	.LASF33
 2127 0192 06       		.byte	0x6
 2128 0193 D2       		.byte	0xd2
 2129 0194 81000000 		.4byte	0x81
 2130 0198 09       		.byte	0x9
 2131 0199 0D       		.uleb128 0xd
 2132 019a E5040000 		.4byte	.LASF34
 2133 019e 06       		.byte	0x6
 2134 019f D9       		.byte	0xd9
 2135 01a0 FB000000 		.4byte	0xfb
 2136 01a4 0A       		.byte	0xa
 2137 01a5 0D       		.uleb128 0xd
 2138 01a6 F90B0000 		.4byte	.LASF35
 2139 01aa 06       		.byte	0x6
 2140 01ab E0       		.byte	0xe0
 2141 01ac D6010000 		.4byte	0x1d6
 2142 01b0 0B       		.byte	0xb
 2143 01b1 0D       		.uleb128 0xd
 2144 01b2 6C020000 		.4byte	.LASF36
ARM GAS  C:\Users\mstai\AppData\Local\Temp\ccHdifRP.s 			page 100


 2145 01b6 06       		.byte	0x6
 2146 01b7 E5       		.byte	0xe5
 2147 01b8 81000000 		.4byte	0x81
 2148 01bc 0C       		.byte	0xc
 2149 01bd 0D       		.uleb128 0xd
 2150 01be 720D0000 		.4byte	.LASF37
 2151 01c2 06       		.byte	0x6
 2152 01c3 ED       		.byte	0xed
 2153 01c4 8D000000 		.4byte	0x8d
 2154 01c8 0E       		.byte	0xe
 2155 01c9 0D       		.uleb128 0xd
 2156 01ca 9F090000 		.4byte	.LASF38
 2157 01ce 06       		.byte	0x6
 2158 01cf F2       		.byte	0xf2
 2159 01d0 81000000 		.4byte	0x81
 2160 01d4 10       		.byte	0x10
 2161 01d5 00       		.byte	0
 2162 01d6 0E       		.uleb128 0xe
 2163 01d7 81000000 		.4byte	0x81
 2164 01db E6010000 		.4byte	0x1e6
 2165 01df 0F       		.uleb128 0xf
 2166 01e0 E6010000 		.4byte	0x1e6
 2167 01e4 00       		.byte	0
 2168 01e5 00       		.byte	0
 2169 01e6 02       		.uleb128 0x2
 2170 01e7 04       		.byte	0x4
 2171 01e8 07       		.byte	0x7
 2172 01e9 B50B0000 		.4byte	.LASF39
 2173 01ed 03       		.uleb128 0x3
 2174 01ee 17080000 		.4byte	.LASF40
 2175 01f2 06       		.byte	0x6
 2176 01f3 F3       		.byte	0xf3
 2177 01f4 3D010000 		.4byte	0x13d
 2178 01f8 0B       		.uleb128 0xb
 2179 01f9 12       		.byte	0x12
 2180 01fa 06       		.byte	0x6
 2181 01fb F8       		.byte	0xf8
 2182 01fc 9C020000 		.4byte	0x29c
 2183 0200 0C       		.uleb128 0xc
 2184 0201 63726300 		.ascii	"crc\000"
 2185 0205 06       		.byte	0x6
 2186 0206 FD       		.byte	0xfd
 2187 0207 8D000000 		.4byte	0x8d
 2188 020b 00       		.byte	0
 2189 020c 10       		.uleb128 0x10
 2190 020d 34060000 		.4byte	.LASF28
 2191 0211 06       		.byte	0x6
 2192 0212 0201     		.2byte	0x102
 2193 0214 8D000000 		.4byte	0x8d
 2194 0218 02       		.byte	0x2
 2195 0219 10       		.uleb128 0x10
 2196 021a 320C0000 		.4byte	.LASF29
 2197 021e 06       		.byte	0x6
 2198 021f 0701     		.2byte	0x107
 2199 0221 EF000000 		.4byte	0xef
 2200 0225 04       		.byte	0x4
 2201 0226 10       		.uleb128 0x10
ARM GAS  C:\Users\mstai\AppData\Local\Temp\ccHdifRP.s 			page 101


 2202 0227 54050000 		.4byte	.LASF30
 2203 022b 06       		.byte	0x6
 2204 022c 0C01     		.2byte	0x10c
 2205 022e 81000000 		.4byte	0x81
 2206 0232 06       		.byte	0x6
 2207 0233 10       		.uleb128 0x10
 2208 0234 E5070000 		.4byte	.LASF31
 2209 0238 06       		.byte	0x6
 2210 0239 1101     		.2byte	0x111
 2211 023b 81000000 		.4byte	0x81
 2212 023f 07       		.byte	0x7
 2213 0240 10       		.uleb128 0x10
 2214 0241 AB040000 		.4byte	.LASF32
 2215 0245 06       		.byte	0x6
 2216 0246 1701     		.2byte	0x117
 2217 0248 81000000 		.4byte	0x81
 2218 024c 08       		.byte	0x8
 2219 024d 10       		.uleb128 0x10
 2220 024e 39070000 		.4byte	.LASF33
 2221 0252 06       		.byte	0x6
 2222 0253 1D01     		.2byte	0x11d
 2223 0255 81000000 		.4byte	0x81
 2224 0259 09       		.byte	0x9
 2225 025a 10       		.uleb128 0x10
 2226 025b E5040000 		.4byte	.LASF34
 2227 025f 06       		.byte	0x6
 2228 0260 2401     		.2byte	0x124
 2229 0262 FB000000 		.4byte	0xfb
 2230 0266 0A       		.byte	0xa
 2231 0267 10       		.uleb128 0x10
 2232 0268 F90B0000 		.4byte	.LASF35
 2233 026c 06       		.byte	0x6
 2234 026d 2B01     		.2byte	0x12b
 2235 026f D6010000 		.4byte	0x1d6
 2236 0273 0B       		.byte	0xb
 2237 0274 10       		.uleb128 0x10
 2238 0275 6C020000 		.4byte	.LASF36
 2239 0279 06       		.byte	0x6
 2240 027a 3001     		.2byte	0x130
 2241 027c 81000000 		.4byte	0x81
 2242 0280 0C       		.byte	0xc
 2243 0281 10       		.uleb128 0x10
 2244 0282 720D0000 		.4byte	.LASF37
 2245 0286 06       		.byte	0x6
 2246 0287 3801     		.2byte	0x138
 2247 0289 8D000000 		.4byte	0x8d
 2248 028d 0E       		.byte	0xe
 2249 028e 10       		.uleb128 0x10
 2250 028f 9F090000 		.4byte	.LASF38
 2251 0293 06       		.byte	0x6
 2252 0294 3D01     		.2byte	0x13d
 2253 0296 81000000 		.4byte	0x81
 2254 029a 10       		.byte	0x10
 2255 029b 00       		.byte	0
 2256 029c 05       		.uleb128 0x5
 2257 029d 630C0000 		.4byte	.LASF41
 2258 02a1 06       		.byte	0x6
ARM GAS  C:\Users\mstai\AppData\Local\Temp\ccHdifRP.s 			page 102


 2259 02a2 3E01     		.2byte	0x13e
 2260 02a4 F8010000 		.4byte	0x1f8
 2261 02a8 11       		.uleb128 0x11
 2262 02a9 12       		.byte	0x12
 2263 02aa 06       		.byte	0x6
 2264 02ab 4401     		.2byte	0x144
 2265 02ad BF020000 		.4byte	0x2bf
 2266 02b1 10       		.uleb128 0x10
 2267 02b2 3C0A0000 		.4byte	.LASF42
 2268 02b6 06       		.byte	0x6
 2269 02b7 4901     		.2byte	0x149
 2270 02b9 9C020000 		.4byte	0x29c
 2271 02bd 00       		.byte	0
 2272 02be 00       		.byte	0
 2273 02bf 05       		.uleb128 0x5
 2274 02c0 FA010000 		.4byte	.LASF43
 2275 02c4 06       		.byte	0x6
 2276 02c5 4A01     		.2byte	0x14a
 2277 02c7 A8020000 		.4byte	0x2a8
 2278 02cb 11       		.uleb128 0x11
 2279 02cc 0C       		.byte	0xc
 2280 02cd 06       		.byte	0x6
 2281 02ce 5001     		.2byte	0x150
 2282 02d0 30030000 		.4byte	0x330
 2283 02d4 12       		.uleb128 0x12
 2284 02d5 72617700 		.ascii	"raw\000"
 2285 02d9 06       		.byte	0x6
 2286 02da 5501     		.2byte	0x155
 2287 02dc 30030000 		.4byte	0x330
 2288 02e0 00       		.byte	0
 2289 02e1 10       		.uleb128 0x10
 2290 02e2 340E0000 		.4byte	.LASF44
 2291 02e6 06       		.byte	0x6
 2292 02e7 5A01     		.2byte	0x15a
 2293 02e9 30030000 		.4byte	0x330
 2294 02ed 02       		.byte	0x2
 2295 02ee 10       		.uleb128 0x10
 2296 02ef 3E0D0000 		.4byte	.LASF45
 2297 02f3 06       		.byte	0x6
 2298 02f4 5F01     		.2byte	0x15f
 2299 02f6 30030000 		.4byte	0x330
 2300 02fa 04       		.byte	0x4
 2301 02fb 10       		.uleb128 0x10
 2302 02fc 3B0C0000 		.4byte	.LASF46
 2303 0300 06       		.byte	0x6
 2304 0301 6501     		.2byte	0x165
 2305 0303 D6010000 		.4byte	0x1d6
 2306 0307 06       		.byte	0x6
 2307 0308 10       		.uleb128 0x10
 2308 0309 2E0A0000 		.4byte	.LASF47
 2309 030d 06       		.byte	0x6
 2310 030e 6A01     		.2byte	0x16a
 2311 0310 EF000000 		.4byte	0xef
 2312 0314 08       		.byte	0x8
 2313 0315 10       		.uleb128 0x10
 2314 0316 BB0E0000 		.4byte	.LASF48
 2315 031a 06       		.byte	0x6
ARM GAS  C:\Users\mstai\AppData\Local\Temp\ccHdifRP.s 			page 103


 2316 031b 6F01     		.2byte	0x16f
 2317 031d 40030000 		.4byte	0x340
 2318 0321 0A       		.byte	0xa
 2319 0322 10       		.uleb128 0x10
 2320 0323 EA060000 		.4byte	.LASF49
 2321 0327 06       		.byte	0x6
 2322 0328 7401     		.2byte	0x174
 2323 032a D6010000 		.4byte	0x1d6
 2324 032e 0B       		.byte	0xb
 2325 032f 00       		.byte	0
 2326 0330 0E       		.uleb128 0xe
 2327 0331 8D000000 		.4byte	0x8d
 2328 0335 40030000 		.4byte	0x340
 2329 0339 0F       		.uleb128 0xf
 2330 033a E6010000 		.4byte	0x1e6
 2331 033e 00       		.byte	0
 2332 033f 00       		.byte	0
 2333 0340 0E       		.uleb128 0xe
 2334 0341 FB000000 		.4byte	0xfb
 2335 0345 50030000 		.4byte	0x350
 2336 0349 0F       		.uleb128 0xf
 2337 034a E6010000 		.4byte	0x1e6
 2338 034e 00       		.byte	0
 2339 034f 00       		.byte	0
 2340 0350 05       		.uleb128 0x5
 2341 0351 55040000 		.4byte	.LASF50
 2342 0355 06       		.byte	0x6
 2343 0356 7501     		.2byte	0x175
 2344 0358 CB020000 		.4byte	0x2cb
 2345 035c 11       		.uleb128 0x11
 2346 035d 0C       		.byte	0xc
 2347 035e 06       		.byte	0x6
 2348 035f 7B01     		.2byte	0x17b
 2349 0361 73030000 		.4byte	0x373
 2350 0365 10       		.uleb128 0x10
 2351 0366 3C0A0000 		.4byte	.LASF42
 2352 036a 06       		.byte	0x6
 2353 036b 8001     		.2byte	0x180
 2354 036d 73030000 		.4byte	0x373
 2355 0371 00       		.byte	0
 2356 0372 00       		.byte	0
 2357 0373 0E       		.uleb128 0xe
 2358 0374 50030000 		.4byte	0x350
 2359 0378 83030000 		.4byte	0x383
 2360 037c 0F       		.uleb128 0xf
 2361 037d E6010000 		.4byte	0x1e6
 2362 0381 00       		.byte	0
 2363 0382 00       		.byte	0
 2364 0383 05       		.uleb128 0x5
 2365 0384 8F0F0000 		.4byte	.LASF51
 2366 0388 06       		.byte	0x6
 2367 0389 8101     		.2byte	0x181
 2368 038b 5C030000 		.4byte	0x35c
 2369 038f 11       		.uleb128 0x11
 2370 0390 14       		.byte	0x14
 2371 0391 06       		.byte	0x6
 2372 0392 8701     		.2byte	0x187
ARM GAS  C:\Users\mstai\AppData\Local\Temp\ccHdifRP.s 			page 104


 2373 0394 35040000 		.4byte	0x435
 2374 0398 10       		.uleb128 0x10
 2375 0399 00050000 		.4byte	.LASF52
 2376 039d 06       		.byte	0x6
 2377 039e 8C01     		.2byte	0x18c
 2378 03a0 99000000 		.4byte	0x99
 2379 03a4 00       		.byte	0
 2380 03a5 10       		.uleb128 0x10
 2381 03a6 CF0A0000 		.4byte	.LASF53
 2382 03aa 06       		.byte	0x6
 2383 03ab 9101     		.2byte	0x191
 2384 03ad 30030000 		.4byte	0x330
 2385 03b1 04       		.byte	0x4
 2386 03b2 10       		.uleb128 0x10
 2387 03b3 280B0000 		.4byte	.LASF54
 2388 03b7 06       		.byte	0x6
 2389 03b8 9601     		.2byte	0x196
 2390 03ba 8D000000 		.4byte	0x8d
 2391 03be 06       		.byte	0x6
 2392 03bf 10       		.uleb128 0x10
 2393 03c0 06060000 		.4byte	.LASF55
 2394 03c4 06       		.byte	0x6
 2395 03c5 9B01     		.2byte	0x19b
 2396 03c7 8D000000 		.4byte	0x8d
 2397 03cb 08       		.byte	0x8
 2398 03cc 10       		.uleb128 0x10
 2399 03cd 160C0000 		.4byte	.LASF56
 2400 03d1 06       		.byte	0x6
 2401 03d2 A101     		.2byte	0x1a1
 2402 03d4 8D000000 		.4byte	0x8d
 2403 03d8 0A       		.byte	0xa
 2404 03d9 10       		.uleb128 0x10
 2405 03da E70A0000 		.4byte	.LASF57
 2406 03de 06       		.byte	0x6
 2407 03df A701     		.2byte	0x1a7
 2408 03e1 81000000 		.4byte	0x81
 2409 03e5 0C       		.byte	0xc
 2410 03e6 10       		.uleb128 0x10
 2411 03e7 AD0A0000 		.4byte	.LASF58
 2412 03eb 06       		.byte	0x6
 2413 03ec AC01     		.2byte	0x1ac
 2414 03ee 81000000 		.4byte	0x81
 2415 03f2 0D       		.byte	0xd
 2416 03f3 10       		.uleb128 0x10
 2417 03f4 27060000 		.4byte	.LASF59
 2418 03f8 06       		.byte	0x6
 2419 03f9 B101     		.2byte	0x1b1
 2420 03fb 81000000 		.4byte	0x81
 2421 03ff 0E       		.byte	0xe
 2422 0400 10       		.uleb128 0x10
 2423 0401 3D040000 		.4byte	.LASF60
 2424 0405 06       		.byte	0x6
 2425 0406 B601     		.2byte	0x1b6
 2426 0408 81000000 		.4byte	0x81
 2427 040c 0F       		.byte	0xf
 2428 040d 10       		.uleb128 0x10
 2429 040e D8070000 		.4byte	.LASF61
ARM GAS  C:\Users\mstai\AppData\Local\Temp\ccHdifRP.s 			page 105


 2430 0412 06       		.byte	0x6
 2431 0413 BB01     		.2byte	0x1bb
 2432 0415 81000000 		.4byte	0x81
 2433 0419 10       		.byte	0x10
 2434 041a 10       		.uleb128 0x10
 2435 041b 6C020000 		.4byte	.LASF36
 2436 041f 06       		.byte	0x6
 2437 0420 C001     		.2byte	0x1c0
 2438 0422 81000000 		.4byte	0x81
 2439 0426 11       		.byte	0x11
 2440 0427 10       		.uleb128 0x10
 2441 0428 720D0000 		.4byte	.LASF37
 2442 042c 06       		.byte	0x6
 2443 042d C501     		.2byte	0x1c5
 2444 042f 8D000000 		.4byte	0x8d
 2445 0433 12       		.byte	0x12
 2446 0434 00       		.byte	0
 2447 0435 05       		.uleb128 0x5
 2448 0436 E8050000 		.4byte	.LASF62
 2449 043a 06       		.byte	0x6
 2450 043b C601     		.2byte	0x1c6
 2451 043d 8F030000 		.4byte	0x38f
 2452 0441 11       		.uleb128 0x11
 2453 0442 04       		.byte	0x4
 2454 0443 06       		.byte	0x6
 2455 0444 CC01     		.2byte	0x1cc
 2456 0446 58040000 		.4byte	0x458
 2457 044a 10       		.uleb128 0x10
 2458 044b 3C0A0000 		.4byte	.LASF42
 2459 044f 06       		.byte	0x6
 2460 0450 D101     		.2byte	0x1d1
 2461 0452 58040000 		.4byte	0x458
 2462 0456 00       		.byte	0
 2463 0457 00       		.byte	0
 2464 0458 0E       		.uleb128 0xe
 2465 0459 99000000 		.4byte	0x99
 2466 045d 68040000 		.4byte	0x468
 2467 0461 0F       		.uleb128 0xf
 2468 0462 E6010000 		.4byte	0x1e6
 2469 0466 00       		.byte	0
 2470 0467 00       		.byte	0
 2471 0468 05       		.uleb128 0x5
 2472 0469 78010000 		.4byte	.LASF63
 2473 046d 06       		.byte	0x6
 2474 046e D201     		.2byte	0x1d2
 2475 0470 41040000 		.4byte	0x441
 2476 0474 11       		.uleb128 0x11
 2477 0475 20       		.byte	0x20
 2478 0476 06       		.byte	0x6
 2479 0477 D701     		.2byte	0x1d7
 2480 0479 82050000 		.4byte	0x582
 2481 047d 10       		.uleb128 0x10
 2482 047e AC0F0000 		.4byte	.LASF64
 2483 0482 06       		.byte	0x6
 2484 0483 DC01     		.2byte	0x1dc
 2485 0485 99000000 		.4byte	0x99
 2486 0489 00       		.byte	0
ARM GAS  C:\Users\mstai\AppData\Local\Temp\ccHdifRP.s 			page 106


 2487 048a 10       		.uleb128 0x10
 2488 048b D4010000 		.4byte	.LASF65
 2489 048f 06       		.byte	0x6
 2490 0490 E101     		.2byte	0x1e1
 2491 0492 8D000000 		.4byte	0x8d
 2492 0496 04       		.byte	0x4
 2493 0497 10       		.uleb128 0x10
 2494 0498 790A0000 		.4byte	.LASF66
 2495 049c 06       		.byte	0x6
 2496 049d E601     		.2byte	0x1e6
 2497 049f 8D000000 		.4byte	0x8d
 2498 04a3 06       		.byte	0x6
 2499 04a4 10       		.uleb128 0x10
 2500 04a5 BB0A0000 		.4byte	.LASF67
 2501 04a9 06       		.byte	0x6
 2502 04aa EB01     		.2byte	0x1eb
 2503 04ac 8D000000 		.4byte	0x8d
 2504 04b0 08       		.byte	0x8
 2505 04b1 10       		.uleb128 0x10
 2506 04b2 960D0000 		.4byte	.LASF68
 2507 04b6 06       		.byte	0x6
 2508 04b7 F001     		.2byte	0x1f0
 2509 04b9 8D000000 		.4byte	0x8d
 2510 04bd 0A       		.byte	0xa
 2511 04be 10       		.uleb128 0x10
 2512 04bf 71090000 		.4byte	.LASF69
 2513 04c3 06       		.byte	0x6
 2514 04c4 F501     		.2byte	0x1f5
 2515 04c6 8D000000 		.4byte	0x8d
 2516 04ca 0C       		.byte	0xc
 2517 04cb 10       		.uleb128 0x10
 2518 04cc E70B0000 		.4byte	.LASF70
 2519 04d0 06       		.byte	0x6
 2520 04d1 FA01     		.2byte	0x1fa
 2521 04d3 8D000000 		.4byte	0x8d
 2522 04d7 0E       		.byte	0xe
 2523 04d8 10       		.uleb128 0x10
 2524 04d9 D6030000 		.4byte	.LASF71
 2525 04dd 06       		.byte	0x6
 2526 04de FF01     		.2byte	0x1ff
 2527 04e0 81000000 		.4byte	0x81
 2528 04e4 10       		.byte	0x10
 2529 04e5 10       		.uleb128 0x10
 2530 04e6 D3080000 		.4byte	.LASF72
 2531 04ea 06       		.byte	0x6
 2532 04eb 0402     		.2byte	0x204
 2533 04ed 81000000 		.4byte	0x81
 2534 04f1 11       		.byte	0x11
 2535 04f2 10       		.uleb128 0x10
 2536 04f3 02090000 		.4byte	.LASF73
 2537 04f7 06       		.byte	0x6
 2538 04f8 0902     		.2byte	0x209
 2539 04fa 81000000 		.4byte	0x81
 2540 04fe 12       		.byte	0x12
 2541 04ff 10       		.uleb128 0x10
 2542 0500 F0040000 		.4byte	.LASF74
 2543 0504 06       		.byte	0x6
ARM GAS  C:\Users\mstai\AppData\Local\Temp\ccHdifRP.s 			page 107


 2544 0505 0E02     		.2byte	0x20e
 2545 0507 81000000 		.4byte	0x81
 2546 050b 13       		.byte	0x13
 2547 050c 10       		.uleb128 0x10
 2548 050d 2A050000 		.4byte	.LASF75
 2549 0511 06       		.byte	0x6
 2550 0512 1302     		.2byte	0x213
 2551 0514 81000000 		.4byte	0x81
 2552 0518 14       		.byte	0x14
 2553 0519 10       		.uleb128 0x10
 2554 051a 1B050000 		.4byte	.LASF76
 2555 051e 06       		.byte	0x6
 2556 051f 1802     		.2byte	0x218
 2557 0521 81000000 		.4byte	0x81
 2558 0525 15       		.byte	0x15
 2559 0526 10       		.uleb128 0x10
 2560 0527 0F070000 		.4byte	.LASF77
 2561 052b 06       		.byte	0x6
 2562 052c 1D02     		.2byte	0x21d
 2563 052e 81000000 		.4byte	0x81
 2564 0532 16       		.byte	0x16
 2565 0533 10       		.uleb128 0x10
 2566 0534 93010000 		.4byte	.LASF78
 2567 0538 06       		.byte	0x6
 2568 0539 2202     		.2byte	0x222
 2569 053b 81000000 		.4byte	0x81
 2570 053f 17       		.byte	0x17
 2571 0540 10       		.uleb128 0x10
 2572 0541 16020000 		.4byte	.LASF79
 2573 0545 06       		.byte	0x6
 2574 0546 2702     		.2byte	0x227
 2575 0548 81000000 		.4byte	0x81
 2576 054c 18       		.byte	0x18
 2577 054d 10       		.uleb128 0x10
 2578 054e BF0D0000 		.4byte	.LASF80
 2579 0552 06       		.byte	0x6
 2580 0553 2C02     		.2byte	0x22c
 2581 0555 81000000 		.4byte	0x81
 2582 0559 19       		.byte	0x19
 2583 055a 10       		.uleb128 0x10
 2584 055b E8030000 		.4byte	.LASF81
 2585 055f 06       		.byte	0x6
 2586 0560 3102     		.2byte	0x231
 2587 0562 81000000 		.4byte	0x81
 2588 0566 1A       		.byte	0x1a
 2589 0567 10       		.uleb128 0x10
 2590 0568 C6080000 		.4byte	.LASF82
 2591 056c 06       		.byte	0x6
 2592 056d 3602     		.2byte	0x236
 2593 056f 81000000 		.4byte	0x81
 2594 0573 1B       		.byte	0x1b
 2595 0574 10       		.uleb128 0x10
 2596 0575 C5010000 		.4byte	.LASF83
 2597 0579 06       		.byte	0x6
 2598 057a 3B02     		.2byte	0x23b
 2599 057c 81000000 		.4byte	0x81
 2600 0580 1C       		.byte	0x1c
ARM GAS  C:\Users\mstai\AppData\Local\Temp\ccHdifRP.s 			page 108


 2601 0581 00       		.byte	0
 2602 0582 05       		.uleb128 0x5
 2603 0583 39090000 		.4byte	.LASF84
 2604 0587 06       		.byte	0x6
 2605 0588 3C02     		.2byte	0x23c
 2606 058a 74040000 		.4byte	0x474
 2607 058e 11       		.uleb128 0x11
 2608 058f 84       		.byte	0x84
 2609 0590 06       		.byte	0x6
 2610 0591 4202     		.2byte	0x242
 2611 0593 D0060000 		.4byte	0x6d0
 2612 0597 10       		.uleb128 0x10
 2613 0598 81090000 		.4byte	.LASF85
 2614 059c 06       		.byte	0x6
 2615 059d 4902     		.2byte	0x249
 2616 059f 8D000000 		.4byte	0x8d
 2617 05a3 00       		.byte	0
 2618 05a4 10       		.uleb128 0x10
 2619 05a5 FB0E0000 		.4byte	.LASF86
 2620 05a9 06       		.byte	0x6
 2621 05aa 4E02     		.2byte	0x24e
 2622 05ac 8D000000 		.4byte	0x8d
 2623 05b0 02       		.byte	0x2
 2624 05b1 10       		.uleb128 0x10
 2625 05b2 DB000000 		.4byte	.LASF87
 2626 05b6 06       		.byte	0x6
 2627 05b7 5302     		.2byte	0x253
 2628 05b9 8D000000 		.4byte	0x8d
 2629 05bd 04       		.byte	0x4
 2630 05be 10       		.uleb128 0x10
 2631 05bf 330A0000 		.4byte	.LASF88
 2632 05c3 06       		.byte	0x6
 2633 05c4 5902     		.2byte	0x259
 2634 05c6 8D000000 		.4byte	0x8d
 2635 05ca 06       		.byte	0x6
 2636 05cb 10       		.uleb128 0x10
 2637 05cc CF000000 		.4byte	.LASF89
 2638 05d0 06       		.byte	0x6
 2639 05d1 5E02     		.2byte	0x25e
 2640 05d3 8D000000 		.4byte	0x8d
 2641 05d7 08       		.byte	0x8
 2642 05d8 10       		.uleb128 0x10
 2643 05d9 3F060000 		.4byte	.LASF90
 2644 05dd 06       		.byte	0x6
 2645 05de 6302     		.2byte	0x263
 2646 05e0 D7000000 		.4byte	0xd7
 2647 05e4 0C       		.byte	0xc
 2648 05e5 10       		.uleb128 0x10
 2649 05e6 230A0000 		.4byte	.LASF91
 2650 05ea 06       		.byte	0x6
 2651 05eb 6902     		.2byte	0x269
 2652 05ed 58040000 		.4byte	0x458
 2653 05f1 10       		.byte	0x10
 2654 05f2 10       		.uleb128 0x10
 2655 05f3 84020000 		.4byte	.LASF92
 2656 05f7 06       		.byte	0x6
 2657 05f8 6F02     		.2byte	0x26f
ARM GAS  C:\Users\mstai\AppData\Local\Temp\ccHdifRP.s 			page 109


 2658 05fa 58040000 		.4byte	0x458
 2659 05fe 14       		.byte	0x14
 2660 05ff 10       		.uleb128 0x10
 2661 0600 050B0000 		.4byte	.LASF93
 2662 0604 06       		.byte	0x6
 2663 0605 7602     		.2byte	0x276
 2664 0607 58040000 		.4byte	0x458
 2665 060b 18       		.byte	0x18
 2666 060c 10       		.uleb128 0x10
 2667 060d 95090000 		.4byte	.LASF94
 2668 0611 06       		.byte	0x6
 2669 0612 8602     		.2byte	0x286
 2670 0614 D6010000 		.4byte	0x1d6
 2671 0618 1C       		.byte	0x1c
 2672 0619 10       		.uleb128 0x10
 2673 061a EE070000 		.4byte	.LASF95
 2674 061e 06       		.byte	0x6
 2675 061f 8C02     		.2byte	0x28c
 2676 0621 8D000000 		.4byte	0x8d
 2677 0625 1E       		.byte	0x1e
 2678 0626 10       		.uleb128 0x10
 2679 0627 4B040000 		.4byte	.LASF96
 2680 062b 06       		.byte	0x6
 2681 062c 9102     		.2byte	0x291
 2682 062e 81000000 		.4byte	0x81
 2683 0632 20       		.byte	0x20
 2684 0633 10       		.uleb128 0x10
 2685 0634 9E0E0000 		.4byte	.LASF97
 2686 0638 06       		.byte	0x6
 2687 0639 9602     		.2byte	0x296
 2688 063b 8D000000 		.4byte	0x8d
 2689 063f 22       		.byte	0x22
 2690 0640 10       		.uleb128 0x10
 2691 0641 54070000 		.4byte	.LASF98
 2692 0645 06       		.byte	0x6
 2693 0646 9B02     		.2byte	0x29b
 2694 0648 BF020000 		.4byte	0x2bf
 2695 064c 24       		.byte	0x24
 2696 064d 10       		.uleb128 0x10
 2697 064e 79030000 		.4byte	.LASF99
 2698 0652 06       		.byte	0x6
 2699 0653 A002     		.2byte	0x2a0
 2700 0655 83030000 		.4byte	0x383
 2701 0659 36       		.byte	0x36
 2702 065a 10       		.uleb128 0x10
 2703 065b A4080000 		.4byte	.LASF100
 2704 065f 06       		.byte	0x6
 2705 0660 A502     		.2byte	0x2a5
 2706 0662 35040000 		.4byte	0x435
 2707 0666 44       		.byte	0x44
 2708 0667 10       		.uleb128 0x10
 2709 0668 AD080000 		.4byte	.LASF101
 2710 066c 06       		.byte	0x6
 2711 066d AA02     		.2byte	0x2aa
 2712 066f 82050000 		.4byte	0x582
 2713 0673 58       		.byte	0x58
 2714 0674 10       		.uleb128 0x10
ARM GAS  C:\Users\mstai\AppData\Local\Temp\ccHdifRP.s 			page 110


 2715 0675 A5040000 		.4byte	.LASF102
 2716 0679 06       		.byte	0x6
 2717 067a AF02     		.2byte	0x2af
 2718 067c 68040000 		.4byte	0x468
 2719 0680 78       		.byte	0x78
 2720 0681 10       		.uleb128 0x10
 2721 0682 9D000000 		.4byte	.LASF103
 2722 0686 06       		.byte	0x6
 2723 0687 B402     		.2byte	0x2b4
 2724 0689 81000000 		.4byte	0x81
 2725 068d 7C       		.byte	0x7c
 2726 068e 10       		.uleb128 0x10
 2727 068f C6030000 		.4byte	.LASF104
 2728 0693 06       		.byte	0x6
 2729 0694 B902     		.2byte	0x2b9
 2730 0696 81000000 		.4byte	0x81
 2731 069a 7D       		.byte	0x7d
 2732 069b 10       		.uleb128 0x10
 2733 069c 5E090000 		.4byte	.LASF105
 2734 06a0 06       		.byte	0x6
 2735 06a1 BE02     		.2byte	0x2be
 2736 06a3 8D000000 		.4byte	0x8d
 2737 06a7 7E       		.byte	0x7e
 2738 06a8 10       		.uleb128 0x10
 2739 06a9 C8070000 		.4byte	.LASF106
 2740 06ad 06       		.byte	0x6
 2741 06ae C302     		.2byte	0x2c3
 2742 06b0 30030000 		.4byte	0x330
 2743 06b4 80       		.byte	0x80
 2744 06b5 10       		.uleb128 0x10
 2745 06b6 E3000000 		.4byte	.LASF107
 2746 06ba 06       		.byte	0x6
 2747 06bb C802     		.2byte	0x2c8
 2748 06bd 81000000 		.4byte	0x81
 2749 06c1 82       		.byte	0x82
 2750 06c2 10       		.uleb128 0x10
 2751 06c3 CB0C0000 		.4byte	.LASF108
 2752 06c7 06       		.byte	0x6
 2753 06c8 CD02     		.2byte	0x2cd
 2754 06ca 81000000 		.4byte	0x81
 2755 06ce 83       		.byte	0x83
 2756 06cf 00       		.byte	0
 2757 06d0 05       		.uleb128 0x5
 2758 06d1 EC090000 		.4byte	.LASF109
 2759 06d5 06       		.byte	0x6
 2760 06d6 CE02     		.2byte	0x2ce
 2761 06d8 8E050000 		.4byte	0x58e
 2762 06dc 11       		.uleb128 0x11
 2763 06dd 20       		.byte	0x20
 2764 06de 06       		.byte	0x6
 2765 06df D402     		.2byte	0x2d4
 2766 06e1 68070000 		.4byte	0x768
 2767 06e5 10       		.uleb128 0x10
 2768 06e6 44080000 		.4byte	.LASF110
 2769 06ea 06       		.byte	0x6
 2770 06eb D902     		.2byte	0x2d9
 2771 06ed 68070000 		.4byte	0x768
ARM GAS  C:\Users\mstai\AppData\Local\Temp\ccHdifRP.s 			page 111


 2772 06f1 00       		.byte	0
 2773 06f2 10       		.uleb128 0x10
 2774 06f3 F3060000 		.4byte	.LASF111
 2775 06f7 06       		.byte	0x6
 2776 06f8 DE02     		.2byte	0x2de
 2777 06fa 68070000 		.4byte	0x768
 2778 06fe 04       		.byte	0x4
 2779 06ff 10       		.uleb128 0x10
 2780 0700 2A010000 		.4byte	.LASF112
 2781 0704 06       		.byte	0x6
 2782 0705 E302     		.2byte	0x2e3
 2783 0707 68070000 		.4byte	0x768
 2784 070b 08       		.byte	0x8
 2785 070c 10       		.uleb128 0x10
 2786 070d 87040000 		.4byte	.LASF113
 2787 0711 06       		.byte	0x6
 2788 0712 E802     		.2byte	0x2e8
 2789 0714 68070000 		.4byte	0x768
 2790 0718 0C       		.byte	0xc
 2791 0719 10       		.uleb128 0x10
 2792 071a 5E0A0000 		.4byte	.LASF114
 2793 071e 06       		.byte	0x6
 2794 071f ED02     		.2byte	0x2ed
 2795 0721 68070000 		.4byte	0x768
 2796 0725 10       		.byte	0x10
 2797 0726 10       		.uleb128 0x10
 2798 0727 680D0000 		.4byte	.LASF115
 2799 072b 06       		.byte	0x6
 2800 072c F202     		.2byte	0x2f2
 2801 072e 99000000 		.4byte	0x99
 2802 0732 14       		.byte	0x14
 2803 0733 10       		.uleb128 0x10
 2804 0734 83080000 		.4byte	.LASF116
 2805 0738 06       		.byte	0x6
 2806 0739 F702     		.2byte	0x2f7
 2807 073b 99000000 		.4byte	0x99
 2808 073f 18       		.byte	0x18
 2809 0740 10       		.uleb128 0x10
 2810 0741 EF010000 		.4byte	.LASF117
 2811 0745 06       		.byte	0x6
 2812 0746 FC02     		.2byte	0x2fc
 2813 0748 81000000 		.4byte	0x81
 2814 074c 1C       		.byte	0x1c
 2815 074d 10       		.uleb128 0x10
 2816 074e BE0B0000 		.4byte	.LASF118
 2817 0752 06       		.byte	0x6
 2818 0753 0103     		.2byte	0x301
 2819 0755 81000000 		.4byte	0x81
 2820 0759 1D       		.byte	0x1d
 2821 075a 10       		.uleb128 0x10
 2822 075b AF020000 		.4byte	.LASF119
 2823 075f 06       		.byte	0x6
 2824 0760 0603     		.2byte	0x306
 2825 0762 81000000 		.4byte	0x81
 2826 0766 1E       		.byte	0x1e
 2827 0767 00       		.byte	0
 2828 0768 07       		.uleb128 0x7
ARM GAS  C:\Users\mstai\AppData\Local\Temp\ccHdifRP.s 			page 112


 2829 0769 04       		.byte	0x4
 2830 076a CB000000 		.4byte	0xcb
 2831 076e 05       		.uleb128 0x5
 2832 076f AD030000 		.4byte	.LASF120
 2833 0773 06       		.byte	0x6
 2834 0774 0703     		.2byte	0x307
 2835 0776 DC060000 		.4byte	0x6dc
 2836 077a 11       		.uleb128 0x11
 2837 077b 20       		.byte	0x20
 2838 077c 06       		.byte	0x6
 2839 077d 3A03     		.2byte	0x33a
 2840 077f 06080000 		.4byte	0x806
 2841 0783 10       		.uleb128 0x10
 2842 0784 7A0E0000 		.4byte	.LASF121
 2843 0788 06       		.byte	0x6
 2844 0789 4303     		.2byte	0x343
 2845 078b 06080000 		.4byte	0x806
 2846 078f 00       		.byte	0
 2847 0790 10       		.uleb128 0x10
 2848 0791 DA0C0000 		.4byte	.LASF122
 2849 0795 06       		.byte	0x6
 2850 0796 4A03     		.2byte	0x34a
 2851 0798 0D080000 		.4byte	0x80d
 2852 079c 04       		.byte	0x4
 2853 079d 10       		.uleb128 0x10
 2854 079e 8A090000 		.4byte	.LASF123
 2855 07a2 06       		.byte	0x6
 2856 07a3 5003     		.2byte	0x350
 2857 07a5 0F080000 		.4byte	0x80f
 2858 07a9 08       		.byte	0x8
 2859 07aa 10       		.uleb128 0x10
 2860 07ab 54080000 		.4byte	.LASF124
 2861 07af 06       		.byte	0x6
 2862 07b0 5603     		.2byte	0x356
 2863 07b2 0D080000 		.4byte	0x80d
 2864 07b6 0C       		.byte	0xc
 2865 07b7 10       		.uleb128 0x10
 2866 07b8 220C0000 		.4byte	.LASF125
 2867 07bc 06       		.byte	0x6
 2868 07bd 5D03     		.2byte	0x35d
 2869 07bf 15080000 		.4byte	0x815
 2870 07c3 10       		.byte	0x10
 2871 07c4 10       		.uleb128 0x10
 2872 07c5 B80C0000 		.4byte	.LASF126
 2873 07c9 06       		.byte	0x6
 2874 07ca 6203     		.2byte	0x362
 2875 07cc 99000000 		.4byte	0x99
 2876 07d0 14       		.byte	0x14
 2877 07d1 10       		.uleb128 0x10
 2878 07d2 0F050000 		.4byte	.LASF127
 2879 07d6 06       		.byte	0x6
 2880 07d7 6903     		.2byte	0x369
 2881 07d9 8D000000 		.4byte	0x8d
 2882 07dd 18       		.byte	0x18
 2883 07de 10       		.uleb128 0x10
 2884 07df F5030000 		.4byte	.LASF128
 2885 07e3 06       		.byte	0x6
ARM GAS  C:\Users\mstai\AppData\Local\Temp\ccHdifRP.s 			page 113


 2886 07e4 7003     		.2byte	0x370
 2887 07e6 81000000 		.4byte	0x81
 2888 07ea 1A       		.byte	0x1a
 2889 07eb 10       		.uleb128 0x10
 2890 07ec 07070000 		.4byte	.LASF129
 2891 07f0 06       		.byte	0x6
 2892 07f1 7A03     		.2byte	0x37a
 2893 07f3 81000000 		.4byte	0x81
 2894 07f7 1B       		.byte	0x1b
 2895 07f8 10       		.uleb128 0x10
 2896 07f9 AC070000 		.4byte	.LASF130
 2897 07fd 06       		.byte	0x6
 2898 07fe 7F03     		.2byte	0x37f
 2899 0800 1B080000 		.4byte	0x81b
 2900 0804 1C       		.byte	0x1c
 2901 0805 00       		.byte	0
 2902 0806 07       		.uleb128 0x7
 2903 0807 04       		.byte	0x4
 2904 0808 0C080000 		.4byte	0x80c
 2905 080c 13       		.uleb128 0x13
 2906 080d 14       		.uleb128 0x14
 2907 080e 04       		.byte	0x4
 2908 080f 07       		.uleb128 0x7
 2909 0810 04       		.byte	0x4
 2910 0811 50030000 		.4byte	0x350
 2911 0815 07       		.uleb128 0x7
 2912 0816 04       		.byte	0x4
 2913 0817 81000000 		.4byte	0x81
 2914 081b 07       		.uleb128 0x7
 2915 081c 04       		.byte	0x4
 2916 081d 99000000 		.4byte	0x99
 2917 0821 05       		.uleb128 0x5
 2918 0822 C4040000 		.4byte	.LASF131
 2919 0826 06       		.byte	0x6
 2920 0827 8003     		.2byte	0x380
 2921 0829 7A070000 		.4byte	0x77a
 2922 082d 11       		.uleb128 0x11
 2923 082e 20       		.byte	0x20
 2924 082f 06       		.byte	0x6
 2925 0830 8603     		.2byte	0x386
 2926 0832 44080000 		.4byte	0x844
 2927 0836 10       		.uleb128 0x10
 2928 0837 BB0F0000 		.4byte	.LASF132
 2929 083b 06       		.byte	0x6
 2930 083c 8B03     		.2byte	0x38b
 2931 083e 44080000 		.4byte	0x844
 2932 0842 00       		.byte	0
 2933 0843 00       		.byte	0
 2934 0844 0E       		.uleb128 0xe
 2935 0845 21080000 		.4byte	0x821
 2936 0849 54080000 		.4byte	0x854
 2937 084d 0F       		.uleb128 0xf
 2938 084e E6010000 		.4byte	0x1e6
 2939 0852 00       		.byte	0
 2940 0853 00       		.byte	0
 2941 0854 05       		.uleb128 0x5
 2942 0855 71070000 		.4byte	.LASF133
ARM GAS  C:\Users\mstai\AppData\Local\Temp\ccHdifRP.s 			page 114


 2943 0859 06       		.byte	0x6
 2944 085a 8C03     		.2byte	0x38c
 2945 085c 2D080000 		.4byte	0x82d
 2946 0860 02       		.uleb128 0x2
 2947 0861 08       		.byte	0x8
 2948 0862 04       		.byte	0x4
 2949 0863 2D090000 		.4byte	.LASF134
 2950 0867 09       		.uleb128 0x9
 2951 0868 01       		.byte	0x1
 2952 0869 2C000000 		.4byte	0x2c
 2953 086d 07       		.byte	0x7
 2954 086e 43       		.byte	0x43
 2955 086f 92080000 		.4byte	0x892
 2956 0873 0A       		.uleb128 0xa
 2957 0874 5D070000 		.4byte	.LASF135
 2958 0878 00       		.byte	0
 2959 0879 0A       		.uleb128 0xa
 2960 087a 5F060000 		.4byte	.LASF136
 2961 087e 01       		.byte	0x1
 2962 087f 0A       		.uleb128 0xa
 2963 0880 CC050000 		.4byte	.LASF137
 2964 0884 02       		.byte	0x2
 2965 0885 0A       		.uleb128 0xa
 2966 0886 110F0000 		.4byte	.LASF138
 2967 088a 03       		.byte	0x3
 2968 088b 0A       		.uleb128 0xa
 2969 088c 00010000 		.4byte	.LASF139
 2970 0890 04       		.byte	0x4
 2971 0891 00       		.byte	0
 2972 0892 03       		.uleb128 0x3
 2973 0893 FE0C0000 		.4byte	.LASF140
 2974 0897 07       		.byte	0x7
 2975 0898 49       		.byte	0x49
 2976 0899 67080000 		.4byte	0x867
 2977 089d 0B       		.uleb128 0xb
 2978 089e 08       		.byte	0x8
 2979 089f 07       		.byte	0x7
 2980 08a0 CF       		.byte	0xcf
 2981 08a1 BE080000 		.4byte	0x8be
 2982 08a5 0D       		.uleb128 0xd
 2983 08a6 A50A0000 		.4byte	.LASF141
 2984 08aa 07       		.byte	0x7
 2985 08ab D4       		.byte	0xd4
 2986 08ac 99000000 		.4byte	0x99
 2987 08b0 00       		.byte	0
 2988 08b1 0D       		.uleb128 0xd
 2989 08b2 64080000 		.4byte	.LASF142
 2990 08b6 07       		.byte	0x7
 2991 08b7 D9       		.byte	0xd9
 2992 08b8 99000000 		.4byte	0x99
 2993 08bc 04       		.byte	0x4
 2994 08bd 00       		.byte	0
 2995 08be 03       		.uleb128 0x3
 2996 08bf 430C0000 		.4byte	.LASF143
 2997 08c3 07       		.byte	0x7
 2998 08c4 DA       		.byte	0xda
 2999 08c5 9D080000 		.4byte	0x89d
ARM GAS  C:\Users\mstai\AppData\Local\Temp\ccHdifRP.s 			page 115


 3000 08c9 15       		.uleb128 0x15
 3001 08ca E0080000 		.4byte	.LASF146
 3002 08ce 01       		.byte	0x1
 3003 08cf 3B0A     		.2byte	0xa3b
 3004 08d1 81000000 		.4byte	0x81
 3005 08d5 00000000 		.4byte	.LFB21
 3006 08d9 84000000 		.4byte	.LFE21-.LFB21
 3007 08dd 01       		.uleb128 0x1
 3008 08de 9C       		.byte	0x9c
 3009 08df 14090000 		.4byte	0x914
 3010 08e3 16       		.uleb128 0x16
 3011 08e4 DF0E0000 		.4byte	.LASF144
 3012 08e8 01       		.byte	0x1
 3013 08e9 3B0A     		.2byte	0xa3b
 3014 08eb 99000000 		.4byte	0x99
 3015 08ef 00000000 		.4byte	.LLST0
 3016 08f3 16       		.uleb128 0x16
 3017 08f4 18060000 		.4byte	.LASF145
 3018 08f8 01       		.byte	0x1
 3019 08f9 3B0A     		.2byte	0xa3b
 3020 08fb 99000000 		.4byte	0x99
 3021 08ff 2C000000 		.4byte	.LLST1
 3022 0903 17       		.uleb128 0x17
 3023 0904 FE030000 		.4byte	.LASF148
 3024 0908 01       		.byte	0x1
 3025 0909 3D0A     		.2byte	0xa3d
 3026 090b 81000000 		.4byte	0x81
 3027 090f 58000000 		.4byte	.LLST2
 3028 0913 00       		.byte	0
 3029 0914 15       		.uleb128 0x15
 3030 0915 90020000 		.4byte	.LASF147
 3031 0919 01       		.byte	0x1
 3032 091a 870A     		.2byte	0xa87
 3033 091c 81000000 		.4byte	0x81
 3034 0920 00000000 		.4byte	.LFB22
 3035 0924 42000000 		.4byte	.LFE22-.LFB22
 3036 0928 01       		.uleb128 0x1
 3037 0929 9C       		.byte	0x9c
 3038 092a 7F090000 		.4byte	0x97f
 3039 092e 16       		.uleb128 0x16
 3040 092f DF0E0000 		.4byte	.LASF144
 3041 0933 01       		.byte	0x1
 3042 0934 870A     		.2byte	0xa87
 3043 0936 99000000 		.4byte	0x99
 3044 093a 77000000 		.4byte	.LLST3
 3045 093e 16       		.uleb128 0x16
 3046 093f FE030000 		.4byte	.LASF148
 3047 0943 01       		.byte	0x1
 3048 0944 870A     		.2byte	0xa87
 3049 0946 81000000 		.4byte	0x81
 3050 094a BC000000 		.4byte	.LLST4
 3051 094e 17       		.uleb128 0x17
 3052 094f 31010000 		.4byte	.LASF149
 3053 0953 01       		.byte	0x1
 3054 0954 890A     		.2byte	0xa89
 3055 0956 99000000 		.4byte	0x99
 3056 095a F6000000 		.4byte	.LLST5
ARM GAS  C:\Users\mstai\AppData\Local\Temp\ccHdifRP.s 			page 116


 3057 095e 17       		.uleb128 0x17
 3058 095f 41010000 		.4byte	.LASF150
 3059 0963 01       		.byte	0x1
 3060 0964 8A0A     		.2byte	0xa8a
 3061 0966 99000000 		.4byte	0x99
 3062 096a 20010000 		.4byte	.LLST6
 3063 096e 17       		.uleb128 0x17
 3064 096f 870E0000 		.4byte	.LASF151
 3065 0973 01       		.byte	0x1
 3066 0974 8B0A     		.2byte	0xa8b
 3067 0976 99000000 		.4byte	0x99
 3068 097a 49010000 		.4byte	.LLST7
 3069 097e 00       		.byte	0
 3070 097f 18       		.uleb128 0x18
 3071 0980 68010000 		.4byte	.LASF239
 3072 0984 01       		.byte	0x1
 3073 0985 EC       		.byte	0xec
 3074 0986 99000000 		.4byte	0x99
 3075 098a 00000000 		.4byte	.LFB1
 3076 098e 10000000 		.4byte	.LFE1-.LFB1
 3077 0992 01       		.uleb128 0x1
 3078 0993 9C       		.byte	0x9c
 3079 0994 19       		.uleb128 0x19
 3080 0995 640A0000 		.4byte	.LASF154
 3081 0999 01       		.byte	0x1
 3082 099a 1A01     		.2byte	0x11a
 3083 099c BA000000 		.4byte	0xba
 3084 09a0 00000000 		.4byte	.LFB2
 3085 09a4 4C000000 		.4byte	.LFE2-.LFB2
 3086 09a8 01       		.uleb128 0x1
 3087 09a9 9C       		.byte	0x9c
 3088 09aa D8090000 		.4byte	0x9d8
 3089 09ae 16       		.uleb128 0x16
 3090 09af 2D0F0000 		.4byte	.LASF152
 3091 09b3 01       		.byte	0x1
 3092 09b4 1A01     		.2byte	0x11a
 3093 09b6 99000000 		.4byte	0x99
 3094 09ba 5C010000 		.4byte	.LLST8
 3095 09be 17       		.uleb128 0x17
 3096 09bf 040F0000 		.4byte	.LASF153
 3097 09c3 01       		.byte	0x1
 3098 09c4 1C01     		.2byte	0x11c
 3099 09c6 BA000000 		.4byte	0xba
 3100 09ca 7D010000 		.4byte	.LLST9
 3101 09ce 1A       		.uleb128 0x1a
 3102 09cf 42000000 		.4byte	.LVL27
 3103 09d3 82130000 		.4byte	0x1382
 3104 09d7 00       		.byte	0
 3105 09d8 19       		.uleb128 0x19
 3106 09d9 87070000 		.4byte	.LASF155
 3107 09dd 01       		.byte	0x1
 3108 09de 6D01     		.2byte	0x16d
 3109 09e0 BA000000 		.4byte	0xba
 3110 09e4 00000000 		.4byte	.LFB3
 3111 09e8 2C000000 		.4byte	.LFE3-.LFB3
 3112 09ec 01       		.uleb128 0x1
 3113 09ed 9C       		.byte	0x9c
ARM GAS  C:\Users\mstai\AppData\Local\Temp\ccHdifRP.s 			page 117


 3114 09ee 0C0A0000 		.4byte	0xa0c
 3115 09f2 17       		.uleb128 0x17
 3116 09f3 30000000 		.4byte	.LASF156
 3117 09f7 01       		.byte	0x1
 3118 09f8 6F01     		.2byte	0x16f
 3119 09fa BA000000 		.4byte	0xba
 3120 09fe 9B010000 		.4byte	.LLST10
 3121 0a02 1A       		.uleb128 0x1a
 3122 0a03 16000000 		.4byte	.LVL30
 3123 0a07 8E130000 		.4byte	0x138e
 3124 0a0b 00       		.byte	0
 3125 0a0c 19       		.uleb128 0x19
 3126 0a0d 500D0000 		.4byte	.LASF157
 3127 0a11 01       		.byte	0x1
 3128 0a12 AB01     		.2byte	0x1ab
 3129 0a14 BA000000 		.4byte	0xba
 3130 0a18 00000000 		.4byte	.LFB4
 3131 0a1c 3C000000 		.4byte	.LFE4-.LFB4
 3132 0a20 01       		.uleb128 0x1
 3133 0a21 9C       		.byte	0x9c
 3134 0a22 640A0000 		.4byte	0xa64
 3135 0a26 17       		.uleb128 0x17
 3136 0a27 30000000 		.4byte	.LASF156
 3137 0a2b 01       		.byte	0x1
 3138 0a2c AD01     		.2byte	0x1ad
 3139 0a2e BA000000 		.4byte	0xba
 3140 0a32 BA010000 		.4byte	.LLST11
 3141 0a36 17       		.uleb128 0x17
 3142 0a37 F8080000 		.4byte	.LASF158
 3143 0a3b 01       		.byte	0x1
 3144 0a3c AF01     		.2byte	0x1af
 3145 0a3e 99000000 		.4byte	0x99
 3146 0a42 08020000 		.4byte	.LLST12
 3147 0a46 1B       		.uleb128 0x1b
 3148 0a47 18000000 		.4byte	.LVL35
 3149 0a4b 94090000 		.4byte	0x994
 3150 0a4f 5A0A0000 		.4byte	0xa5a
 3151 0a53 1C       		.uleb128 0x1c
 3152 0a54 01       		.uleb128 0x1
 3153 0a55 50       		.byte	0x50
 3154 0a56 02       		.uleb128 0x2
 3155 0a57 74       		.byte	0x74
 3156 0a58 00       		.sleb128 0
 3157 0a59 00       		.byte	0
 3158 0a5a 1A       		.uleb128 0x1a
 3159 0a5b 26000000 		.4byte	.LVL36
 3160 0a5f D8090000 		.4byte	0x9d8
 3161 0a63 00       		.byte	0
 3162 0a64 19       		.uleb128 0x19
 3163 0a65 55000000 		.4byte	.LASF159
 3164 0a69 01       		.byte	0x1
 3165 0a6a 1702     		.2byte	0x217
 3166 0a6c BA000000 		.4byte	0xba
 3167 0a70 00000000 		.4byte	.LFB5
 3168 0a74 60000000 		.4byte	.LFE5-.LFB5
 3169 0a78 01       		.uleb128 0x1
 3170 0a79 9C       		.byte	0x9c
ARM GAS  C:\Users\mstai\AppData\Local\Temp\ccHdifRP.s 			page 118


 3171 0a7a B80A0000 		.4byte	0xab8
 3172 0a7e 16       		.uleb128 0x16
 3173 0a7f 2D0F0000 		.4byte	.LASF152
 3174 0a83 01       		.byte	0x1
 3175 0a84 1702     		.2byte	0x217
 3176 0a86 99000000 		.4byte	0x99
 3177 0a8a 1B020000 		.4byte	.LLST13
 3178 0a8e 16       		.uleb128 0x16
 3179 0a8f 26020000 		.4byte	.LASF160
 3180 0a93 01       		.byte	0x1
 3181 0a94 1702     		.2byte	0x217
 3182 0a96 99000000 		.4byte	0x99
 3183 0a9a 3C020000 		.4byte	.LLST14
 3184 0a9e 17       		.uleb128 0x17
 3185 0a9f 040F0000 		.4byte	.LASF153
 3186 0aa3 01       		.byte	0x1
 3187 0aa4 1902     		.2byte	0x219
 3188 0aa6 BA000000 		.4byte	0xba
 3189 0aaa 5D020000 		.4byte	.LLST15
 3190 0aae 1A       		.uleb128 0x1a
 3191 0aaf 52000000 		.4byte	.LVL42
 3192 0ab3 9A130000 		.4byte	0x139a
 3193 0ab7 00       		.byte	0
 3194 0ab8 19       		.uleb128 0x19
 3195 0ab9 06080000 		.4byte	.LASF161
 3196 0abd 01       		.byte	0x1
 3197 0abe 8102     		.2byte	0x281
 3198 0ac0 BA000000 		.4byte	0xba
 3199 0ac4 00000000 		.4byte	.LFB6
 3200 0ac8 2C000000 		.4byte	.LFE6-.LFB6
 3201 0acc 01       		.uleb128 0x1
 3202 0acd 9C       		.byte	0x9c
 3203 0ace EC0A0000 		.4byte	0xaec
 3204 0ad2 17       		.uleb128 0x17
 3205 0ad3 30000000 		.4byte	.LASF156
 3206 0ad7 01       		.byte	0x1
 3207 0ad8 8302     		.2byte	0x283
 3208 0ada BA000000 		.4byte	0xba
 3209 0ade 7B020000 		.4byte	.LLST16
 3210 0ae2 1A       		.uleb128 0x1a
 3211 0ae3 16000000 		.4byte	.LVL45
 3212 0ae7 A6130000 		.4byte	0x13a6
 3213 0aeb 00       		.byte	0
 3214 0aec 1D       		.uleb128 0x1d
 3215 0aed A30C0000 		.4byte	.LASF168
 3216 0af1 01       		.byte	0x1
 3217 0af2 4803     		.2byte	0x348
 3218 0af4 00000000 		.4byte	.LFB8
 3219 0af8 98000000 		.4byte	.LFE8-.LFB8
 3220 0afc 01       		.uleb128 0x1
 3221 0afd 9C       		.byte	0x9c
 3222 0afe B60B0000 		.4byte	0xbb6
 3223 0b02 16       		.uleb128 0x16
 3224 0b03 2D0F0000 		.4byte	.LASF152
 3225 0b07 01       		.byte	0x1
 3226 0b08 4803     		.2byte	0x348
 3227 0b0a 99000000 		.4byte	0x99
ARM GAS  C:\Users\mstai\AppData\Local\Temp\ccHdifRP.s 			page 119


 3228 0b0e 9A020000 		.4byte	.LLST17
 3229 0b12 16       		.uleb128 0x16
 3230 0b13 22000000 		.4byte	.LASF162
 3231 0b17 01       		.byte	0x1
 3232 0b18 4803     		.2byte	0x348
 3233 0b1a 99000000 		.4byte	0x99
 3234 0b1e BB020000 		.4byte	.LLST18
 3235 0b22 16       		.uleb128 0x16
 3236 0b23 380D0000 		.4byte	.LASF163
 3237 0b27 01       		.byte	0x1
 3238 0b28 4803     		.2byte	0x348
 3239 0b2a 99000000 		.4byte	0x99
 3240 0b2e DC020000 		.4byte	.LLST19
 3241 0b32 1E       		.uleb128 0x1e
 3242 0b33 DD040000 		.4byte	.LASF164
 3243 0b37 01       		.byte	0x1
 3244 0b38 4A03     		.2byte	0x34a
 3245 0b3a 99000000 		.4byte	0x99
 3246 0b3e 01       		.byte	0x1
 3247 0b3f 17       		.uleb128 0x17
 3248 0b40 460D0000 		.4byte	.LASF165
 3249 0b44 01       		.byte	0x1
 3250 0b45 4B03     		.2byte	0x34b
 3251 0b47 99000000 		.4byte	0x99
 3252 0b4b 08030000 		.4byte	.LLST20
 3253 0b4f 17       		.uleb128 0x17
 3254 0b50 1B010000 		.4byte	.LASF166
 3255 0b54 01       		.byte	0x1
 3256 0b55 4C03     		.2byte	0x34c
 3257 0b57 81000000 		.4byte	0x81
 3258 0b5b 27030000 		.4byte	.LLST21
 3259 0b5f 17       		.uleb128 0x17
 3260 0b60 C50C0000 		.4byte	.LASF167
 3261 0b64 01       		.byte	0x1
 3262 0b65 4D03     		.2byte	0x34d
 3263 0b67 B60B0000 		.4byte	0xbb6
 3264 0b6b 50030000 		.4byte	.LLST22
 3265 0b6f 1A       		.uleb128 0x1a
 3266 0b70 16000000 		.4byte	.LVL52
 3267 0b74 B2130000 		.4byte	0x13b2
 3268 0b78 1A       		.uleb128 0x1a
 3269 0b79 36000000 		.4byte	.LVL53
 3270 0b7d BD130000 		.4byte	0x13bd
 3271 0b81 1A       		.uleb128 0x1a
 3272 0b82 48000000 		.4byte	.LVL54
 3273 0b86 B2130000 		.4byte	0x13b2
 3274 0b8a 1A       		.uleb128 0x1a
 3275 0b8b 68000000 		.4byte	.LVL55
 3276 0b8f BD130000 		.4byte	0x13bd
 3277 0b93 1A       		.uleb128 0x1a
 3278 0b94 6E000000 		.4byte	.LVL56
 3279 0b98 B2130000 		.4byte	0x13b2
 3280 0b9c 1A       		.uleb128 0x1a
 3281 0b9d 80000000 		.4byte	.LVL57
 3282 0ba1 BD130000 		.4byte	0x13bd
 3283 0ba5 1F       		.uleb128 0x1f
 3284 0ba6 88000000 		.4byte	.LVL58
ARM GAS  C:\Users\mstai\AppData\Local\Temp\ccHdifRP.s 			page 120


 3285 0baa C8130000 		.4byte	0x13c8
 3286 0bae 1C       		.uleb128 0x1c
 3287 0baf 01       		.uleb128 0x1
 3288 0bb0 50       		.byte	0x50
 3289 0bb1 02       		.uleb128 0x2
 3290 0bb2 74       		.byte	0x74
 3291 0bb3 00       		.sleb128 0
 3292 0bb4 00       		.byte	0
 3293 0bb5 00       		.byte	0
 3294 0bb6 07       		.uleb128 0x7
 3295 0bb7 04       		.byte	0x4
 3296 0bb8 BC0B0000 		.4byte	0xbbc
 3297 0bbc 20       		.uleb128 0x20
 3298 0bbd 6E070000 		.4byte	0x76e
 3299 0bc1 1D       		.uleb128 0x1d
 3300 0bc2 000A0000 		.4byte	.LASF169
 3301 0bc6 01       		.byte	0x1
 3302 0bc7 8E04     		.2byte	0x48e
 3303 0bc9 00000000 		.4byte	.LFB11
 3304 0bcd 88000000 		.4byte	.LFE11-.LFB11
 3305 0bd1 01       		.uleb128 0x1
 3306 0bd2 9C       		.byte	0x9c
 3307 0bd3 730C0000 		.4byte	0xc73
 3308 0bd7 16       		.uleb128 0x16
 3309 0bd8 380D0000 		.4byte	.LASF163
 3310 0bdc 01       		.byte	0x1
 3311 0bdd 8E04     		.2byte	0x48e
 3312 0bdf 99000000 		.4byte	0x99
 3313 0be3 63030000 		.4byte	.LLST23
 3314 0be7 17       		.uleb128 0x17
 3315 0be8 1B010000 		.4byte	.LASF166
 3316 0bec 01       		.byte	0x1
 3317 0bed 9004     		.2byte	0x490
 3318 0bef 81000000 		.4byte	0x81
 3319 0bf3 84030000 		.4byte	.LLST24
 3320 0bf7 17       		.uleb128 0x17
 3321 0bf8 7A020000 		.4byte	.LASF170
 3322 0bfc 01       		.byte	0x1
 3323 0bfd 9204     		.2byte	0x492
 3324 0bff 99000000 		.4byte	0x99
 3325 0c03 98030000 		.4byte	.LLST25
 3326 0c07 17       		.uleb128 0x17
 3327 0c08 99040000 		.4byte	.LASF171
 3328 0c0c 01       		.byte	0x1
 3329 0c0d 9404     		.2byte	0x494
 3330 0c0f 99000000 		.4byte	0x99
 3331 0c13 B7030000 		.4byte	.LLST26
 3332 0c17 17       		.uleb128 0x17
 3333 0c18 2E040000 		.4byte	.LASF172
 3334 0c1c 01       		.byte	0x1
 3335 0c1d 9504     		.2byte	0x495
 3336 0c1f 99000000 		.4byte	0x99
 3337 0c23 D6030000 		.4byte	.LLST27
 3338 0c27 17       		.uleb128 0x17
 3339 0c28 BC050000 		.4byte	.LASF173
 3340 0c2c 01       		.byte	0x1
 3341 0c2d 9704     		.2byte	0x497
ARM GAS  C:\Users\mstai\AppData\Local\Temp\ccHdifRP.s 			page 121


 3342 0c2f 99000000 		.4byte	0x99
 3343 0c33 F5030000 		.4byte	.LLST28
 3344 0c37 17       		.uleb128 0x17
 3345 0c38 5F030000 		.4byte	.LASF174
 3346 0c3c 01       		.byte	0x1
 3347 0c3d 9804     		.2byte	0x498
 3348 0c3f 99000000 		.4byte	0x99
 3349 0c43 1F040000 		.4byte	.LLST29
 3350 0c47 17       		.uleb128 0x17
 3351 0c48 70030000 		.4byte	.LASF175
 3352 0c4c 01       		.byte	0x1
 3353 0c4d 9A04     		.2byte	0x49a
 3354 0c4f B60B0000 		.4byte	0xbb6
 3355 0c53 32040000 		.4byte	.LLST30
 3356 0c57 1A       		.uleb128 0x1a
 3357 0c58 32000000 		.4byte	.LVL69
 3358 0c5c B2130000 		.4byte	0x13b2
 3359 0c60 1F       		.uleb128 0x1f
 3360 0c61 72000000 		.4byte	.LVL81
 3361 0c65 BD130000 		.4byte	0x13bd
 3362 0c69 1C       		.uleb128 0x1c
 3363 0c6a 01       		.uleb128 0x1
 3364 0c6b 50       		.byte	0x50
 3365 0c6c 04       		.uleb128 0x4
 3366 0c6d 91       		.byte	0x91
 3367 0c6e 5C       		.sleb128 -36
 3368 0c6f 94       		.byte	0x94
 3369 0c70 01       		.byte	0x1
 3370 0c71 00       		.byte	0
 3371 0c72 00       		.byte	0
 3372 0c73 21       		.uleb128 0x21
 3373 0c74 5C0E0000 		.4byte	.LASF240
 3374 0c78 01       		.byte	0x1
 3375 0c79 2405     		.2byte	0x524
 3376 0c7b 00000000 		.4byte	.LFB12
 3377 0c7f 02000000 		.4byte	.LFE12-.LFB12
 3378 0c83 01       		.uleb128 0x1
 3379 0c84 9C       		.byte	0x9c
 3380 0c85 1D       		.uleb128 0x1d
 3381 0c86 C9090000 		.4byte	.LASF176
 3382 0c8a 01       		.byte	0x1
 3383 0c8b 7105     		.2byte	0x571
 3384 0c8d 00000000 		.4byte	.LFB13
 3385 0c91 08000000 		.4byte	.LFE13-.LFB13
 3386 0c95 01       		.uleb128 0x1
 3387 0c96 9C       		.byte	0x9c
 3388 0c97 BD0C0000 		.4byte	0xcbd
 3389 0c9b 16       		.uleb128 0x16
 3390 0c9c DF0B0000 		.4byte	.LASF177
 3391 0ca0 01       		.byte	0x1
 3392 0ca1 7105     		.2byte	0x571
 3393 0ca3 DC000000 		.4byte	0xdc
 3394 0ca7 45040000 		.4byte	.LLST31
 3395 0cab 1F       		.uleb128 0x1f
 3396 0cac 06000000 		.4byte	.LVL89
 3397 0cb0 D4130000 		.4byte	0x13d4
 3398 0cb4 1C       		.uleb128 0x1c
ARM GAS  C:\Users\mstai\AppData\Local\Temp\ccHdifRP.s 			page 122


 3399 0cb5 01       		.uleb128 0x1
 3400 0cb6 50       		.byte	0x50
 3401 0cb7 03       		.uleb128 0x3
 3402 0cb8 F3       		.byte	0xf3
 3403 0cb9 01       		.uleb128 0x1
 3404 0cba 50       		.byte	0x50
 3405 0cbb 00       		.byte	0
 3406 0cbc 00       		.byte	0
 3407 0cbd 1D       		.uleb128 0x1d
 3408 0cbe A4010000 		.4byte	.LASF178
 3409 0cc2 01       		.byte	0x1
 3410 0cc3 8805     		.2byte	0x588
 3411 0cc5 00000000 		.4byte	.LFB14
 3412 0cc9 30000000 		.4byte	.LFE14-.LFB14
 3413 0ccd 01       		.uleb128 0x1
 3414 0cce 9C       		.byte	0x9c
 3415 0ccf E40C0000 		.4byte	0xce4
 3416 0cd3 16       		.uleb128 0x16
 3417 0cd4 92040000 		.4byte	.LASF179
 3418 0cd8 01       		.byte	0x1
 3419 0cd9 8805     		.2byte	0x588
 3420 0cdb 99000000 		.4byte	0x99
 3421 0cdf 66040000 		.4byte	.LLST32
 3422 0ce3 00       		.byte	0
 3423 0ce4 1D       		.uleb128 0x1d
 3424 0ce5 8E060000 		.4byte	.LASF180
 3425 0ce9 01       		.byte	0x1
 3426 0cea CC05     		.2byte	0x5cc
 3427 0cec 00000000 		.4byte	.LFB15
 3428 0cf0 14000000 		.4byte	.LFE15-.LFB15
 3429 0cf4 01       		.uleb128 0x1
 3430 0cf5 9C       		.byte	0x9c
 3431 0cf6 1B0D0000 		.4byte	0xd1b
 3432 0cfa 16       		.uleb128 0x16
 3433 0cfb 720D0000 		.4byte	.LASF37
 3434 0cff 01       		.byte	0x1
 3435 0d00 CC05     		.2byte	0x5cc
 3436 0d02 99000000 		.4byte	0x99
 3437 0d06 94040000 		.4byte	.LLST33
 3438 0d0a 17       		.uleb128 0x17
 3439 0d0b 920E0000 		.4byte	.LASF181
 3440 0d0f 01       		.byte	0x1
 3441 0d10 CF05     		.2byte	0x5cf
 3442 0d12 99000000 		.4byte	0x99
 3443 0d16 C2040000 		.4byte	.LLST34
 3444 0d1a 00       		.byte	0
 3445 0d1b 1D       		.uleb128 0x1d
 3446 0d1c 88080000 		.4byte	.LASF182
 3447 0d20 01       		.byte	0x1
 3448 0d21 2006     		.2byte	0x620
 3449 0d23 00000000 		.4byte	.LFB16
 3450 0d27 12000000 		.4byte	.LFE16-.LFB16
 3451 0d2b 01       		.uleb128 0x1
 3452 0d2c 9C       		.byte	0x9c
 3453 0d2d 770D0000 		.4byte	0xd77
 3454 0d31 16       		.uleb128 0x16
 3455 0d32 720D0000 		.4byte	.LASF37
ARM GAS  C:\Users\mstai\AppData\Local\Temp\ccHdifRP.s 			page 123


 3456 0d36 01       		.byte	0x1
 3457 0d37 2006     		.2byte	0x620
 3458 0d39 99000000 		.4byte	0x99
 3459 0d3d EB040000 		.4byte	.LLST35
 3460 0d41 16       		.uleb128 0x16
 3461 0d42 92040000 		.4byte	.LASF179
 3462 0d46 01       		.byte	0x1
 3463 0d47 2006     		.2byte	0x620
 3464 0d49 99000000 		.4byte	0x99
 3465 0d4d 17050000 		.4byte	.LLST36
 3466 0d51 1B       		.uleb128 0x1b
 3467 0d52 0A000000 		.4byte	.LVL101
 3468 0d56 BD0C0000 		.4byte	0xcbd
 3469 0d5a 660D0000 		.4byte	0xd66
 3470 0d5e 1C       		.uleb128 0x1c
 3471 0d5f 01       		.uleb128 0x1
 3472 0d60 50       		.byte	0x50
 3473 0d61 03       		.uleb128 0x3
 3474 0d62 F3       		.byte	0xf3
 3475 0d63 01       		.uleb128 0x1
 3476 0d64 51       		.byte	0x51
 3477 0d65 00       		.byte	0
 3478 0d66 1F       		.uleb128 0x1f
 3479 0d67 10000000 		.4byte	.LVL102
 3480 0d6b E40C0000 		.4byte	0xce4
 3481 0d6f 1C       		.uleb128 0x1c
 3482 0d70 01       		.uleb128 0x1
 3483 0d71 50       		.byte	0x50
 3484 0d72 02       		.uleb128 0x2
 3485 0d73 74       		.byte	0x74
 3486 0d74 00       		.sleb128 0
 3487 0d75 00       		.byte	0
 3488 0d76 00       		.byte	0
 3489 0d77 19       		.uleb128 0x19
 3490 0d78 46060000 		.4byte	.LASF183
 3491 0d7c 01       		.byte	0x1
 3492 0d7d 5406     		.2byte	0x654
 3493 0d7f BA000000 		.4byte	0xba
 3494 0d83 00000000 		.4byte	.LFB17
 3495 0d87 3C000000 		.4byte	.LFE17-.LFB17
 3496 0d8b 01       		.uleb128 0x1
 3497 0d8c 9C       		.byte	0x9c
 3498 0d8d C20D0000 		.4byte	0xdc2
 3499 0d91 16       		.uleb128 0x16
 3500 0d92 2D0F0000 		.4byte	.LASF152
 3501 0d96 01       		.byte	0x1
 3502 0d97 5406     		.2byte	0x654
 3503 0d99 99000000 		.4byte	0x99
 3504 0d9d 38050000 		.4byte	.LLST37
 3505 0da1 17       		.uleb128 0x17
 3506 0da2 44070000 		.4byte	.LASF184
 3507 0da6 01       		.byte	0x1
 3508 0da7 5606     		.2byte	0x656
 3509 0da9 BA000000 		.4byte	0xba
 3510 0dad 59050000 		.4byte	.LLST38
 3511 0db1 1F       		.uleb128 0x1f
 3512 0db2 30000000 		.4byte	.LVL107
ARM GAS  C:\Users\mstai\AppData\Local\Temp\ccHdifRP.s 			page 124


 3513 0db6 DF130000 		.4byte	0x13df
 3514 0dba 1C       		.uleb128 0x1c
 3515 0dbb 01       		.uleb128 0x1
 3516 0dbc 51       		.byte	0x51
 3517 0dbd 02       		.uleb128 0x2
 3518 0dbe 08       		.byte	0x8
 3519 0dbf 55       		.byte	0x55
 3520 0dc0 00       		.byte	0
 3521 0dc1 00       		.byte	0
 3522 0dc2 19       		.uleb128 0x19
 3523 0dc3 4B010000 		.4byte	.LASF185
 3524 0dc7 01       		.byte	0x1
 3525 0dc8 C906     		.2byte	0x6c9
 3526 0dca BA000000 		.4byte	0xba
 3527 0dce 00000000 		.4byte	.LFB18
 3528 0dd2 1A000000 		.4byte	.LFE18-.LFB18
 3529 0dd6 01       		.uleb128 0x1
 3530 0dd7 9C       		.byte	0x9c
 3531 0dd8 0D0E0000 		.4byte	0xe0d
 3532 0ddc 17       		.uleb128 0x17
 3533 0ddd 44070000 		.4byte	.LASF184
 3534 0de1 01       		.byte	0x1
 3535 0de2 CB06     		.2byte	0x6cb
 3536 0de4 BA000000 		.4byte	0xba
 3537 0de8 83050000 		.4byte	.LLST39
 3538 0dec 17       		.uleb128 0x17
 3539 0ded F8080000 		.4byte	.LASF158
 3540 0df1 01       		.byte	0x1
 3541 0df2 CC06     		.2byte	0x6cc
 3542 0df4 99000000 		.4byte	0x99
 3543 0df8 AD050000 		.4byte	.LLST40
 3544 0dfc 1F       		.uleb128 0x1f
 3545 0dfd 0E000000 		.4byte	.LVL111
 3546 0e01 770D0000 		.4byte	0xd77
 3547 0e05 1C       		.uleb128 0x1c
 3548 0e06 01       		.uleb128 0x1
 3549 0e07 50       		.byte	0x50
 3550 0e08 02       		.uleb128 0x2
 3551 0e09 74       		.byte	0x74
 3552 0e0a 00       		.sleb128 0
 3553 0e0b 00       		.byte	0
 3554 0e0c 00       		.byte	0
 3555 0e0d 19       		.uleb128 0x19
 3556 0e0e 00000000 		.4byte	.LASF186
 3557 0e12 01       		.byte	0x1
 3558 0e13 E80A     		.2byte	0xae8
 3559 0e15 99000000 		.4byte	0x99
 3560 0e19 00000000 		.4byte	.LFB23
 3561 0e1d 10000000 		.4byte	.LFE23-.LFB23
 3562 0e21 01       		.uleb128 0x1
 3563 0e22 9C       		.byte	0x9c
 3564 0e23 540E0000 		.4byte	0xe54
 3565 0e27 16       		.uleb128 0x16
 3566 0e28 2D0F0000 		.4byte	.LASF152
 3567 0e2c 01       		.byte	0x1
 3568 0e2d E80A     		.2byte	0xae8
 3569 0e2f 99000000 		.4byte	0x99
ARM GAS  C:\Users\mstai\AppData\Local\Temp\ccHdifRP.s 			page 125


 3570 0e33 CC050000 		.4byte	.LLST41
 3571 0e37 22       		.uleb128 0x22
 3572 0e38 D80B0000 		.4byte	.LASF187
 3573 0e3c 01       		.byte	0x1
 3574 0e3d EA0A     		.2byte	0xaea
 3575 0e3f 99000000 		.4byte	0x99
 3576 0e43 01       		.uleb128 0x1
 3577 0e44 50       		.byte	0x50
 3578 0e45 22       		.uleb128 0x22
 3579 0e46 3B020000 		.4byte	.LASF188
 3580 0e4a 01       		.byte	0x1
 3581 0e4b EE0A     		.2byte	0xaee
 3582 0e4d 540E0000 		.4byte	0xe54
 3583 0e51 01       		.uleb128 0x1
 3584 0e52 53       		.byte	0x53
 3585 0e53 00       		.byte	0
 3586 0e54 07       		.uleb128 0x7
 3587 0e55 04       		.byte	0x4
 3588 0e56 ED010000 		.4byte	0x1ed
 3589 0e5a 19       		.uleb128 0x19
 3590 0e5b 6D040000 		.4byte	.LASF189
 3591 0e5f 01       		.byte	0x1
 3592 0e60 400B     		.2byte	0xb40
 3593 0e62 81000000 		.4byte	0x81
 3594 0e66 00000000 		.4byte	.LFB24
 3595 0e6a 24000000 		.4byte	.LFE24-.LFB24
 3596 0e6e 01       		.uleb128 0x1
 3597 0e6f 9C       		.byte	0x9c
 3598 0e70 B00E0000 		.4byte	0xeb0
 3599 0e74 16       		.uleb128 0x16
 3600 0e75 DF0E0000 		.4byte	.LASF144
 3601 0e79 01       		.byte	0x1
 3602 0e7a 400B     		.2byte	0xb40
 3603 0e7c 99000000 		.4byte	0x99
 3604 0e80 ED050000 		.4byte	.LLST42
 3605 0e84 23       		.uleb128 0x23
 3606 0e85 34060000 		.4byte	.LASF28
 3607 0e89 01       		.byte	0x1
 3608 0e8a 400B     		.2byte	0xb40
 3609 0e8c 99000000 		.4byte	0x99
 3610 0e90 01       		.uleb128 0x1
 3611 0e91 51       		.byte	0x51
 3612 0e92 17       		.uleb128 0x17
 3613 0e93 AD0B0000 		.4byte	.LASF190
 3614 0e97 01       		.byte	0x1
 3615 0e98 420B     		.2byte	0xb42
 3616 0e9a 99000000 		.4byte	0x99
 3617 0e9e 27060000 		.4byte	.LLST43
 3618 0ea2 1E       		.uleb128 0x1e
 3619 0ea3 ED0E0000 		.4byte	.LASF191
 3620 0ea7 01       		.byte	0x1
 3621 0ea8 430B     		.2byte	0xb43
 3622 0eaa 99000000 		.4byte	0x99
 3623 0eae 01       		.byte	0x1
 3624 0eaf 00       		.byte	0
 3625 0eb0 24       		.uleb128 0x24
 3626 0eb1 4C020000 		.4byte	.LASF203
ARM GAS  C:\Users\mstai\AppData\Local\Temp\ccHdifRP.s 			page 126


 3627 0eb5 01       		.byte	0x1
 3628 0eb6 9909     		.2byte	0x999
 3629 0eb8 00000000 		.4byte	.LFB20
 3630 0ebc 3A000000 		.4byte	.LFE20-.LFB20
 3631 0ec0 01       		.uleb128 0x1
 3632 0ec1 9C       		.byte	0x9c
 3633 0ec2 950F0000 		.4byte	0xf95
 3634 0ec6 16       		.uleb128 0x16
 3635 0ec7 F8080000 		.4byte	.LASF158
 3636 0ecb 01       		.byte	0x1
 3637 0ecc 9909     		.2byte	0x999
 3638 0ece 99000000 		.4byte	0x99
 3639 0ed2 3A060000 		.4byte	.LLST44
 3640 0ed6 16       		.uleb128 0x16
 3641 0ed7 3B020000 		.4byte	.LASF188
 3642 0edb 01       		.byte	0x1
 3643 0edc 9909     		.2byte	0x999
 3644 0ede 540E0000 		.4byte	0xe54
 3645 0ee2 5B060000 		.4byte	.LLST45
 3646 0ee6 17       		.uleb128 0x17
 3647 0ee7 FE030000 		.4byte	.LASF148
 3648 0eeb 01       		.byte	0x1
 3649 0eec 9B09     		.2byte	0x99b
 3650 0eee 81000000 		.4byte	0x81
 3651 0ef2 87060000 		.4byte	.LLST46
 3652 0ef6 17       		.uleb128 0x17
 3653 0ef7 31010000 		.4byte	.LASF149
 3654 0efb 01       		.byte	0x1
 3655 0efc 9C09     		.2byte	0x99c
 3656 0efe 81000000 		.4byte	0x81
 3657 0f02 A5060000 		.4byte	.LLST47
 3658 0f06 17       		.uleb128 0x17
 3659 0f07 18060000 		.4byte	.LASF145
 3660 0f0b 01       		.byte	0x1
 3661 0f0c A009     		.2byte	0x9a0
 3662 0f0e 99000000 		.4byte	0x99
 3663 0f12 B8060000 		.4byte	.LLST48
 3664 0f16 17       		.uleb128 0x17
 3665 0f17 DF0E0000 		.4byte	.LASF144
 3666 0f1b 01       		.byte	0x1
 3667 0f1c A209     		.2byte	0x9a2
 3668 0f1e 99000000 		.4byte	0x99
 3669 0f22 D6060000 		.4byte	.LLST49
 3670 0f26 1B       		.uleb128 0x1b
 3671 0f27 08000000 		.4byte	.LVL127
 3672 0f2b 0D0E0000 		.4byte	0xe0d
 3673 0f2f 3B0F0000 		.4byte	0xf3b
 3674 0f33 1C       		.uleb128 0x1c
 3675 0f34 01       		.uleb128 0x1
 3676 0f35 50       		.byte	0x50
 3677 0f36 03       		.uleb128 0x3
 3678 0f37 F3       		.byte	0xf3
 3679 0f38 01       		.uleb128 0x1
 3680 0f39 50       		.byte	0x50
 3681 0f3a 00       		.byte	0
 3682 0f3b 1B       		.uleb128 0x1b
 3683 0f3c 12000000 		.4byte	.LVL129
ARM GAS  C:\Users\mstai\AppData\Local\Temp\ccHdifRP.s 			page 127


 3684 0f40 EB130000 		.4byte	0x13eb
 3685 0f44 540F0000 		.4byte	0xf54
 3686 0f48 1C       		.uleb128 0x1c
 3687 0f49 01       		.uleb128 0x1
 3688 0f4a 50       		.byte	0x50
 3689 0f4b 02       		.uleb128 0x2
 3690 0f4c 75       		.byte	0x75
 3691 0f4d 00       		.sleb128 0
 3692 0f4e 1C       		.uleb128 0x1c
 3693 0f4f 01       		.uleb128 0x1
 3694 0f50 52       		.byte	0x52
 3695 0f51 01       		.uleb128 0x1
 3696 0f52 30       		.byte	0x30
 3697 0f53 00       		.byte	0
 3698 0f54 1B       		.uleb128 0x1b
 3699 0f55 1A000000 		.4byte	.LVL132
 3700 0f59 C9080000 		.4byte	0x8c9
 3701 0f5d 680F0000 		.4byte	0xf68
 3702 0f61 1C       		.uleb128 0x1c
 3703 0f62 01       		.uleb128 0x1
 3704 0f63 50       		.byte	0x50
 3705 0f64 02       		.uleb128 0x2
 3706 0f65 75       		.byte	0x75
 3707 0f66 00       		.sleb128 0
 3708 0f67 00       		.byte	0
 3709 0f68 1B       		.uleb128 0x1b
 3710 0f69 26000000 		.4byte	.LVL135
 3711 0f6d 5A0E0000 		.4byte	0xe5a
 3712 0f71 7E0F0000 		.4byte	0xf7e
 3713 0f75 1C       		.uleb128 0x1c
 3714 0f76 01       		.uleb128 0x1
 3715 0f77 50       		.byte	0x50
 3716 0f78 04       		.uleb128 0x4
 3717 0f79 75       		.byte	0x75
 3718 0f7a 00       		.sleb128 0
 3719 0f7b 31       		.byte	0x31
 3720 0f7c 24       		.byte	0x24
 3721 0f7d 00       		.byte	0
 3722 0f7e 1F       		.uleb128 0x1f
 3723 0f7f 30000000 		.4byte	.LVL137
 3724 0f83 14090000 		.4byte	0x914
 3725 0f87 1C       		.uleb128 0x1c
 3726 0f88 01       		.uleb128 0x1
 3727 0f89 50       		.byte	0x50
 3728 0f8a 02       		.uleb128 0x2
 3729 0f8b 75       		.byte	0x75
 3730 0f8c 00       		.sleb128 0
 3731 0f8d 1C       		.uleb128 0x1c
 3732 0f8e 01       		.uleb128 0x1
 3733 0f8f 51       		.byte	0x51
 3734 0f90 02       		.uleb128 0x2
 3735 0f91 74       		.byte	0x74
 3736 0f92 00       		.sleb128 0
 3737 0f93 00       		.byte	0
 3738 0f94 00       		.byte	0
 3739 0f95 1D       		.uleb128 0x1d
 3740 0f96 540F0000 		.4byte	.LASF192
ARM GAS  C:\Users\mstai\AppData\Local\Temp\ccHdifRP.s 			page 128


 3741 0f9a 01       		.byte	0x1
 3742 0f9b 6409     		.2byte	0x964
 3743 0f9d 00000000 		.4byte	.LFB19
 3744 0fa1 28000000 		.4byte	.LFE19-.LFB19
 3745 0fa5 01       		.uleb128 0x1
 3746 0fa6 9C       		.byte	0x9c
 3747 0fa7 F00F0000 		.4byte	0xff0
 3748 0fab 17       		.uleb128 0x17
 3749 0fac F8080000 		.4byte	.LASF158
 3750 0fb0 01       		.byte	0x1
 3751 0fb1 6609     		.2byte	0x966
 3752 0fb3 99000000 		.4byte	0x99
 3753 0fb7 F4060000 		.4byte	.LLST50
 3754 0fbb 17       		.uleb128 0x17
 3755 0fbc 3B020000 		.4byte	.LASF188
 3756 0fc0 01       		.byte	0x1
 3757 0fc1 6709     		.2byte	0x967
 3758 0fc3 540E0000 		.4byte	0xe54
 3759 0fc7 13070000 		.4byte	.LLST51
 3760 0fcb 1B       		.uleb128 0x1b
 3761 0fcc 14000000 		.4byte	.LVL145
 3762 0fd0 B00E0000 		.4byte	0xeb0
 3763 0fd4 DF0F0000 		.4byte	0xfdf
 3764 0fd8 1C       		.uleb128 0x1c
 3765 0fd9 01       		.uleb128 0x1
 3766 0fda 50       		.byte	0x50
 3767 0fdb 02       		.uleb128 0x2
 3768 0fdc 74       		.byte	0x74
 3769 0fdd 00       		.sleb128 0
 3770 0fde 00       		.byte	0
 3771 0fdf 1F       		.uleb128 0x1f
 3772 0fe0 1A000000 		.4byte	.LVL146
 3773 0fe4 F7130000 		.4byte	0x13f7
 3774 0fe8 1C       		.uleb128 0x1c
 3775 0fe9 01       		.uleb128 0x1
 3776 0fea 50       		.byte	0x50
 3777 0feb 02       		.uleb128 0x2
 3778 0fec 74       		.byte	0x74
 3779 0fed 00       		.sleb128 0
 3780 0fee 00       		.byte	0
 3781 0fef 00       		.byte	0
 3782 0ff0 1D       		.uleb128 0x1d
 3783 0ff1 77050000 		.4byte	.LASF193
 3784 0ff5 01       		.byte	0x1
 3785 0ff6 7A0B     		.2byte	0xb7a
 3786 0ff8 00000000 		.4byte	.LFB25
 3787 0ffc D4000000 		.4byte	.LFE25-.LFB25
 3788 1000 01       		.uleb128 0x1
 3789 1001 9C       		.byte	0x9c
 3790 1002 E9100000 		.4byte	0x10e9
 3791 1006 16       		.uleb128 0x16
 3792 1007 B6040000 		.4byte	.LASF194
 3793 100b 01       		.byte	0x1
 3794 100c 7A0B     		.2byte	0xb7a
 3795 100e 99000000 		.4byte	0x99
 3796 1012 26070000 		.4byte	.LLST52
 3797 1016 17       		.uleb128 0x17
ARM GAS  C:\Users\mstai\AppData\Local\Temp\ccHdifRP.s 			page 129


 3798 1017 A50E0000 		.4byte	.LASF195
 3799 101b 01       		.byte	0x1
 3800 101c 7C0B     		.2byte	0xb7c
 3801 101e 99000000 		.4byte	0x99
 3802 1022 53070000 		.4byte	.LLST53
 3803 1026 17       		.uleb128 0x17
 3804 1027 3B010000 		.4byte	.LASF196
 3805 102b 01       		.byte	0x1
 3806 102c 7D0B     		.2byte	0xb7d
 3807 102e 99000000 		.4byte	0x99
 3808 1032 72070000 		.4byte	.LLST54
 3809 1036 17       		.uleb128 0x17
 3810 1037 22040000 		.4byte	.LASF197
 3811 103b 01       		.byte	0x1
 3812 103c 7E0B     		.2byte	0xb7e
 3813 103e 99000000 		.4byte	0x99
 3814 1042 90070000 		.4byte	.LLST55
 3815 1046 17       		.uleb128 0x17
 3816 1047 920E0000 		.4byte	.LASF181
 3817 104b 01       		.byte	0x1
 3818 104c 7F0B     		.2byte	0xb7f
 3819 104e 99000000 		.4byte	0x99
 3820 1052 AE070000 		.4byte	.LLST56
 3821 1056 17       		.uleb128 0x17
 3822 1057 1B010000 		.4byte	.LASF166
 3823 105b 01       		.byte	0x1
 3824 105c 800B     		.2byte	0xb80
 3825 105e 81000000 		.4byte	0x81
 3826 1062 19080000 		.4byte	.LLST57
 3827 1066 1A       		.uleb128 0x1a
 3828 1067 38000000 		.4byte	.LVL154
 3829 106b B2130000 		.4byte	0x13b2
 3830 106f 1A       		.uleb128 0x1a
 3831 1070 46000000 		.4byte	.LVL158
 3832 1074 BD130000 		.4byte	0x13bd
 3833 1078 1A       		.uleb128 0x1a
 3834 1079 4A000000 		.4byte	.LVL159
 3835 107d B2130000 		.4byte	0x13b2
 3836 1081 1A       		.uleb128 0x1a
 3837 1082 56000000 		.4byte	.LVL162
 3838 1086 BD130000 		.4byte	0x13bd
 3839 108a 1A       		.uleb128 0x1a
 3840 108b 5A000000 		.4byte	.LVL163
 3841 108f B2130000 		.4byte	0x13b2
 3842 1093 1A       		.uleb128 0x1a
 3843 1094 6C000000 		.4byte	.LVL168
 3844 1098 BD130000 		.4byte	0x13bd
 3845 109c 1B       		.uleb128 0x1b
 3846 109d 74000000 		.4byte	.LVL169
 3847 10a1 02140000 		.4byte	0x1402
 3848 10a5 B2100000 		.4byte	0x10b2
 3849 10a9 1C       		.uleb128 0x1c
 3850 10aa 01       		.uleb128 0x1
 3851 10ab 50       		.byte	0x50
 3852 10ac 04       		.uleb128 0x4
 3853 10ad 7D       		.byte	0x7d
 3854 10ae 04       		.sleb128 4
ARM GAS  C:\Users\mstai\AppData\Local\Temp\ccHdifRP.s 			page 130


 3855 10af 94       		.byte	0x94
 3856 10b0 02       		.byte	0x2
 3857 10b1 00       		.byte	0
 3858 10b2 1A       		.uleb128 0x1a
 3859 10b3 78000000 		.4byte	.LVL170
 3860 10b7 B2130000 		.4byte	0x13b2
 3861 10bb 1A       		.uleb128 0x1a
 3862 10bc 86000000 		.4byte	.LVL174
 3863 10c0 BD130000 		.4byte	0x13bd
 3864 10c4 1A       		.uleb128 0x1a
 3865 10c5 8A000000 		.4byte	.LVL175
 3866 10c9 B2130000 		.4byte	0x13b2
 3867 10cd 1A       		.uleb128 0x1a
 3868 10ce 9A000000 		.4byte	.LVL179
 3869 10d2 BD130000 		.4byte	0x13bd
 3870 10d6 1A       		.uleb128 0x1a
 3871 10d7 9E000000 		.4byte	.LVL180
 3872 10db B2130000 		.4byte	0x13b2
 3873 10df 1A       		.uleb128 0x1a
 3874 10e0 B0000000 		.4byte	.LVL184
 3875 10e4 BD130000 		.4byte	0x13bd
 3876 10e8 00       		.byte	0
 3877 10e9 19       		.uleb128 0x19
 3878 10ea C7060000 		.4byte	.LASF198
 3879 10ee 01       		.byte	0x1
 3880 10ef 840C     		.2byte	0xc84
 3881 10f1 76000000 		.4byte	0x76
 3882 10f5 00000000 		.4byte	.LFB26
 3883 10f9 30000000 		.4byte	.LFE26-.LFB26
 3884 10fd 01       		.uleb128 0x1
 3885 10fe 9C       		.byte	0x9c
 3886 10ff 43110000 		.4byte	0x1143
 3887 1103 16       		.uleb128 0x16
 3888 1104 8D040000 		.4byte	.LASF199
 3889 1108 01       		.byte	0x1
 3890 1109 840C     		.2byte	0xc84
 3891 110b 92080000 		.4byte	0x892
 3892 110f 63080000 		.4byte	.LLST58
 3893 1113 16       		.uleb128 0x16
 3894 1114 380D0000 		.4byte	.LASF163
 3895 1118 01       		.byte	0x1
 3896 1119 840C     		.2byte	0xc84
 3897 111b 76000000 		.4byte	0x76
 3898 111f B6080000 		.4byte	.LLST59
 3899 1123 17       		.uleb128 0x17
 3900 1124 D80B0000 		.4byte	.LASF187
 3901 1128 01       		.byte	0x1
 3902 1129 860C     		.2byte	0xc86
 3903 112b 76000000 		.4byte	0x76
 3904 112f D7080000 		.4byte	.LLST60
 3905 1133 1F       		.uleb128 0x1f
 3906 1134 26000000 		.4byte	.LVL195
 3907 1138 0D140000 		.4byte	0x140d
 3908 113c 1C       		.uleb128 0x1c
 3909 113d 01       		.uleb128 0x1
 3910 113e 50       		.byte	0x50
 3911 113f 01       		.uleb128 0x1
ARM GAS  C:\Users\mstai\AppData\Local\Temp\ccHdifRP.s 			page 131


 3912 1140 30       		.byte	0x30
 3913 1141 00       		.byte	0
 3914 1142 00       		.byte	0
 3915 1143 1D       		.uleb128 0x1d
 3916 1144 95070000 		.4byte	.LASF200
 3917 1148 01       		.byte	0x1
 3918 1149 D90C     		.2byte	0xcd9
 3919 114b 00000000 		.4byte	.LFB27
 3920 114f 1C000000 		.4byte	.LFE27-.LFB27
 3921 1153 01       		.uleb128 0x1
 3922 1154 9C       		.byte	0x9c
 3923 1155 AC110000 		.4byte	0x11ac
 3924 1159 16       		.uleb128 0x16
 3925 115a E8010000 		.4byte	.LASF201
 3926 115e 01       		.byte	0x1
 3927 115f D90C     		.2byte	0xcd9
 3928 1161 68070000 		.4byte	0x768
 3929 1165 02090000 		.4byte	.LLST61
 3930 1169 16       		.uleb128 0x16
 3931 116a 83080000 		.4byte	.LASF116
 3932 116e 01       		.byte	0x1
 3933 116f D90C     		.2byte	0xcd9
 3934 1171 99000000 		.4byte	0x99
 3935 1175 2E090000 		.4byte	.LLST62
 3936 1179 16       		.uleb128 0x16
 3937 117a 28040000 		.4byte	.LASF202
 3938 117e 01       		.byte	0x1
 3939 117f D90C     		.2byte	0xcd9
 3940 1181 99000000 		.4byte	0x99
 3941 1185 5A090000 		.4byte	.LLST63
 3942 1189 17       		.uleb128 0x17
 3943 118a 1B010000 		.4byte	.LASF166
 3944 118e 01       		.byte	0x1
 3945 118f DB0C     		.2byte	0xcdb
 3946 1191 81000000 		.4byte	0x81
 3947 1195 86090000 		.4byte	.LLST64
 3948 1199 1A       		.uleb128 0x1a
 3949 119a 0C000000 		.4byte	.LVL198
 3950 119e B2130000 		.4byte	0x13b2
 3951 11a2 1A       		.uleb128 0x1a
 3952 11a3 1A000000 		.4byte	.LVL200
 3953 11a7 BD130000 		.4byte	0x13bd
 3954 11ab 00       		.byte	0
 3955 11ac 24       		.uleb128 0x24
 3956 11ad 3B000000 		.4byte	.LASF204
 3957 11b1 01       		.byte	0x1
 3958 11b2 B903     		.2byte	0x3b9
 3959 11b4 00000000 		.4byte	.LFB9
 3960 11b8 28000000 		.4byte	.LFE9-.LFB9
 3961 11bc 01       		.uleb128 0x1
 3962 11bd 9C       		.byte	0x9c
 3963 11be FF110000 		.4byte	0x11ff
 3964 11c2 17       		.uleb128 0x17
 3965 11c3 920E0000 		.4byte	.LASF181
 3966 11c7 01       		.byte	0x1
 3967 11c8 BE03     		.2byte	0x3be
 3968 11ca 99000000 		.4byte	0x99
ARM GAS  C:\Users\mstai\AppData\Local\Temp\ccHdifRP.s 			page 132


 3969 11ce 99090000 		.4byte	.LLST65
 3970 11d2 1B       		.uleb128 0x1b
 3971 11d3 18000000 		.4byte	.LVL205
 3972 11d7 43110000 		.4byte	0x1143
 3973 11db F5110000 		.4byte	0x11f5
 3974 11df 1C       		.uleb128 0x1c
 3975 11e0 01       		.uleb128 0x1
 3976 11e1 50       		.byte	0x50
 3977 11e2 05       		.uleb128 0x5
 3978 11e3 0C       		.byte	0xc
 3979 11e4 00040240 		.4byte	0x40020400
 3980 11e8 1C       		.uleb128 0x1c
 3981 11e9 01       		.uleb128 0x1
 3982 11ea 51       		.byte	0x51
 3983 11eb 03       		.uleb128 0x3
 3984 11ec 0A       		.byte	0xa
 3985 11ed 000F     		.2byte	0xf00
 3986 11ef 1C       		.uleb128 0x1c
 3987 11f0 01       		.uleb128 0x1
 3988 11f1 52       		.byte	0x52
 3989 11f2 01       		.uleb128 0x1
 3990 11f3 30       		.byte	0x30
 3991 11f4 00       		.byte	0
 3992 11f5 1A       		.uleb128 0x1a
 3993 11f6 1C000000 		.4byte	.LVL206
 3994 11fa 18140000 		.4byte	0x1418
 3995 11fe 00       		.byte	0
 3996 11ff 1D       		.uleb128 0x1d
 3997 1200 790D0000 		.4byte	.LASF205
 3998 1204 01       		.byte	0x1
 3999 1205 2B04     		.2byte	0x42b
 4000 1207 00000000 		.4byte	.LFB10
 4001 120b 5C000000 		.4byte	.LFE10-.LFB10
 4002 120f 01       		.uleb128 0x1
 4003 1210 9C       		.byte	0x9c
 4004 1211 4A120000 		.4byte	0x124a
 4005 1215 16       		.uleb128 0x16
 4006 1216 8D040000 		.4byte	.LASF199
 4007 121a 01       		.byte	0x1
 4008 121b 2B04     		.2byte	0x42b
 4009 121d 32010000 		.4byte	0x132
 4010 1221 AC090000 		.4byte	.LLST66
 4011 1225 1A       		.uleb128 0x1a
 4012 1226 14000000 		.4byte	.LVL208
 4013 122a AC110000 		.4byte	0x11ac
 4014 122e 1A       		.uleb128 0x1a
 4015 122f 26000000 		.4byte	.LVL210
 4016 1233 24140000 		.4byte	0x1424
 4017 1237 1A       		.uleb128 0x1a
 4018 1238 2E000000 		.4byte	.LVL211
 4019 123c 2F140000 		.4byte	0x142f
 4020 1240 1A       		.uleb128 0x1a
 4021 1241 46000000 		.4byte	.LVL212
 4022 1245 3B140000 		.4byte	0x143b
 4023 1249 00       		.byte	0
 4024 124a 19       		.uleb128 0x19
 4025 124b C90E0000 		.4byte	.LASF206
ARM GAS  C:\Users\mstai\AppData\Local\Temp\ccHdifRP.s 			page 133


 4026 124f 01       		.byte	0x1
 4027 1250 C302     		.2byte	0x2c3
 4028 1252 BA000000 		.4byte	0xba
 4029 1256 00000000 		.4byte	.LFB7
 4030 125a 24000000 		.4byte	.LFE7-.LFB7
 4031 125e 01       		.uleb128 0x1
 4032 125f 9C       		.byte	0x9c
 4033 1260 9D120000 		.4byte	0x129d
 4034 1264 1E       		.uleb128 0x1e
 4035 1265 EE000000 		.4byte	.LASF207
 4036 1269 01       		.byte	0x1
 4037 126a C502     		.2byte	0x2c5
 4038 126c BA000000 		.4byte	0xba
 4039 1270 00       		.byte	0
 4040 1271 1A       		.uleb128 0x1a
 4041 1272 06000000 		.4byte	.LVL214
 4042 1276 950F0000 		.4byte	0xf95
 4043 127a 1B       		.uleb128 0x1b
 4044 127b 0C000000 		.4byte	.LVL215
 4045 127f C10B0000 		.4byte	0xbc1
 4046 1283 8D120000 		.4byte	0x128d
 4047 1287 1C       		.uleb128 0x1c
 4048 1288 01       		.uleb128 0x1
 4049 1289 50       		.byte	0x50
 4050 128a 01       		.uleb128 0x1
 4051 128b 30       		.byte	0x30
 4052 128c 00       		.byte	0
 4053 128d 1F       		.uleb128 0x1f
 4054 128e 1A000000 		.4byte	.LVL216
 4055 1292 FF110000 		.4byte	0x11ff
 4056 1296 1C       		.uleb128 0x1c
 4057 1297 01       		.uleb128 0x1
 4058 1298 50       		.byte	0x50
 4059 1299 01       		.uleb128 0x1
 4060 129a 30       		.byte	0x30
 4061 129b 00       		.byte	0
 4062 129c 00       		.byte	0
 4063 129d 25       		.uleb128 0x25
 4064 129e B9070000 		.4byte	.LASF208
 4065 12a2 06       		.byte	0x6
 4066 12a3 2005     		.2byte	0x520
 4067 12a5 D0060000 		.4byte	0x6d0
 4068 12a9 25       		.uleb128 0x25
 4069 12aa D60A0000 		.4byte	.LASF209
 4070 12ae 06       		.byte	0x6
 4071 12af 2105     		.2byte	0x521
 4072 12b1 B5120000 		.4byte	0x12b5
 4073 12b5 20       		.uleb128 0x20
 4074 12b6 54080000 		.4byte	0x854
 4075 12ba 0E       		.uleb128 0xe
 4076 12bb BC0B0000 		.4byte	0xbbc
 4077 12bf CA120000 		.4byte	0x12ca
 4078 12c3 0F       		.uleb128 0xf
 4079 12c4 E6010000 		.4byte	0x1e6
 4080 12c8 00       		.byte	0
 4081 12c9 00       		.byte	0
 4082 12ca 25       		.uleb128 0x25
ARM GAS  C:\Users\mstai\AppData\Local\Temp\ccHdifRP.s 			page 134


 4083 12cb 4C0E0000 		.4byte	.LASF210
 4084 12cf 06       		.byte	0x6
 4085 12d0 2205     		.2byte	0x522
 4086 12d2 D6120000 		.4byte	0x12d6
 4087 12d6 20       		.uleb128 0x20
 4088 12d7 BA120000 		.4byte	0x12ba
 4089 12db 26       		.uleb128 0x26
 4090 12dc 6D000000 		.4byte	.LASF211
 4091 12e0 01       		.byte	0x1
 4092 12e1 BC       		.byte	0xbc
 4093 12e2 C6000000 		.4byte	0xc6
 4094 12e6 05       		.uleb128 0x5
 4095 12e7 03       		.byte	0x3
 4096 12e8 00000000 		.4byte	CapSense_widgetIndex
 4097 12ec 26       		.uleb128 0x26
 4098 12ed 98030000 		.4byte	.LASF212
 4099 12f1 01       		.byte	0x1
 4100 12f2 BD       		.byte	0xbd
 4101 12f3 C6000000 		.4byte	0xc6
 4102 12f7 05       		.uleb128 0x5
 4103 12f8 03       		.byte	0x3
 4104 12f9 00000000 		.4byte	CapSense_sensorIndex
 4105 12fd 26       		.uleb128 0x26
 4106 12fe 360F0000 		.4byte	.LASF213
 4107 1302 01       		.byte	0x1
 4108 1303 BE       		.byte	0xbe
 4109 1304 81000000 		.4byte	0x81
 4110 1308 05       		.uleb128 0x5
 4111 1309 03       		.byte	0x3
 4112 130a 00000000 		.4byte	CapSense_requestScanAllWidget
 4113 130e 26       		.uleb128 0x26
 4114 130f CE0D0000 		.4byte	.LASF214
 4115 1313 01       		.byte	0x1
 4116 1314 C1       		.byte	0xc1
 4117 1315 0F080000 		.4byte	0x80f
 4118 1319 05       		.uleb128 0x5
 4119 131a 03       		.byte	0x3
 4120 131b 00000000 		.4byte	CapSense_curRamSnsPtr
 4121 131f 26       		.uleb128 0x26
 4122 1320 910B0000 		.4byte	.LASF215
 4123 1324 01       		.byte	0x1
 4124 1325 AF       		.byte	0xaf
 4125 1326 32010000 		.4byte	0x132
 4126 132a 05       		.uleb128 0x5
 4127 132b 03       		.byte	0x3
 4128 132c 00000000 		.4byte	CapSense_currentSenseMethod
 4129 1330 26       		.uleb128 0x26
 4130 1331 1D0E0000 		.4byte	.LASF216
 4131 1335 01       		.byte	0x1
 4132 1336 B8       		.byte	0xb8
 4133 1337 41130000 		.4byte	0x1341
 4134 133b 05       		.uleb128 0x5
 4135 133c 03       		.byte	0x3
 4136 133d 00000000 		.4byte	CapSense_scanFreqIndex
 4137 1341 20       		.uleb128 0x20
 4138 1342 81000000 		.4byte	0x81
 4139 1346 26       		.uleb128 0x26
ARM GAS  C:\Users\mstai\AppData\Local\Temp\ccHdifRP.s 			page 135


 4140 1347 6E080000 		.4byte	.LASF217
 4141 134b 01       		.byte	0x1
 4142 134c D0       		.byte	0xd0
 4143 134d B60B0000 		.4byte	0xbb6
 4144 1351 05       		.uleb128 0x5
 4145 1352 03       		.byte	0x3
 4146 1353 00000000 		.4byte	CapSense_curSnsIOPtr
 4147 1357 0E       		.uleb128 0xe
 4148 1358 67130000 		.4byte	0x1367
 4149 135c 67130000 		.4byte	0x1367
 4150 1360 0F       		.uleb128 0xf
 4151 1361 E6010000 		.4byte	0x1e6
 4152 1365 06       		.byte	0x6
 4153 1366 00       		.byte	0
 4154 1367 20       		.uleb128 0x20
 4155 1368 BE080000 		.4byte	0x8be
 4156 136c 26       		.uleb128 0x26
 4157 136d 780F0000 		.4byte	.LASF218
 4158 1371 01       		.byte	0x1
 4159 1372 D2       		.byte	0xd2
 4160 1373 7D130000 		.4byte	0x137d
 4161 1377 05       		.uleb128 0x5
 4162 1378 03       		.byte	0x3
 4163 1379 00000000 		.4byte	CapSense_idacGainTable
 4164 137d 20       		.uleb128 0x20
 4165 137e 57130000 		.4byte	0x1357
 4166 1382 27       		.uleb128 0x27
 4167 1383 47030000 		.4byte	.LASF219
 4168 1387 47030000 		.4byte	.LASF219
 4169 138b 08       		.byte	0x8
 4170 138c 8801     		.2byte	0x188
 4171 138e 27       		.uleb128 0x27
 4172 138f 33080000 		.4byte	.LASF220
 4173 1393 33080000 		.4byte	.LASF220
 4174 1397 08       		.byte	0x8
 4175 1398 8A01     		.2byte	0x18a
 4176 139a 27       		.uleb128 0x27
 4177 139b 07040000 		.4byte	.LASF221
 4178 139f 07040000 		.4byte	.LASF221
 4179 13a3 08       		.byte	0x8
 4180 13a4 8901     		.2byte	0x189
 4181 13a6 27       		.uleb128 0x27
 4182 13a7 F10A0000 		.4byte	.LASF222
 4183 13ab F10A0000 		.4byte	.LASF222
 4184 13af 08       		.byte	0x8
 4185 13b0 8B01     		.2byte	0x18b
 4186 13b2 28       		.uleb128 0x28
 4187 13b3 A80D0000 		.4byte	.LASF223
 4188 13b7 A80D0000 		.4byte	.LASF223
 4189 13bb 09       		.byte	0x9
 4190 13bc E5       		.byte	0xe5
 4191 13bd 28       		.uleb128 0x28
 4192 13be 61050000 		.4byte	.LASF224
 4193 13c2 61050000 		.4byte	.LASF224
 4194 13c6 09       		.byte	0x9
 4195 13c7 E6       		.byte	0xe6
 4196 13c8 27       		.uleb128 0x27
ARM GAS  C:\Users\mstai\AppData\Local\Temp\ccHdifRP.s 			page 136


 4197 13c9 5E0B0000 		.4byte	.LASF225
 4198 13cd 5E0B0000 		.4byte	.LASF225
 4199 13d1 08       		.byte	0x8
 4200 13d2 9101     		.2byte	0x191
 4201 13d4 28       		.uleb128 0x28
 4202 13d5 010C0000 		.4byte	.LASF226
 4203 13d9 010C0000 		.4byte	.LASF226
 4204 13dd 0A       		.byte	0xa
 4205 13de 18       		.byte	0x18
 4206 13df 27       		.uleb128 0x27
 4207 13e0 890A0000 		.4byte	.LASF227
 4208 13e4 890A0000 		.4byte	.LASF227
 4209 13e8 08       		.byte	0x8
 4210 13e9 8E01     		.2byte	0x18e
 4211 13eb 27       		.uleb128 0x27
 4212 13ec 97050000 		.4byte	.LASF228
 4213 13f0 97050000 		.4byte	.LASF228
 4214 13f4 08       		.byte	0x8
 4215 13f5 AE01     		.2byte	0x1ae
 4216 13f7 28       		.uleb128 0x28
 4217 13f8 82000000 		.4byte	.LASF229
 4218 13fc 82000000 		.4byte	.LASF229
 4219 1400 0B       		.byte	0xb
 4220 1401 86       		.byte	0x86
 4221 1402 28       		.uleb128 0x28
 4222 1403 BC080000 		.4byte	.LASF230
 4223 1407 BC080000 		.4byte	.LASF230
 4224 140b 09       		.byte	0x9
 4225 140c DA       		.byte	0xda
 4226 140d 28       		.uleb128 0x28
 4227 140e F9000000 		.4byte	.LASF231
 4228 1412 F9000000 		.4byte	.LASF231
 4229 1416 09       		.byte	0x9
 4230 1417 E7       		.byte	0xe7
 4231 1418 27       		.uleb128 0x27
 4232 1419 AC090000 		.4byte	.LASF232
 4233 141d AC090000 		.4byte	.LASF232
 4234 1421 08       		.byte	0x8
 4235 1422 A501     		.2byte	0x1a5
 4236 1424 28       		.uleb128 0x28
 4237 1425 3B050000 		.4byte	.LASF233
 4238 1429 3B050000 		.4byte	.LASF233
 4239 142d 0B       		.byte	0xb
 4240 142e 8D       		.byte	0x8d
 4241 142f 27       		.uleb128 0x27
 4242 1430 20070000 		.4byte	.LASF234
 4243 1434 20070000 		.4byte	.LASF234
 4244 1438 08       		.byte	0x8
 4245 1439 A101     		.2byte	0x1a1
 4246 143b 28       		.uleb128 0x28
 4247 143c 100B0000 		.4byte	.LASF235
 4248 1440 100B0000 		.4byte	.LASF235
 4249 1444 0B       		.byte	0xb
 4250 1445 8C       		.byte	0x8c
 4251 1446 00       		.byte	0
 4252              		.section	.debug_abbrev,"",%progbits
 4253              	.Ldebug_abbrev0:
ARM GAS  C:\Users\mstai\AppData\Local\Temp\ccHdifRP.s 			page 137


 4254 0000 01       		.uleb128 0x1
 4255 0001 11       		.uleb128 0x11
 4256 0002 01       		.byte	0x1
 4257 0003 25       		.uleb128 0x25
 4258 0004 0E       		.uleb128 0xe
 4259 0005 13       		.uleb128 0x13
 4260 0006 0B       		.uleb128 0xb
 4261 0007 03       		.uleb128 0x3
 4262 0008 0E       		.uleb128 0xe
 4263 0009 1B       		.uleb128 0x1b
 4264 000a 0E       		.uleb128 0xe
 4265 000b 55       		.uleb128 0x55
 4266 000c 17       		.uleb128 0x17
 4267 000d 11       		.uleb128 0x11
 4268 000e 01       		.uleb128 0x1
 4269 000f 10       		.uleb128 0x10
 4270 0010 17       		.uleb128 0x17
 4271 0011 00       		.byte	0
 4272 0012 00       		.byte	0
 4273 0013 02       		.uleb128 0x2
 4274 0014 24       		.uleb128 0x24
 4275 0015 00       		.byte	0
 4276 0016 0B       		.uleb128 0xb
 4277 0017 0B       		.uleb128 0xb
 4278 0018 3E       		.uleb128 0x3e
 4279 0019 0B       		.uleb128 0xb
 4280 001a 03       		.uleb128 0x3
 4281 001b 0E       		.uleb128 0xe
 4282 001c 00       		.byte	0
 4283 001d 00       		.byte	0
 4284 001e 03       		.uleb128 0x3
 4285 001f 16       		.uleb128 0x16
 4286 0020 00       		.byte	0
 4287 0021 03       		.uleb128 0x3
 4288 0022 0E       		.uleb128 0xe
 4289 0023 3A       		.uleb128 0x3a
 4290 0024 0B       		.uleb128 0xb
 4291 0025 3B       		.uleb128 0x3b
 4292 0026 0B       		.uleb128 0xb
 4293 0027 49       		.uleb128 0x49
 4294 0028 13       		.uleb128 0x13
 4295 0029 00       		.byte	0
 4296 002a 00       		.byte	0
 4297 002b 04       		.uleb128 0x4
 4298 002c 24       		.uleb128 0x24
 4299 002d 00       		.byte	0
 4300 002e 0B       		.uleb128 0xb
 4301 002f 0B       		.uleb128 0xb
 4302 0030 3E       		.uleb128 0x3e
 4303 0031 0B       		.uleb128 0xb
 4304 0032 03       		.uleb128 0x3
 4305 0033 08       		.uleb128 0x8
 4306 0034 00       		.byte	0
 4307 0035 00       		.byte	0
 4308 0036 05       		.uleb128 0x5
 4309 0037 16       		.uleb128 0x16
 4310 0038 00       		.byte	0
ARM GAS  C:\Users\mstai\AppData\Local\Temp\ccHdifRP.s 			page 138


 4311 0039 03       		.uleb128 0x3
 4312 003a 0E       		.uleb128 0xe
 4313 003b 3A       		.uleb128 0x3a
 4314 003c 0B       		.uleb128 0xb
 4315 003d 3B       		.uleb128 0x3b
 4316 003e 05       		.uleb128 0x5
 4317 003f 49       		.uleb128 0x49
 4318 0040 13       		.uleb128 0x13
 4319 0041 00       		.byte	0
 4320 0042 00       		.byte	0
 4321 0043 06       		.uleb128 0x6
 4322 0044 35       		.uleb128 0x35
 4323 0045 00       		.byte	0
 4324 0046 49       		.uleb128 0x49
 4325 0047 13       		.uleb128 0x13
 4326 0048 00       		.byte	0
 4327 0049 00       		.byte	0
 4328 004a 07       		.uleb128 0x7
 4329 004b 0F       		.uleb128 0xf
 4330 004c 00       		.byte	0
 4331 004d 0B       		.uleb128 0xb
 4332 004e 0B       		.uleb128 0xb
 4333 004f 49       		.uleb128 0x49
 4334 0050 13       		.uleb128 0x13
 4335 0051 00       		.byte	0
 4336 0052 00       		.byte	0
 4337 0053 08       		.uleb128 0x8
 4338 0054 15       		.uleb128 0x15
 4339 0055 00       		.byte	0
 4340 0056 27       		.uleb128 0x27
 4341 0057 19       		.uleb128 0x19
 4342 0058 00       		.byte	0
 4343 0059 00       		.byte	0
 4344 005a 09       		.uleb128 0x9
 4345 005b 04       		.uleb128 0x4
 4346 005c 01       		.byte	0x1
 4347 005d 0B       		.uleb128 0xb
 4348 005e 0B       		.uleb128 0xb
 4349 005f 49       		.uleb128 0x49
 4350 0060 13       		.uleb128 0x13
 4351 0061 3A       		.uleb128 0x3a
 4352 0062 0B       		.uleb128 0xb
 4353 0063 3B       		.uleb128 0x3b
 4354 0064 0B       		.uleb128 0xb
 4355 0065 01       		.uleb128 0x1
 4356 0066 13       		.uleb128 0x13
 4357 0067 00       		.byte	0
 4358 0068 00       		.byte	0
 4359 0069 0A       		.uleb128 0xa
 4360 006a 28       		.uleb128 0x28
 4361 006b 00       		.byte	0
 4362 006c 03       		.uleb128 0x3
 4363 006d 0E       		.uleb128 0xe
 4364 006e 1C       		.uleb128 0x1c
 4365 006f 0B       		.uleb128 0xb
 4366 0070 00       		.byte	0
 4367 0071 00       		.byte	0
ARM GAS  C:\Users\mstai\AppData\Local\Temp\ccHdifRP.s 			page 139


 4368 0072 0B       		.uleb128 0xb
 4369 0073 13       		.uleb128 0x13
 4370 0074 01       		.byte	0x1
 4371 0075 0B       		.uleb128 0xb
 4372 0076 0B       		.uleb128 0xb
 4373 0077 3A       		.uleb128 0x3a
 4374 0078 0B       		.uleb128 0xb
 4375 0079 3B       		.uleb128 0x3b
 4376 007a 0B       		.uleb128 0xb
 4377 007b 01       		.uleb128 0x1
 4378 007c 13       		.uleb128 0x13
 4379 007d 00       		.byte	0
 4380 007e 00       		.byte	0
 4381 007f 0C       		.uleb128 0xc
 4382 0080 0D       		.uleb128 0xd
 4383 0081 00       		.byte	0
 4384 0082 03       		.uleb128 0x3
 4385 0083 08       		.uleb128 0x8
 4386 0084 3A       		.uleb128 0x3a
 4387 0085 0B       		.uleb128 0xb
 4388 0086 3B       		.uleb128 0x3b
 4389 0087 0B       		.uleb128 0xb
 4390 0088 49       		.uleb128 0x49
 4391 0089 13       		.uleb128 0x13
 4392 008a 38       		.uleb128 0x38
 4393 008b 0B       		.uleb128 0xb
 4394 008c 00       		.byte	0
 4395 008d 00       		.byte	0
 4396 008e 0D       		.uleb128 0xd
 4397 008f 0D       		.uleb128 0xd
 4398 0090 00       		.byte	0
 4399 0091 03       		.uleb128 0x3
 4400 0092 0E       		.uleb128 0xe
 4401 0093 3A       		.uleb128 0x3a
 4402 0094 0B       		.uleb128 0xb
 4403 0095 3B       		.uleb128 0x3b
 4404 0096 0B       		.uleb128 0xb
 4405 0097 49       		.uleb128 0x49
 4406 0098 13       		.uleb128 0x13
 4407 0099 38       		.uleb128 0x38
 4408 009a 0B       		.uleb128 0xb
 4409 009b 00       		.byte	0
 4410 009c 00       		.byte	0
 4411 009d 0E       		.uleb128 0xe
 4412 009e 01       		.uleb128 0x1
 4413 009f 01       		.byte	0x1
 4414 00a0 49       		.uleb128 0x49
 4415 00a1 13       		.uleb128 0x13
 4416 00a2 01       		.uleb128 0x1
 4417 00a3 13       		.uleb128 0x13
 4418 00a4 00       		.byte	0
 4419 00a5 00       		.byte	0
 4420 00a6 0F       		.uleb128 0xf
 4421 00a7 21       		.uleb128 0x21
 4422 00a8 00       		.byte	0
 4423 00a9 49       		.uleb128 0x49
 4424 00aa 13       		.uleb128 0x13
ARM GAS  C:\Users\mstai\AppData\Local\Temp\ccHdifRP.s 			page 140


 4425 00ab 2F       		.uleb128 0x2f
 4426 00ac 0B       		.uleb128 0xb
 4427 00ad 00       		.byte	0
 4428 00ae 00       		.byte	0
 4429 00af 10       		.uleb128 0x10
 4430 00b0 0D       		.uleb128 0xd
 4431 00b1 00       		.byte	0
 4432 00b2 03       		.uleb128 0x3
 4433 00b3 0E       		.uleb128 0xe
 4434 00b4 3A       		.uleb128 0x3a
 4435 00b5 0B       		.uleb128 0xb
 4436 00b6 3B       		.uleb128 0x3b
 4437 00b7 05       		.uleb128 0x5
 4438 00b8 49       		.uleb128 0x49
 4439 00b9 13       		.uleb128 0x13
 4440 00ba 38       		.uleb128 0x38
 4441 00bb 0B       		.uleb128 0xb
 4442 00bc 00       		.byte	0
 4443 00bd 00       		.byte	0
 4444 00be 11       		.uleb128 0x11
 4445 00bf 13       		.uleb128 0x13
 4446 00c0 01       		.byte	0x1
 4447 00c1 0B       		.uleb128 0xb
 4448 00c2 0B       		.uleb128 0xb
 4449 00c3 3A       		.uleb128 0x3a
 4450 00c4 0B       		.uleb128 0xb
 4451 00c5 3B       		.uleb128 0x3b
 4452 00c6 05       		.uleb128 0x5
 4453 00c7 01       		.uleb128 0x1
 4454 00c8 13       		.uleb128 0x13
 4455 00c9 00       		.byte	0
 4456 00ca 00       		.byte	0
 4457 00cb 12       		.uleb128 0x12
 4458 00cc 0D       		.uleb128 0xd
 4459 00cd 00       		.byte	0
 4460 00ce 03       		.uleb128 0x3
 4461 00cf 08       		.uleb128 0x8
 4462 00d0 3A       		.uleb128 0x3a
 4463 00d1 0B       		.uleb128 0xb
 4464 00d2 3B       		.uleb128 0x3b
 4465 00d3 05       		.uleb128 0x5
 4466 00d4 49       		.uleb128 0x49
 4467 00d5 13       		.uleb128 0x13
 4468 00d6 38       		.uleb128 0x38
 4469 00d7 0B       		.uleb128 0xb
 4470 00d8 00       		.byte	0
 4471 00d9 00       		.byte	0
 4472 00da 13       		.uleb128 0x13
 4473 00db 26       		.uleb128 0x26
 4474 00dc 00       		.byte	0
 4475 00dd 00       		.byte	0
 4476 00de 00       		.byte	0
 4477 00df 14       		.uleb128 0x14
 4478 00e0 0F       		.uleb128 0xf
 4479 00e1 00       		.byte	0
 4480 00e2 0B       		.uleb128 0xb
 4481 00e3 0B       		.uleb128 0xb
ARM GAS  C:\Users\mstai\AppData\Local\Temp\ccHdifRP.s 			page 141


 4482 00e4 00       		.byte	0
 4483 00e5 00       		.byte	0
 4484 00e6 15       		.uleb128 0x15
 4485 00e7 2E       		.uleb128 0x2e
 4486 00e8 01       		.byte	0x1
 4487 00e9 03       		.uleb128 0x3
 4488 00ea 0E       		.uleb128 0xe
 4489 00eb 3A       		.uleb128 0x3a
 4490 00ec 0B       		.uleb128 0xb
 4491 00ed 3B       		.uleb128 0x3b
 4492 00ee 05       		.uleb128 0x5
 4493 00ef 27       		.uleb128 0x27
 4494 00f0 19       		.uleb128 0x19
 4495 00f1 49       		.uleb128 0x49
 4496 00f2 13       		.uleb128 0x13
 4497 00f3 11       		.uleb128 0x11
 4498 00f4 01       		.uleb128 0x1
 4499 00f5 12       		.uleb128 0x12
 4500 00f6 06       		.uleb128 0x6
 4501 00f7 40       		.uleb128 0x40
 4502 00f8 18       		.uleb128 0x18
 4503 00f9 9642     		.uleb128 0x2116
 4504 00fb 19       		.uleb128 0x19
 4505 00fc 01       		.uleb128 0x1
 4506 00fd 13       		.uleb128 0x13
 4507 00fe 00       		.byte	0
 4508 00ff 00       		.byte	0
 4509 0100 16       		.uleb128 0x16
 4510 0101 05       		.uleb128 0x5
 4511 0102 00       		.byte	0
 4512 0103 03       		.uleb128 0x3
 4513 0104 0E       		.uleb128 0xe
 4514 0105 3A       		.uleb128 0x3a
 4515 0106 0B       		.uleb128 0xb
 4516 0107 3B       		.uleb128 0x3b
 4517 0108 05       		.uleb128 0x5
 4518 0109 49       		.uleb128 0x49
 4519 010a 13       		.uleb128 0x13
 4520 010b 02       		.uleb128 0x2
 4521 010c 17       		.uleb128 0x17
 4522 010d 00       		.byte	0
 4523 010e 00       		.byte	0
 4524 010f 17       		.uleb128 0x17
 4525 0110 34       		.uleb128 0x34
 4526 0111 00       		.byte	0
 4527 0112 03       		.uleb128 0x3
 4528 0113 0E       		.uleb128 0xe
 4529 0114 3A       		.uleb128 0x3a
 4530 0115 0B       		.uleb128 0xb
 4531 0116 3B       		.uleb128 0x3b
 4532 0117 05       		.uleb128 0x5
 4533 0118 49       		.uleb128 0x49
 4534 0119 13       		.uleb128 0x13
 4535 011a 02       		.uleb128 0x2
 4536 011b 17       		.uleb128 0x17
 4537 011c 00       		.byte	0
 4538 011d 00       		.byte	0
ARM GAS  C:\Users\mstai\AppData\Local\Temp\ccHdifRP.s 			page 142


 4539 011e 18       		.uleb128 0x18
 4540 011f 2E       		.uleb128 0x2e
 4541 0120 00       		.byte	0
 4542 0121 3F       		.uleb128 0x3f
 4543 0122 19       		.uleb128 0x19
 4544 0123 03       		.uleb128 0x3
 4545 0124 0E       		.uleb128 0xe
 4546 0125 3A       		.uleb128 0x3a
 4547 0126 0B       		.uleb128 0xb
 4548 0127 3B       		.uleb128 0x3b
 4549 0128 0B       		.uleb128 0xb
 4550 0129 27       		.uleb128 0x27
 4551 012a 19       		.uleb128 0x19
 4552 012b 49       		.uleb128 0x49
 4553 012c 13       		.uleb128 0x13
 4554 012d 11       		.uleb128 0x11
 4555 012e 01       		.uleb128 0x1
 4556 012f 12       		.uleb128 0x12
 4557 0130 06       		.uleb128 0x6
 4558 0131 40       		.uleb128 0x40
 4559 0132 18       		.uleb128 0x18
 4560 0133 9742     		.uleb128 0x2117
 4561 0135 19       		.uleb128 0x19
 4562 0136 00       		.byte	0
 4563 0137 00       		.byte	0
 4564 0138 19       		.uleb128 0x19
 4565 0139 2E       		.uleb128 0x2e
 4566 013a 01       		.byte	0x1
 4567 013b 3F       		.uleb128 0x3f
 4568 013c 19       		.uleb128 0x19
 4569 013d 03       		.uleb128 0x3
 4570 013e 0E       		.uleb128 0xe
 4571 013f 3A       		.uleb128 0x3a
 4572 0140 0B       		.uleb128 0xb
 4573 0141 3B       		.uleb128 0x3b
 4574 0142 05       		.uleb128 0x5
 4575 0143 27       		.uleb128 0x27
 4576 0144 19       		.uleb128 0x19
 4577 0145 49       		.uleb128 0x49
 4578 0146 13       		.uleb128 0x13
 4579 0147 11       		.uleb128 0x11
 4580 0148 01       		.uleb128 0x1
 4581 0149 12       		.uleb128 0x12
 4582 014a 06       		.uleb128 0x6
 4583 014b 40       		.uleb128 0x40
 4584 014c 18       		.uleb128 0x18
 4585 014d 9742     		.uleb128 0x2117
 4586 014f 19       		.uleb128 0x19
 4587 0150 01       		.uleb128 0x1
 4588 0151 13       		.uleb128 0x13
 4589 0152 00       		.byte	0
 4590 0153 00       		.byte	0
 4591 0154 1A       		.uleb128 0x1a
 4592 0155 898201   		.uleb128 0x4109
 4593 0158 00       		.byte	0
 4594 0159 11       		.uleb128 0x11
 4595 015a 01       		.uleb128 0x1
ARM GAS  C:\Users\mstai\AppData\Local\Temp\ccHdifRP.s 			page 143


 4596 015b 31       		.uleb128 0x31
 4597 015c 13       		.uleb128 0x13
 4598 015d 00       		.byte	0
 4599 015e 00       		.byte	0
 4600 015f 1B       		.uleb128 0x1b
 4601 0160 898201   		.uleb128 0x4109
 4602 0163 01       		.byte	0x1
 4603 0164 11       		.uleb128 0x11
 4604 0165 01       		.uleb128 0x1
 4605 0166 31       		.uleb128 0x31
 4606 0167 13       		.uleb128 0x13
 4607 0168 01       		.uleb128 0x1
 4608 0169 13       		.uleb128 0x13
 4609 016a 00       		.byte	0
 4610 016b 00       		.byte	0
 4611 016c 1C       		.uleb128 0x1c
 4612 016d 8A8201   		.uleb128 0x410a
 4613 0170 00       		.byte	0
 4614 0171 02       		.uleb128 0x2
 4615 0172 18       		.uleb128 0x18
 4616 0173 9142     		.uleb128 0x2111
 4617 0175 18       		.uleb128 0x18
 4618 0176 00       		.byte	0
 4619 0177 00       		.byte	0
 4620 0178 1D       		.uleb128 0x1d
 4621 0179 2E       		.uleb128 0x2e
 4622 017a 01       		.byte	0x1
 4623 017b 3F       		.uleb128 0x3f
 4624 017c 19       		.uleb128 0x19
 4625 017d 03       		.uleb128 0x3
 4626 017e 0E       		.uleb128 0xe
 4627 017f 3A       		.uleb128 0x3a
 4628 0180 0B       		.uleb128 0xb
 4629 0181 3B       		.uleb128 0x3b
 4630 0182 05       		.uleb128 0x5
 4631 0183 27       		.uleb128 0x27
 4632 0184 19       		.uleb128 0x19
 4633 0185 11       		.uleb128 0x11
 4634 0186 01       		.uleb128 0x1
 4635 0187 12       		.uleb128 0x12
 4636 0188 06       		.uleb128 0x6
 4637 0189 40       		.uleb128 0x40
 4638 018a 18       		.uleb128 0x18
 4639 018b 9742     		.uleb128 0x2117
 4640 018d 19       		.uleb128 0x19
 4641 018e 01       		.uleb128 0x1
 4642 018f 13       		.uleb128 0x13
 4643 0190 00       		.byte	0
 4644 0191 00       		.byte	0
 4645 0192 1E       		.uleb128 0x1e
 4646 0193 34       		.uleb128 0x34
 4647 0194 00       		.byte	0
 4648 0195 03       		.uleb128 0x3
 4649 0196 0E       		.uleb128 0xe
 4650 0197 3A       		.uleb128 0x3a
 4651 0198 0B       		.uleb128 0xb
 4652 0199 3B       		.uleb128 0x3b
ARM GAS  C:\Users\mstai\AppData\Local\Temp\ccHdifRP.s 			page 144


 4653 019a 05       		.uleb128 0x5
 4654 019b 49       		.uleb128 0x49
 4655 019c 13       		.uleb128 0x13
 4656 019d 1C       		.uleb128 0x1c
 4657 019e 0B       		.uleb128 0xb
 4658 019f 00       		.byte	0
 4659 01a0 00       		.byte	0
 4660 01a1 1F       		.uleb128 0x1f
 4661 01a2 898201   		.uleb128 0x4109
 4662 01a5 01       		.byte	0x1
 4663 01a6 11       		.uleb128 0x11
 4664 01a7 01       		.uleb128 0x1
 4665 01a8 31       		.uleb128 0x31
 4666 01a9 13       		.uleb128 0x13
 4667 01aa 00       		.byte	0
 4668 01ab 00       		.byte	0
 4669 01ac 20       		.uleb128 0x20
 4670 01ad 26       		.uleb128 0x26
 4671 01ae 00       		.byte	0
 4672 01af 49       		.uleb128 0x49
 4673 01b0 13       		.uleb128 0x13
 4674 01b1 00       		.byte	0
 4675 01b2 00       		.byte	0
 4676 01b3 21       		.uleb128 0x21
 4677 01b4 2E       		.uleb128 0x2e
 4678 01b5 00       		.byte	0
 4679 01b6 3F       		.uleb128 0x3f
 4680 01b7 19       		.uleb128 0x19
 4681 01b8 03       		.uleb128 0x3
 4682 01b9 0E       		.uleb128 0xe
 4683 01ba 3A       		.uleb128 0x3a
 4684 01bb 0B       		.uleb128 0xb
 4685 01bc 3B       		.uleb128 0x3b
 4686 01bd 05       		.uleb128 0x5
 4687 01be 27       		.uleb128 0x27
 4688 01bf 19       		.uleb128 0x19
 4689 01c0 11       		.uleb128 0x11
 4690 01c1 01       		.uleb128 0x1
 4691 01c2 12       		.uleb128 0x12
 4692 01c3 06       		.uleb128 0x6
 4693 01c4 40       		.uleb128 0x40
 4694 01c5 18       		.uleb128 0x18
 4695 01c6 9742     		.uleb128 0x2117
 4696 01c8 19       		.uleb128 0x19
 4697 01c9 00       		.byte	0
 4698 01ca 00       		.byte	0
 4699 01cb 22       		.uleb128 0x22
 4700 01cc 34       		.uleb128 0x34
 4701 01cd 00       		.byte	0
 4702 01ce 03       		.uleb128 0x3
 4703 01cf 0E       		.uleb128 0xe
 4704 01d0 3A       		.uleb128 0x3a
 4705 01d1 0B       		.uleb128 0xb
 4706 01d2 3B       		.uleb128 0x3b
 4707 01d3 05       		.uleb128 0x5
 4708 01d4 49       		.uleb128 0x49
 4709 01d5 13       		.uleb128 0x13
ARM GAS  C:\Users\mstai\AppData\Local\Temp\ccHdifRP.s 			page 145


 4710 01d6 02       		.uleb128 0x2
 4711 01d7 18       		.uleb128 0x18
 4712 01d8 00       		.byte	0
 4713 01d9 00       		.byte	0
 4714 01da 23       		.uleb128 0x23
 4715 01db 05       		.uleb128 0x5
 4716 01dc 00       		.byte	0
 4717 01dd 03       		.uleb128 0x3
 4718 01de 0E       		.uleb128 0xe
 4719 01df 3A       		.uleb128 0x3a
 4720 01e0 0B       		.uleb128 0xb
 4721 01e1 3B       		.uleb128 0x3b
 4722 01e2 05       		.uleb128 0x5
 4723 01e3 49       		.uleb128 0x49
 4724 01e4 13       		.uleb128 0x13
 4725 01e5 02       		.uleb128 0x2
 4726 01e6 18       		.uleb128 0x18
 4727 01e7 00       		.byte	0
 4728 01e8 00       		.byte	0
 4729 01e9 24       		.uleb128 0x24
 4730 01ea 2E       		.uleb128 0x2e
 4731 01eb 01       		.byte	0x1
 4732 01ec 03       		.uleb128 0x3
 4733 01ed 0E       		.uleb128 0xe
 4734 01ee 3A       		.uleb128 0x3a
 4735 01ef 0B       		.uleb128 0xb
 4736 01f0 3B       		.uleb128 0x3b
 4737 01f1 05       		.uleb128 0x5
 4738 01f2 27       		.uleb128 0x27
 4739 01f3 19       		.uleb128 0x19
 4740 01f4 11       		.uleb128 0x11
 4741 01f5 01       		.uleb128 0x1
 4742 01f6 12       		.uleb128 0x12
 4743 01f7 06       		.uleb128 0x6
 4744 01f8 40       		.uleb128 0x40
 4745 01f9 18       		.uleb128 0x18
 4746 01fa 9742     		.uleb128 0x2117
 4747 01fc 19       		.uleb128 0x19
 4748 01fd 01       		.uleb128 0x1
 4749 01fe 13       		.uleb128 0x13
 4750 01ff 00       		.byte	0
 4751 0200 00       		.byte	0
 4752 0201 25       		.uleb128 0x25
 4753 0202 34       		.uleb128 0x34
 4754 0203 00       		.byte	0
 4755 0204 03       		.uleb128 0x3
 4756 0205 0E       		.uleb128 0xe
 4757 0206 3A       		.uleb128 0x3a
 4758 0207 0B       		.uleb128 0xb
 4759 0208 3B       		.uleb128 0x3b
 4760 0209 05       		.uleb128 0x5
 4761 020a 49       		.uleb128 0x49
 4762 020b 13       		.uleb128 0x13
 4763 020c 3F       		.uleb128 0x3f
 4764 020d 19       		.uleb128 0x19
 4765 020e 3C       		.uleb128 0x3c
 4766 020f 19       		.uleb128 0x19
ARM GAS  C:\Users\mstai\AppData\Local\Temp\ccHdifRP.s 			page 146


 4767 0210 00       		.byte	0
 4768 0211 00       		.byte	0
 4769 0212 26       		.uleb128 0x26
 4770 0213 34       		.uleb128 0x34
 4771 0214 00       		.byte	0
 4772 0215 03       		.uleb128 0x3
 4773 0216 0E       		.uleb128 0xe
 4774 0217 3A       		.uleb128 0x3a
 4775 0218 0B       		.uleb128 0xb
 4776 0219 3B       		.uleb128 0x3b
 4777 021a 0B       		.uleb128 0xb
 4778 021b 49       		.uleb128 0x49
 4779 021c 13       		.uleb128 0x13
 4780 021d 3F       		.uleb128 0x3f
 4781 021e 19       		.uleb128 0x19
 4782 021f 02       		.uleb128 0x2
 4783 0220 18       		.uleb128 0x18
 4784 0221 00       		.byte	0
 4785 0222 00       		.byte	0
 4786 0223 27       		.uleb128 0x27
 4787 0224 2E       		.uleb128 0x2e
 4788 0225 00       		.byte	0
 4789 0226 3F       		.uleb128 0x3f
 4790 0227 19       		.uleb128 0x19
 4791 0228 3C       		.uleb128 0x3c
 4792 0229 19       		.uleb128 0x19
 4793 022a 6E       		.uleb128 0x6e
 4794 022b 0E       		.uleb128 0xe
 4795 022c 03       		.uleb128 0x3
 4796 022d 0E       		.uleb128 0xe
 4797 022e 3A       		.uleb128 0x3a
 4798 022f 0B       		.uleb128 0xb
 4799 0230 3B       		.uleb128 0x3b
 4800 0231 05       		.uleb128 0x5
 4801 0232 00       		.byte	0
 4802 0233 00       		.byte	0
 4803 0234 28       		.uleb128 0x28
 4804 0235 2E       		.uleb128 0x2e
 4805 0236 00       		.byte	0
 4806 0237 3F       		.uleb128 0x3f
 4807 0238 19       		.uleb128 0x19
 4808 0239 3C       		.uleb128 0x3c
 4809 023a 19       		.uleb128 0x19
 4810 023b 6E       		.uleb128 0x6e
 4811 023c 0E       		.uleb128 0xe
 4812 023d 03       		.uleb128 0x3
 4813 023e 0E       		.uleb128 0xe
 4814 023f 3A       		.uleb128 0x3a
 4815 0240 0B       		.uleb128 0xb
 4816 0241 3B       		.uleb128 0x3b
 4817 0242 0B       		.uleb128 0xb
 4818 0243 00       		.byte	0
 4819 0244 00       		.byte	0
 4820 0245 00       		.byte	0
 4821              		.section	.debug_loc,"",%progbits
 4822              	.Ldebug_loc0:
 4823              	.LLST0:
ARM GAS  C:\Users\mstai\AppData\Local\Temp\ccHdifRP.s 			page 147


 4824 0000 00000000 		.4byte	.LVL0
 4825 0004 14000000 		.4byte	.LVL3
 4826 0008 0100     		.2byte	0x1
 4827 000a 50       		.byte	0x50
 4828 000b 14000000 		.4byte	.LVL3
 4829 000f 76000000 		.4byte	.LVL9
 4830 0013 0100     		.2byte	0x1
 4831 0015 54       		.byte	0x54
 4832 0016 76000000 		.4byte	.LVL9
 4833 001a 84000000 		.4byte	.LFE21
 4834 001e 0400     		.2byte	0x4
 4835 0020 F3       		.byte	0xf3
 4836 0021 01       		.uleb128 0x1
 4837 0022 50       		.byte	0x50
 4838 0023 9F       		.byte	0x9f
 4839 0024 00000000 		.4byte	0
 4840 0028 00000000 		.4byte	0
 4841              	.LLST1:
 4842 002c 00000000 		.4byte	.LVL0
 4843 0030 12000000 		.4byte	.LVL2
 4844 0034 0100     		.2byte	0x1
 4845 0036 51       		.byte	0x51
 4846 0037 12000000 		.4byte	.LVL2
 4847 003b 76000000 		.4byte	.LVL10
 4848 003f 0100     		.2byte	0x1
 4849 0041 55       		.byte	0x55
 4850 0042 76000000 		.4byte	.LVL10
 4851 0046 84000000 		.4byte	.LFE21
 4852 004a 0400     		.2byte	0x4
 4853 004c F3       		.byte	0xf3
 4854 004d 01       		.uleb128 0x1
 4855 004e 51       		.byte	0x51
 4856 004f 9F       		.byte	0x9f
 4857 0050 00000000 		.4byte	0
 4858 0054 00000000 		.4byte	0
 4859              	.LLST2:
 4860 0058 06000000 		.4byte	.LVL1
 4861 005c 76000000 		.4byte	.LVL8
 4862 0060 0200     		.2byte	0x2
 4863 0062 30       		.byte	0x30
 4864 0063 9F       		.byte	0x9f
 4865 0064 76000000 		.4byte	.LVL8
 4866 0068 84000000 		.4byte	.LFE21
 4867 006c 0100     		.2byte	0x1
 4868 006e 50       		.byte	0x50
 4869 006f 00000000 		.4byte	0
 4870 0073 00000000 		.4byte	0
 4871              	.LLST3:
 4872 0077 00000000 		.4byte	.LVL11
 4873 007b 20000000 		.4byte	.LVL15
 4874 007f 0100     		.2byte	0x1
 4875 0081 50       		.byte	0x50
 4876 0082 20000000 		.4byte	.LVL15
 4877 0086 23000000 		.4byte	.LVL16-1
 4878 008a 0100     		.2byte	0x1
 4879 008c 51       		.byte	0x51
 4880 008d 23000000 		.4byte	.LVL16-1
ARM GAS  C:\Users\mstai\AppData\Local\Temp\ccHdifRP.s 			page 148


 4881 0091 38000000 		.4byte	.LVL21
 4882 0095 0400     		.2byte	0x4
 4883 0097 F3       		.byte	0xf3
 4884 0098 01       		.uleb128 0x1
 4885 0099 50       		.byte	0x50
 4886 009a 9F       		.byte	0x9f
 4887 009b 38000000 		.4byte	.LVL21
 4888 009f 3E000000 		.4byte	.LVL24
 4889 00a3 0100     		.2byte	0x1
 4890 00a5 50       		.byte	0x50
 4891 00a6 3E000000 		.4byte	.LVL24
 4892 00aa 42000000 		.4byte	.LFE22
 4893 00ae 0400     		.2byte	0x4
 4894 00b0 F3       		.byte	0xf3
 4895 00b1 01       		.uleb128 0x1
 4896 00b2 50       		.byte	0x50
 4897 00b3 9F       		.byte	0x9f
 4898 00b4 00000000 		.4byte	0
 4899 00b8 00000000 		.4byte	0
 4900              	.LLST4:
 4901 00bc 00000000 		.4byte	.LVL11
 4902 00c0 1E000000 		.4byte	.LVL14
 4903 00c4 0100     		.2byte	0x1
 4904 00c6 51       		.byte	0x51
 4905 00c7 1E000000 		.4byte	.LVL14
 4906 00cb 38000000 		.4byte	.LVL21
 4907 00cf 0400     		.2byte	0x4
 4908 00d1 F3       		.byte	0xf3
 4909 00d2 01       		.uleb128 0x1
 4910 00d3 51       		.byte	0x51
 4911 00d4 9F       		.byte	0x9f
 4912 00d5 38000000 		.4byte	.LVL21
 4913 00d9 3E000000 		.4byte	.LVL24
 4914 00dd 0100     		.2byte	0x1
 4915 00df 51       		.byte	0x51
 4916 00e0 3E000000 		.4byte	.LVL24
 4917 00e4 42000000 		.4byte	.LFE22
 4918 00e8 0400     		.2byte	0x4
 4919 00ea F3       		.byte	0xf3
 4920 00eb 01       		.uleb128 0x1
 4921 00ec 51       		.byte	0x51
 4922 00ed 9F       		.byte	0x9f
 4923 00ee 00000000 		.4byte	0
 4924 00f2 00000000 		.4byte	0
 4925              	.LLST5:
 4926 00f6 24000000 		.4byte	.LVL16
 4927 00fa 28000000 		.4byte	.LVL17
 4928 00fe 0200     		.2byte	0x2
 4929 0100 30       		.byte	0x30
 4930 0101 9F       		.byte	0x9f
 4931 0102 28000000 		.4byte	.LVL17
 4932 0106 38000000 		.4byte	.LVL21
 4933 010a 0100     		.2byte	0x1
 4934 010c 53       		.byte	0x53
 4935 010d 3E000000 		.4byte	.LVL24
 4936 0111 42000000 		.4byte	.LFE22
 4937 0115 0100     		.2byte	0x1
ARM GAS  C:\Users\mstai\AppData\Local\Temp\ccHdifRP.s 			page 149


 4938 0117 53       		.byte	0x53
 4939 0118 00000000 		.4byte	0
 4940 011c 00000000 		.4byte	0
 4941              	.LLST6:
 4942 0120 10000000 		.4byte	.LVL12
 4943 0124 1C000000 		.4byte	.LVL13
 4944 0128 0100     		.2byte	0x1
 4945 012a 53       		.byte	0x53
 4946 012b 38000000 		.4byte	.LVL21
 4947 012f 3A000000 		.4byte	.LVL22
 4948 0133 0100     		.2byte	0x1
 4949 0135 53       		.byte	0x53
 4950 0136 3C000000 		.4byte	.LVL23
 4951 013a 3E000000 		.4byte	.LVL24
 4952 013e 0100     		.2byte	0x1
 4953 0140 53       		.byte	0x53
 4954 0141 00000000 		.4byte	0
 4955 0145 00000000 		.4byte	0
 4956              	.LLST7:
 4957 0149 24000000 		.4byte	.LVL16
 4958 014d 38000000 		.4byte	.LVL21
 4959 0151 0100     		.2byte	0x1
 4960 0153 50       		.byte	0x50
 4961 0154 00000000 		.4byte	0
 4962 0158 00000000 		.4byte	0
 4963              	.LLST8:
 4964 015c 00000000 		.4byte	.LVL25
 4965 0160 41000000 		.4byte	.LVL27-1
 4966 0164 0100     		.2byte	0x1
 4967 0166 50       		.byte	0x50
 4968 0167 41000000 		.4byte	.LVL27-1
 4969 016b 4C000000 		.4byte	.LFE2
 4970 016f 0400     		.2byte	0x4
 4971 0171 F3       		.byte	0xf3
 4972 0172 01       		.uleb128 0x1
 4973 0173 50       		.byte	0x50
 4974 0174 9F       		.byte	0x9f
 4975 0175 00000000 		.4byte	0
 4976 0179 00000000 		.4byte	0
 4977              	.LLST9:
 4978 017d 3A000000 		.4byte	.LVL26
 4979 0181 44000000 		.4byte	.LVL28
 4980 0185 0100     		.2byte	0x1
 4981 0187 54       		.byte	0x54
 4982 0188 44000000 		.4byte	.LVL28
 4983 018c 4C000000 		.4byte	.LFE2
 4984 0190 0100     		.2byte	0x1
 4985 0192 50       		.byte	0x50
 4986 0193 00000000 		.4byte	0
 4987 0197 00000000 		.4byte	0
 4988              	.LLST10:
 4989 019b 02000000 		.4byte	.LVL29
 4990 019f 22000000 		.4byte	.LVL31
 4991 01a3 0200     		.2byte	0x2
 4992 01a5 30       		.byte	0x30
 4993 01a6 9F       		.byte	0x9f
 4994 01a7 22000000 		.4byte	.LVL31
ARM GAS  C:\Users\mstai\AppData\Local\Temp\ccHdifRP.s 			page 150


 4995 01ab 2C000000 		.4byte	.LFE3
 4996 01af 0100     		.2byte	0x1
 4997 01b1 50       		.byte	0x50
 4998 01b2 00000000 		.4byte	0
 4999 01b6 00000000 		.4byte	0
 5000              	.LLST11:
 5001 01ba 02000000 		.4byte	.LVL32
 5002 01be 12000000 		.4byte	.LVL33
 5003 01c2 0300     		.2byte	0x3
 5004 01c4 09       		.byte	0x9
 5005 01c5 FF       		.byte	0xff
 5006 01c6 9F       		.byte	0x9f
 5007 01c7 12000000 		.4byte	.LVL33
 5008 01cb 14000000 		.4byte	.LVL34
 5009 01cf 0100     		.2byte	0x1
 5010 01d1 50       		.byte	0x50
 5011 01d2 18000000 		.4byte	.LVL35
 5012 01d6 25000000 		.4byte	.LVL36-1
 5013 01da 0100     		.2byte	0x1
 5014 01dc 50       		.byte	0x50
 5015 01dd 26000000 		.4byte	.LVL36
 5016 01e1 30000000 		.4byte	.LVL38
 5017 01e5 0100     		.2byte	0x1
 5018 01e7 50       		.byte	0x50
 5019 01e8 30000000 		.4byte	.LVL38
 5020 01ec 32000000 		.4byte	.LVL39
 5021 01f0 0300     		.2byte	0x3
 5022 01f2 09       		.byte	0x9
 5023 01f3 FF       		.byte	0xff
 5024 01f4 9F       		.byte	0x9f
 5025 01f5 32000000 		.4byte	.LVL39
 5026 01f9 3C000000 		.4byte	.LFE4
 5027 01fd 0100     		.2byte	0x1
 5028 01ff 50       		.byte	0x50
 5029 0200 00000000 		.4byte	0
 5030 0204 00000000 		.4byte	0
 5031              	.LLST12:
 5032 0208 12000000 		.4byte	.LVL33
 5033 020c 30000000 		.4byte	.LVL38
 5034 0210 0100     		.2byte	0x1
 5035 0212 54       		.byte	0x54
 5036 0213 00000000 		.4byte	0
 5037 0217 00000000 		.4byte	0
 5038              	.LLST13:
 5039 021b 00000000 		.4byte	.LVL40
 5040 021f 51000000 		.4byte	.LVL42-1
 5041 0223 0100     		.2byte	0x1
 5042 0225 50       		.byte	0x50
 5043 0226 51000000 		.4byte	.LVL42-1
 5044 022a 60000000 		.4byte	.LFE5
 5045 022e 0400     		.2byte	0x4
 5046 0230 F3       		.byte	0xf3
 5047 0231 01       		.uleb128 0x1
 5048 0232 50       		.byte	0x50
 5049 0233 9F       		.byte	0x9f
 5050 0234 00000000 		.4byte	0
 5051 0238 00000000 		.4byte	0
ARM GAS  C:\Users\mstai\AppData\Local\Temp\ccHdifRP.s 			page 151


 5052              	.LLST14:
 5053 023c 00000000 		.4byte	.LVL40
 5054 0240 51000000 		.4byte	.LVL42-1
 5055 0244 0100     		.2byte	0x1
 5056 0246 51       		.byte	0x51
 5057 0247 51000000 		.4byte	.LVL42-1
 5058 024b 60000000 		.4byte	.LFE5
 5059 024f 0400     		.2byte	0x4
 5060 0251 F3       		.byte	0xf3
 5061 0252 01       		.uleb128 0x1
 5062 0253 51       		.byte	0x51
 5063 0254 9F       		.byte	0x9f
 5064 0255 00000000 		.4byte	0
 5065 0259 00000000 		.4byte	0
 5066              	.LLST15:
 5067 025d 4A000000 		.4byte	.LVL41
 5068 0261 54000000 		.4byte	.LVL43
 5069 0265 0100     		.2byte	0x1
 5070 0267 54       		.byte	0x54
 5071 0268 54000000 		.4byte	.LVL43
 5072 026c 60000000 		.4byte	.LFE5
 5073 0270 0100     		.2byte	0x1
 5074 0272 50       		.byte	0x50
 5075 0273 00000000 		.4byte	0
 5076 0277 00000000 		.4byte	0
 5077              	.LLST16:
 5078 027b 02000000 		.4byte	.LVL44
 5079 027f 22000000 		.4byte	.LVL46
 5080 0283 0200     		.2byte	0x2
 5081 0285 30       		.byte	0x30
 5082 0286 9F       		.byte	0x9f
 5083 0287 22000000 		.4byte	.LVL46
 5084 028b 2C000000 		.4byte	.LFE6
 5085 028f 0100     		.2byte	0x1
 5086 0291 50       		.byte	0x50
 5087 0292 00000000 		.4byte	0
 5088 0296 00000000 		.4byte	0
 5089              	.LLST17:
 5090 029a 00000000 		.4byte	.LVL47
 5091 029e 06000000 		.4byte	.LVL48
 5092 02a2 0100     		.2byte	0x1
 5093 02a4 50       		.byte	0x50
 5094 02a5 06000000 		.4byte	.LVL48
 5095 02a9 98000000 		.4byte	.LFE8
 5096 02ad 0400     		.2byte	0x4
 5097 02af F3       		.byte	0xf3
 5098 02b0 01       		.uleb128 0x1
 5099 02b1 50       		.byte	0x50
 5100 02b2 9F       		.byte	0x9f
 5101 02b3 00000000 		.4byte	0
 5102 02b7 00000000 		.4byte	0
 5103              	.LLST18:
 5104 02bb 00000000 		.4byte	.LVL47
 5105 02bf 0C000000 		.4byte	.LVL49
 5106 02c3 0100     		.2byte	0x1
 5107 02c5 51       		.byte	0x51
 5108 02c6 0C000000 		.4byte	.LVL49
ARM GAS  C:\Users\mstai\AppData\Local\Temp\ccHdifRP.s 			page 152


 5109 02ca 98000000 		.4byte	.LFE8
 5110 02ce 0400     		.2byte	0x4
 5111 02d0 F3       		.byte	0xf3
 5112 02d1 01       		.uleb128 0x1
 5113 02d2 51       		.byte	0x51
 5114 02d3 9F       		.byte	0x9f
 5115 02d4 00000000 		.4byte	0
 5116 02d8 00000000 		.4byte	0
 5117              	.LLST19:
 5118 02dc 00000000 		.4byte	.LVL47
 5119 02e0 12000000 		.4byte	.LVL51
 5120 02e4 0100     		.2byte	0x1
 5121 02e6 52       		.byte	0x52
 5122 02e7 12000000 		.4byte	.LVL51
 5123 02eb 90000000 		.4byte	.LVL63
 5124 02ef 0100     		.2byte	0x1
 5125 02f1 56       		.byte	0x56
 5126 02f2 90000000 		.4byte	.LVL63
 5127 02f6 98000000 		.4byte	.LFE8
 5128 02fa 0400     		.2byte	0x4
 5129 02fc F3       		.byte	0xf3
 5130 02fd 01       		.uleb128 0x1
 5131 02fe 52       		.byte	0x52
 5132 02ff 9F       		.byte	0x9f
 5133 0300 00000000 		.4byte	0
 5134 0304 00000000 		.4byte	0
 5135              	.LLST20:
 5136 0308 0E000000 		.4byte	.LVL50
 5137 030c 12000000 		.4byte	.LVL51
 5138 0310 0200     		.2byte	0x2
 5139 0312 30       		.byte	0x30
 5140 0313 9F       		.byte	0x9f
 5141 0314 12000000 		.4byte	.LVL51
 5142 0318 90000000 		.4byte	.LVL62
 5143 031c 0100     		.2byte	0x1
 5144 031e 55       		.byte	0x55
 5145 031f 00000000 		.4byte	0
 5146 0323 00000000 		.4byte	0
 5147              	.LLST21:
 5148 0327 16000000 		.4byte	.LVL52
 5149 032b 35000000 		.4byte	.LVL53-1
 5150 032f 0100     		.2byte	0x1
 5151 0331 50       		.byte	0x50
 5152 0332 48000000 		.4byte	.LVL54
 5153 0336 67000000 		.4byte	.LVL55-1
 5154 033a 0100     		.2byte	0x1
 5155 033c 50       		.byte	0x50
 5156 033d 6E000000 		.4byte	.LVL56
 5157 0341 7F000000 		.4byte	.LVL57-1
 5158 0345 0100     		.2byte	0x1
 5159 0347 50       		.byte	0x50
 5160 0348 00000000 		.4byte	0
 5161 034c 00000000 		.4byte	0
 5162              	.LLST22:
 5163 0350 0E000000 		.4byte	.LVL50
 5164 0354 90000000 		.4byte	.LVL61
 5165 0358 0100     		.2byte	0x1
ARM GAS  C:\Users\mstai\AppData\Local\Temp\ccHdifRP.s 			page 153


 5166 035a 54       		.byte	0x54
 5167 035b 00000000 		.4byte	0
 5168 035f 00000000 		.4byte	0
 5169              	.LLST23:
 5170 0363 00000000 		.4byte	.LVL64
 5171 0367 2E000000 		.4byte	.LVL68
 5172 036b 0100     		.2byte	0x1
 5173 036d 50       		.byte	0x50
 5174 036e 2E000000 		.4byte	.LVL68
 5175 0372 88000000 		.4byte	.LFE11
 5176 0376 0400     		.2byte	0x4
 5177 0378 F3       		.byte	0xf3
 5178 0379 01       		.uleb128 0x1
 5179 037a 50       		.byte	0x50
 5180 037b 9F       		.byte	0x9f
 5181 037c 00000000 		.4byte	0
 5182 0380 00000000 		.4byte	0
 5183              	.LLST24:
 5184 0384 34000000 		.4byte	.LVL70
 5185 0388 76000000 		.4byte	.LVL83
 5186 038c 0200     		.2byte	0x2
 5187 038e 91       		.byte	0x91
 5188 038f 5C       		.sleb128 -36
 5189 0390 00000000 		.4byte	0
 5190 0394 00000000 		.4byte	0
 5191              	.LLST25:
 5192 0398 28000000 		.4byte	.LVL67
 5193 039c 2E000000 		.4byte	.LVL68
 5194 03a0 0200     		.2byte	0x2
 5195 03a2 30       		.byte	0x30
 5196 03a3 9F       		.byte	0x9f
 5197 03a4 2E000000 		.4byte	.LVL68
 5198 03a8 7C000000 		.4byte	.LVL85
 5199 03ac 0100     		.2byte	0x1
 5200 03ae 55       		.byte	0x55
 5201 03af 00000000 		.4byte	0
 5202 03b3 00000000 		.4byte	0
 5203              	.LLST26:
 5204 03b7 1A000000 		.4byte	.LVL65
 5205 03bb 22000000 		.4byte	.LVL66
 5206 03bf 0200     		.2byte	0x2
 5207 03c1 30       		.byte	0x30
 5208 03c2 9F       		.byte	0x9f
 5209 03c3 28000000 		.4byte	.LVL67
 5210 03c7 7C000000 		.4byte	.LVL87
 5211 03cb 0100     		.2byte	0x1
 5212 03cd 59       		.byte	0x59
 5213 03ce 00000000 		.4byte	0
 5214 03d2 00000000 		.4byte	0
 5215              	.LLST27:
 5216 03d6 1A000000 		.4byte	.LVL65
 5217 03da 22000000 		.4byte	.LVL66
 5218 03de 0200     		.2byte	0x2
 5219 03e0 35       		.byte	0x35
 5220 03e1 9F       		.byte	0x9f
 5221 03e2 28000000 		.4byte	.LVL67
 5222 03e6 7C000000 		.4byte	.LVL86
ARM GAS  C:\Users\mstai\AppData\Local\Temp\ccHdifRP.s 			page 154


 5223 03ea 0100     		.2byte	0x1
 5224 03ec 57       		.byte	0x57
 5225 03ed 00000000 		.4byte	0
 5226 03f1 00000000 		.4byte	0
 5227              	.LLST28:
 5228 03f5 42000000 		.4byte	.LVL73
 5229 03f9 58000000 		.4byte	.LVL76
 5230 03fd 0100     		.2byte	0x1
 5231 03ff 52       		.byte	0x52
 5232 0400 58000000 		.4byte	.LVL76
 5233 0404 62000000 		.4byte	.LVL78
 5234 0408 0200     		.2byte	0x2
 5235 040a 70       		.byte	0x70
 5236 040b 00       		.sleb128 0
 5237 040c 66000000 		.4byte	.LVL79
 5238 0410 71000000 		.4byte	.LVL81-1
 5239 0414 0100     		.2byte	0x1
 5240 0416 53       		.byte	0x53
 5241 0417 00000000 		.4byte	0
 5242 041b 00000000 		.4byte	0
 5243              	.LLST29:
 5244 041f 38000000 		.4byte	.LVL71
 5245 0423 66000000 		.4byte	.LVL79
 5246 0427 0100     		.2byte	0x1
 5247 0429 53       		.byte	0x53
 5248 042a 00000000 		.4byte	0
 5249 042e 00000000 		.4byte	0
 5250              	.LLST30:
 5251 0432 2E000000 		.4byte	.LVL68
 5252 0436 7C000000 		.4byte	.LVL84
 5253 043a 0100     		.2byte	0x1
 5254 043c 54       		.byte	0x54
 5255 043d 00000000 		.4byte	0
 5256 0441 00000000 		.4byte	0
 5257              	.LLST31:
 5258 0445 00000000 		.4byte	.LVL88
 5259 0449 05000000 		.4byte	.LVL89-1
 5260 044d 0100     		.2byte	0x1
 5261 044f 50       		.byte	0x50
 5262 0450 05000000 		.4byte	.LVL89-1
 5263 0454 08000000 		.4byte	.LFE13
 5264 0458 0400     		.2byte	0x4
 5265 045a F3       		.byte	0xf3
 5266 045b 01       		.uleb128 0x1
 5267 045c 50       		.byte	0x50
 5268 045d 9F       		.byte	0x9f
 5269 045e 00000000 		.4byte	0
 5270 0462 00000000 		.4byte	0
 5271              	.LLST32:
 5272 0466 00000000 		.4byte	.LVL90
 5273 046a 08000000 		.4byte	.LVL91
 5274 046e 0100     		.2byte	0x1
 5275 0470 50       		.byte	0x50
 5276 0471 08000000 		.4byte	.LVL91
 5277 0475 0A000000 		.4byte	.LVL92
 5278 0479 0300     		.2byte	0x3
 5279 047b 70       		.byte	0x70
ARM GAS  C:\Users\mstai\AppData\Local\Temp\ccHdifRP.s 			page 155


 5280 047c 01       		.sleb128 1
 5281 047d 9F       		.byte	0x9f
 5282 047e 0A000000 		.4byte	.LVL92
 5283 0482 30000000 		.4byte	.LFE14
 5284 0486 0400     		.2byte	0x4
 5285 0488 F3       		.byte	0xf3
 5286 0489 01       		.uleb128 0x1
 5287 048a 50       		.byte	0x50
 5288 048b 9F       		.byte	0x9f
 5289 048c 00000000 		.4byte	0
 5290 0490 00000000 		.4byte	0
 5291              	.LLST33:
 5292 0494 00000000 		.4byte	.LVL93
 5293 0498 0A000000 		.4byte	.LVL97
 5294 049c 0100     		.2byte	0x1
 5295 049e 50       		.byte	0x50
 5296 049f 0A000000 		.4byte	.LVL97
 5297 04a3 0C000000 		.4byte	.LVL98
 5298 04a7 0300     		.2byte	0x3
 5299 04a9 70       		.byte	0x70
 5300 04aa 01       		.sleb128 1
 5301 04ab 9F       		.byte	0x9f
 5302 04ac 0C000000 		.4byte	.LVL98
 5303 04b0 14000000 		.4byte	.LFE15
 5304 04b4 0400     		.2byte	0x4
 5305 04b6 F3       		.byte	0xf3
 5306 04b7 01       		.uleb128 0x1
 5307 04b8 50       		.byte	0x50
 5308 04b9 9F       		.byte	0x9f
 5309 04ba 00000000 		.4byte	0
 5310 04be 00000000 		.4byte	0
 5311              	.LLST34:
 5312 04c2 04000000 		.4byte	.LVL94
 5313 04c6 06000000 		.4byte	.LVL95
 5314 04ca 0100     		.2byte	0x1
 5315 04cc 53       		.byte	0x53
 5316 04cd 08000000 		.4byte	.LVL96
 5317 04d1 0C000000 		.4byte	.LVL98
 5318 04d5 0100     		.2byte	0x1
 5319 04d7 53       		.byte	0x53
 5320 04d8 0C000000 		.4byte	.LVL98
 5321 04dc 14000000 		.4byte	.LFE15
 5322 04e0 0100     		.2byte	0x1
 5323 04e2 50       		.byte	0x50
 5324 04e3 00000000 		.4byte	0
 5325 04e7 00000000 		.4byte	0
 5326              	.LLST35:
 5327 04eb 00000000 		.4byte	.LVL99
 5328 04ef 06000000 		.4byte	.LVL100
 5329 04f3 0100     		.2byte	0x1
 5330 04f5 50       		.byte	0x50
 5331 04f6 06000000 		.4byte	.LVL100
 5332 04fa 10000000 		.4byte	.LVL103
 5333 04fe 0100     		.2byte	0x1
 5334 0500 54       		.byte	0x54
 5335 0501 10000000 		.4byte	.LVL103
 5336 0505 12000000 		.4byte	.LFE16
ARM GAS  C:\Users\mstai\AppData\Local\Temp\ccHdifRP.s 			page 156


 5337 0509 0400     		.2byte	0x4
 5338 050b F3       		.byte	0xf3
 5339 050c 01       		.uleb128 0x1
 5340 050d 50       		.byte	0x50
 5341 050e 9F       		.byte	0x9f
 5342 050f 00000000 		.4byte	0
 5343 0513 00000000 		.4byte	0
 5344              	.LLST36:
 5345 0517 00000000 		.4byte	.LVL99
 5346 051b 09000000 		.4byte	.LVL101-1
 5347 051f 0100     		.2byte	0x1
 5348 0521 51       		.byte	0x51
 5349 0522 09000000 		.4byte	.LVL101-1
 5350 0526 12000000 		.4byte	.LFE16
 5351 052a 0400     		.2byte	0x4
 5352 052c F3       		.byte	0xf3
 5353 052d 01       		.uleb128 0x1
 5354 052e 51       		.byte	0x51
 5355 052f 9F       		.byte	0x9f
 5356 0530 00000000 		.4byte	0
 5357 0534 00000000 		.4byte	0
 5358              	.LLST37:
 5359 0538 00000000 		.4byte	.LVL104
 5360 053c 2F000000 		.4byte	.LVL107-1
 5361 0540 0100     		.2byte	0x1
 5362 0542 50       		.byte	0x50
 5363 0543 2F000000 		.4byte	.LVL107-1
 5364 0547 3C000000 		.4byte	.LFE17
 5365 054b 0400     		.2byte	0x4
 5366 054d F3       		.byte	0xf3
 5367 054e 01       		.uleb128 0x1
 5368 054f 50       		.byte	0x50
 5369 0550 9F       		.byte	0x9f
 5370 0551 00000000 		.4byte	0
 5371 0555 00000000 		.4byte	0
 5372              	.LLST38:
 5373 0559 02000000 		.4byte	.LVL105
 5374 055d 26000000 		.4byte	.LVL106
 5375 0561 0200     		.2byte	0x2
 5376 0563 30       		.byte	0x30
 5377 0564 9F       		.byte	0x9f
 5378 0565 26000000 		.4byte	.LVL106
 5379 0569 2F000000 		.4byte	.LVL107-1
 5380 056d 0100     		.2byte	0x1
 5381 056f 53       		.byte	0x53
 5382 0570 32000000 		.4byte	.LVL108
 5383 0574 3C000000 		.4byte	.LFE17
 5384 0578 0100     		.2byte	0x1
 5385 057a 53       		.byte	0x53
 5386 057b 00000000 		.4byte	0
 5387 057f 00000000 		.4byte	0
 5388              	.LLST39:
 5389 0583 02000000 		.4byte	.LVL109
 5390 0587 08000000 		.4byte	.LVL110
 5391 058b 0200     		.2byte	0x2
 5392 058d 30       		.byte	0x30
 5393 058e 9F       		.byte	0x9f
ARM GAS  C:\Users\mstai\AppData\Local\Temp\ccHdifRP.s 			page 157


 5394 058f 08000000 		.4byte	.LVL110
 5395 0593 18000000 		.4byte	.LVL115
 5396 0597 0100     		.2byte	0x1
 5397 0599 55       		.byte	0x55
 5398 059a 18000000 		.4byte	.LVL115
 5399 059e 1A000000 		.4byte	.LFE18
 5400 05a2 0100     		.2byte	0x1
 5401 05a4 50       		.byte	0x50
 5402 05a5 00000000 		.4byte	0
 5403 05a9 00000000 		.4byte	0
 5404              	.LLST40:
 5405 05ad 02000000 		.4byte	.LVL109
 5406 05b1 08000000 		.4byte	.LVL110
 5407 05b5 0200     		.2byte	0x2
 5408 05b7 30       		.byte	0x30
 5409 05b8 9F       		.byte	0x9f
 5410 05b9 08000000 		.4byte	.LVL110
 5411 05bd 18000000 		.4byte	.LVL114
 5412 05c1 0100     		.2byte	0x1
 5413 05c3 54       		.byte	0x54
 5414 05c4 00000000 		.4byte	0
 5415 05c8 00000000 		.4byte	0
 5416              	.LLST41:
 5417 05cc 00000000 		.4byte	.LVL116
 5418 05d0 02000000 		.4byte	.LVL117
 5419 05d4 0100     		.2byte	0x1
 5420 05d6 50       		.byte	0x50
 5421 05d7 02000000 		.4byte	.LVL117
 5422 05db 10000000 		.4byte	.LFE23
 5423 05df 0400     		.2byte	0x4
 5424 05e1 F3       		.byte	0xf3
 5425 05e2 01       		.uleb128 0x1
 5426 05e3 50       		.byte	0x50
 5427 05e4 9F       		.byte	0x9f
 5428 05e5 00000000 		.4byte	0
 5429 05e9 00000000 		.4byte	0
 5430              	.LLST42:
 5431 05ed 00000000 		.4byte	.LVL120
 5432 05f1 12000000 		.4byte	.LVL121
 5433 05f5 0100     		.2byte	0x1
 5434 05f7 50       		.byte	0x50
 5435 05f8 12000000 		.4byte	.LVL121
 5436 05fc 1A000000 		.4byte	.LVL122
 5437 0600 0400     		.2byte	0x4
 5438 0602 F3       		.byte	0xf3
 5439 0603 01       		.uleb128 0x1
 5440 0604 50       		.byte	0x50
 5441 0605 9F       		.byte	0x9f
 5442 0606 1A000000 		.4byte	.LVL122
 5443 060a 1C000000 		.4byte	.LVL123
 5444 060e 0100     		.2byte	0x1
 5445 0610 50       		.byte	0x50
 5446 0611 1C000000 		.4byte	.LVL123
 5447 0615 24000000 		.4byte	.LFE24
 5448 0619 0400     		.2byte	0x4
 5449 061b F3       		.byte	0xf3
 5450 061c 01       		.uleb128 0x1
ARM GAS  C:\Users\mstai\AppData\Local\Temp\ccHdifRP.s 			page 158


 5451 061d 50       		.byte	0x50
 5452 061e 9F       		.byte	0x9f
 5453 061f 00000000 		.4byte	0
 5454 0623 00000000 		.4byte	0
 5455              	.LLST43:
 5456 0627 20000000 		.4byte	.LVL124
 5457 062b 22000000 		.4byte	.LVL125
 5458 062f 0100     		.2byte	0x1
 5459 0631 50       		.byte	0x50
 5460 0632 00000000 		.4byte	0
 5461 0636 00000000 		.4byte	0
 5462              	.LLST44:
 5463 063a 00000000 		.4byte	.LVL126
 5464 063e 07000000 		.4byte	.LVL127-1
 5465 0642 0100     		.2byte	0x1
 5466 0644 50       		.byte	0x50
 5467 0645 07000000 		.4byte	.LVL127-1
 5468 0649 3A000000 		.4byte	.LFE20
 5469 064d 0400     		.2byte	0x4
 5470 064f F3       		.byte	0xf3
 5471 0650 01       		.uleb128 0x1
 5472 0651 50       		.byte	0x50
 5473 0652 9F       		.byte	0x9f
 5474 0653 00000000 		.4byte	0
 5475 0657 00000000 		.4byte	0
 5476              	.LLST45:
 5477 065b 00000000 		.4byte	.LVL126
 5478 065f 07000000 		.4byte	.LVL127-1
 5479 0663 0100     		.2byte	0x1
 5480 0665 51       		.byte	0x51
 5481 0666 07000000 		.4byte	.LVL127-1
 5482 066a 38000000 		.4byte	.LVL141
 5483 066e 0100     		.2byte	0x1
 5484 0670 56       		.byte	0x56
 5485 0671 38000000 		.4byte	.LVL141
 5486 0675 3A000000 		.4byte	.LFE20
 5487 0679 0400     		.2byte	0x4
 5488 067b F3       		.byte	0xf3
 5489 067c 01       		.uleb128 0x1
 5490 067d 51       		.byte	0x51
 5491 067e 9F       		.byte	0x9f
 5492 067f 00000000 		.4byte	0
 5493 0683 00000000 		.4byte	0
 5494              	.LLST46:
 5495 0687 1C000000 		.4byte	.LVL133
 5496 068b 20000000 		.4byte	.LVL134
 5497 068f 0100     		.2byte	0x1
 5498 0691 50       		.byte	0x50
 5499 0692 20000000 		.4byte	.LVL134
 5500 0696 38000000 		.4byte	.LVL139
 5501 069a 0100     		.2byte	0x1
 5502 069c 54       		.byte	0x54
 5503 069d 00000000 		.4byte	0
 5504 06a1 00000000 		.4byte	0
 5505              	.LLST47:
 5506 06a5 30000000 		.4byte	.LVL137
 5507 06a9 32000000 		.4byte	.LVL138
ARM GAS  C:\Users\mstai\AppData\Local\Temp\ccHdifRP.s 			page 159


 5508 06ad 0100     		.2byte	0x1
 5509 06af 50       		.byte	0x50
 5510 06b0 00000000 		.4byte	0
 5511 06b4 00000000 		.4byte	0
 5512              	.LLST48:
 5513 06b8 14000000 		.4byte	.LVL130
 5514 06bc 16000000 		.4byte	.LVL131
 5515 06c0 0100     		.2byte	0x1
 5516 06c2 50       		.byte	0x50
 5517 06c3 16000000 		.4byte	.LVL131
 5518 06c7 19000000 		.4byte	.LVL132-1
 5519 06cb 0100     		.2byte	0x1
 5520 06cd 51       		.byte	0x51
 5521 06ce 00000000 		.4byte	0
 5522 06d2 00000000 		.4byte	0
 5523              	.LLST49:
 5524 06d6 0A000000 		.4byte	.LVL128
 5525 06da 11000000 		.4byte	.LVL129-1
 5526 06de 0100     		.2byte	0x1
 5527 06e0 50       		.byte	0x50
 5528 06e1 11000000 		.4byte	.LVL129-1
 5529 06e5 38000000 		.4byte	.LVL140
 5530 06e9 0100     		.2byte	0x1
 5531 06eb 55       		.byte	0x55
 5532 06ec 00000000 		.4byte	0
 5533 06f0 00000000 		.4byte	0
 5534              	.LLST50:
 5535 06f4 02000000 		.4byte	.LVL142
 5536 06f8 06000000 		.4byte	.LVL143
 5537 06fc 0200     		.2byte	0x2
 5538 06fe 30       		.byte	0x30
 5539 06ff 9F       		.byte	0x9f
 5540 0700 06000000 		.4byte	.LVL143
 5541 0704 20000000 		.4byte	.LVL148
 5542 0708 0100     		.2byte	0x1
 5543 070a 54       		.byte	0x54
 5544 070b 00000000 		.4byte	0
 5545 070f 00000000 		.4byte	0
 5546              	.LLST51:
 5547 0713 0E000000 		.4byte	.LVL144
 5548 0717 13000000 		.4byte	.LVL145-1
 5549 071b 0100     		.2byte	0x1
 5550 071d 51       		.byte	0x51
 5551 071e 00000000 		.4byte	0
 5552 0722 00000000 		.4byte	0
 5553              	.LLST52:
 5554 0726 00000000 		.4byte	.LVL149
 5555 072a 37000000 		.4byte	.LVL154-1
 5556 072e 0100     		.2byte	0x1
 5557 0730 50       		.byte	0x50
 5558 0731 37000000 		.4byte	.LVL154-1
 5559 0735 42000000 		.4byte	.LVL157
 5560 0739 0200     		.2byte	0x2
 5561 073b 91       		.byte	0x91
 5562 073c 54       		.sleb128 -44
 5563 073d 42000000 		.4byte	.LVL157
 5564 0741 D4000000 		.4byte	.LFE25
ARM GAS  C:\Users\mstai\AppData\Local\Temp\ccHdifRP.s 			page 160


 5565 0745 0400     		.2byte	0x4
 5566 0747 F3       		.byte	0xf3
 5567 0748 01       		.uleb128 0x1
 5568 0749 50       		.byte	0x50
 5569 074a 9F       		.byte	0x9f
 5570 074b 00000000 		.4byte	0
 5571 074f 00000000 		.4byte	0
 5572              	.LLST53:
 5573 0753 1C000000 		.4byte	.LVL150
 5574 0757 2A000000 		.4byte	.LVL152
 5575 075b 0100     		.2byte	0x1
 5576 075d 54       		.byte	0x54
 5577 075e 2A000000 		.4byte	.LVL152
 5578 0762 42000000 		.4byte	.LVL157
 5579 0766 0200     		.2byte	0x2
 5580 0768 7D       		.byte	0x7d
 5581 0769 00       		.sleb128 0
 5582 076a 00000000 		.4byte	0
 5583 076e 00000000 		.4byte	0
 5584              	.LLST54:
 5585 0772 28000000 		.4byte	.LVL151
 5586 0776 37000000 		.4byte	.LVL154-1
 5587 077a 0100     		.2byte	0x1
 5588 077c 52       		.byte	0x52
 5589 077d 37000000 		.4byte	.LVL154-1
 5590 0781 B2000000 		.4byte	.LVL186
 5591 0785 0100     		.2byte	0x1
 5592 0787 59       		.byte	0x59
 5593 0788 00000000 		.4byte	0
 5594 078c 00000000 		.4byte	0
 5595              	.LLST55:
 5596 0790 34000000 		.4byte	.LVL153
 5597 0794 5E000000 		.4byte	.LVL165
 5598 0798 0100     		.2byte	0x1
 5599 079a 55       		.byte	0x55
 5600 079b 5E000000 		.4byte	.LVL165
 5601 079f B2000000 		.4byte	.LVL187
 5602 07a3 0100     		.2byte	0x1
 5603 07a5 5B       		.byte	0x5b
 5604 07a6 00000000 		.4byte	0
 5605 07aa 00000000 		.4byte	0
 5606              	.LLST56:
 5607 07ae 3A000000 		.4byte	.LVL155
 5608 07b2 45000000 		.4byte	.LVL158-1
 5609 07b6 0100     		.2byte	0x1
 5610 07b8 53       		.byte	0x53
 5611 07b9 4C000000 		.4byte	.LVL160
 5612 07bd 55000000 		.4byte	.LVL162-1
 5613 07c1 0100     		.2byte	0x1
 5614 07c3 53       		.byte	0x53
 5615 07c4 5C000000 		.4byte	.LVL164
 5616 07c8 6B000000 		.4byte	.LVL168-1
 5617 07cc 0100     		.2byte	0x1
 5618 07ce 53       		.byte	0x53
 5619 07cf 7A000000 		.4byte	.LVL171
 5620 07d3 7C000000 		.4byte	.LVL172
 5621 07d7 0100     		.2byte	0x1
ARM GAS  C:\Users\mstai\AppData\Local\Temp\ccHdifRP.s 			page 161


 5622 07d9 53       		.byte	0x53
 5623 07da 7C000000 		.4byte	.LVL172
 5624 07de 8C000000 		.4byte	.LVL176
 5625 07e2 0100     		.2byte	0x1
 5626 07e4 55       		.byte	0x55
 5627 07e5 8C000000 		.4byte	.LVL176
 5628 07e9 99000000 		.4byte	.LVL179-1
 5629 07ed 0100     		.2byte	0x1
 5630 07ef 53       		.byte	0x53
 5631 07f0 A0000000 		.4byte	.LVL181
 5632 07f4 A6000000 		.4byte	.LVL182
 5633 07f8 0100     		.2byte	0x1
 5634 07fa 53       		.byte	0x53
 5635 07fb A6000000 		.4byte	.LVL182
 5636 07ff AA000000 		.4byte	.LVL183
 5637 0803 0100     		.2byte	0x1
 5638 0805 52       		.byte	0x52
 5639 0806 AA000000 		.4byte	.LVL183
 5640 080a B2000000 		.4byte	.LVL185
 5641 080e 0100     		.2byte	0x1
 5642 0810 54       		.byte	0x54
 5643 0811 00000000 		.4byte	0
 5644 0815 00000000 		.4byte	0
 5645              	.LLST57:
 5646 0819 38000000 		.4byte	.LVL154
 5647 081d 45000000 		.4byte	.LVL158-1
 5648 0821 0100     		.2byte	0x1
 5649 0823 50       		.byte	0x50
 5650 0824 4A000000 		.4byte	.LVL159
 5651 0828 55000000 		.4byte	.LVL162-1
 5652 082c 0100     		.2byte	0x1
 5653 082e 50       		.byte	0x50
 5654 082f 5A000000 		.4byte	.LVL163
 5655 0833 6B000000 		.4byte	.LVL168-1
 5656 0837 0100     		.2byte	0x1
 5657 0839 50       		.byte	0x50
 5658 083a 78000000 		.4byte	.LVL170
 5659 083e 85000000 		.4byte	.LVL174-1
 5660 0842 0100     		.2byte	0x1
 5661 0844 50       		.byte	0x50
 5662 0845 8A000000 		.4byte	.LVL175
 5663 0849 99000000 		.4byte	.LVL179-1
 5664 084d 0100     		.2byte	0x1
 5665 084f 50       		.byte	0x50
 5666 0850 9E000000 		.4byte	.LVL180
 5667 0854 AF000000 		.4byte	.LVL184-1
 5668 0858 0100     		.2byte	0x1
 5669 085a 50       		.byte	0x50
 5670 085b 00000000 		.4byte	0
 5671 085f 00000000 		.4byte	0
 5672              	.LLST58:
 5673 0863 00000000 		.4byte	.LVL188
 5674 0867 14000000 		.4byte	.LVL190
 5675 086b 0100     		.2byte	0x1
 5676 086d 50       		.byte	0x50
 5677 086e 14000000 		.4byte	.LVL190
 5678 0872 16000000 		.4byte	.LVL191
ARM GAS  C:\Users\mstai\AppData\Local\Temp\ccHdifRP.s 			page 162


 5679 0876 0400     		.2byte	0x4
 5680 0878 F3       		.byte	0xf3
 5681 0879 01       		.uleb128 0x1
 5682 087a 50       		.byte	0x50
 5683 087b 9F       		.byte	0x9f
 5684 087c 16000000 		.4byte	.LVL191
 5685 0880 1E000000 		.4byte	.LVL192
 5686 0884 0100     		.2byte	0x1
 5687 0886 50       		.byte	0x50
 5688 0887 1E000000 		.4byte	.LVL192
 5689 088b 20000000 		.4byte	.LVL193
 5690 088f 0400     		.2byte	0x4
 5691 0891 F3       		.byte	0xf3
 5692 0892 01       		.uleb128 0x1
 5693 0893 50       		.byte	0x50
 5694 0894 9F       		.byte	0x9f
 5695 0895 20000000 		.4byte	.LVL193
 5696 0899 22000000 		.4byte	.LVL194
 5697 089d 0100     		.2byte	0x1
 5698 089f 50       		.byte	0x50
 5699 08a0 22000000 		.4byte	.LVL194
 5700 08a4 30000000 		.4byte	.LFE26
 5701 08a8 0400     		.2byte	0x4
 5702 08aa F3       		.byte	0xf3
 5703 08ab 01       		.uleb128 0x1
 5704 08ac 50       		.byte	0x50
 5705 08ad 9F       		.byte	0x9f
 5706 08ae 00000000 		.4byte	0
 5707 08b2 00000000 		.4byte	0
 5708              	.LLST59:
 5709 08b6 00000000 		.4byte	.LVL188
 5710 08ba 25000000 		.4byte	.LVL195-1
 5711 08be 0100     		.2byte	0x1
 5712 08c0 51       		.byte	0x51
 5713 08c1 25000000 		.4byte	.LVL195-1
 5714 08c5 30000000 		.4byte	.LFE26
 5715 08c9 0400     		.2byte	0x4
 5716 08cb F3       		.byte	0xf3
 5717 08cc 01       		.uleb128 0x1
 5718 08cd 51       		.byte	0x51
 5719 08ce 9F       		.byte	0x9f
 5720 08cf 00000000 		.4byte	0
 5721 08d3 00000000 		.4byte	0
 5722              	.LLST60:
 5723 08d7 02000000 		.4byte	.LVL189
 5724 08db 26000000 		.4byte	.LVL195
 5725 08df 0200     		.2byte	0x2
 5726 08e1 30       		.byte	0x30
 5727 08e2 9F       		.byte	0x9f
 5728 08e3 26000000 		.4byte	.LVL195
 5729 08e7 28000000 		.4byte	.LVL196
 5730 08eb 0200     		.2byte	0x2
 5731 08ed 31       		.byte	0x31
 5732 08ee 9F       		.byte	0x9f
 5733 08ef 28000000 		.4byte	.LVL196
 5734 08f3 30000000 		.4byte	.LFE26
 5735 08f7 0100     		.2byte	0x1
ARM GAS  C:\Users\mstai\AppData\Local\Temp\ccHdifRP.s 			page 163


 5736 08f9 50       		.byte	0x50
 5737 08fa 00000000 		.4byte	0
 5738 08fe 00000000 		.4byte	0
 5739              	.LLST61:
 5740 0902 00000000 		.4byte	.LVL197
 5741 0906 0B000000 		.4byte	.LVL198-1
 5742 090a 0100     		.2byte	0x1
 5743 090c 50       		.byte	0x50
 5744 090d 0B000000 		.4byte	.LVL198-1
 5745 0911 1A000000 		.4byte	.LVL201
 5746 0915 0100     		.2byte	0x1
 5747 0917 55       		.byte	0x55
 5748 0918 1A000000 		.4byte	.LVL201
 5749 091c 1C000000 		.4byte	.LFE27
 5750 0920 0400     		.2byte	0x4
 5751 0922 F3       		.byte	0xf3
 5752 0923 01       		.uleb128 0x1
 5753 0924 50       		.byte	0x50
 5754 0925 9F       		.byte	0x9f
 5755 0926 00000000 		.4byte	0
 5756 092a 00000000 		.4byte	0
 5757              	.LLST62:
 5758 092e 00000000 		.4byte	.LVL197
 5759 0932 0B000000 		.4byte	.LVL198-1
 5760 0936 0100     		.2byte	0x1
 5761 0938 51       		.byte	0x51
 5762 0939 0B000000 		.4byte	.LVL198-1
 5763 093d 1A000000 		.4byte	.LVL202
 5764 0941 0100     		.2byte	0x1
 5765 0943 56       		.byte	0x56
 5766 0944 1A000000 		.4byte	.LVL202
 5767 0948 1C000000 		.4byte	.LFE27
 5768 094c 0400     		.2byte	0x4
 5769 094e F3       		.byte	0xf3
 5770 094f 01       		.uleb128 0x1
 5771 0950 51       		.byte	0x51
 5772 0951 9F       		.byte	0x9f
 5773 0952 00000000 		.4byte	0
 5774 0956 00000000 		.4byte	0
 5775              	.LLST63:
 5776 095a 00000000 		.4byte	.LVL197
 5777 095e 0B000000 		.4byte	.LVL198-1
 5778 0962 0100     		.2byte	0x1
 5779 0964 52       		.byte	0x52
 5780 0965 0B000000 		.4byte	.LVL198-1
 5781 0969 10000000 		.4byte	.LVL199
 5782 096d 0100     		.2byte	0x1
 5783 096f 54       		.byte	0x54
 5784 0970 10000000 		.4byte	.LVL199
 5785 0974 1C000000 		.4byte	.LFE27
 5786 0978 0400     		.2byte	0x4
 5787 097a F3       		.byte	0xf3
 5788 097b 01       		.uleb128 0x1
 5789 097c 52       		.byte	0x52
 5790 097d 9F       		.byte	0x9f
 5791 097e 00000000 		.4byte	0
 5792 0982 00000000 		.4byte	0
ARM GAS  C:\Users\mstai\AppData\Local\Temp\ccHdifRP.s 			page 164


 5793              	.LLST64:
 5794 0986 0C000000 		.4byte	.LVL198
 5795 098a 19000000 		.4byte	.LVL200-1
 5796 098e 0100     		.2byte	0x1
 5797 0990 50       		.byte	0x50
 5798 0991 00000000 		.4byte	0
 5799 0995 00000000 		.4byte	0
 5800              	.LLST65:
 5801 0999 06000000 		.4byte	.LVL203
 5802 099d 17000000 		.4byte	.LVL205-1
 5803 09a1 0100     		.2byte	0x1
 5804 09a3 53       		.byte	0x53
 5805 09a4 00000000 		.4byte	0
 5806 09a8 00000000 		.4byte	0
 5807              	.LLST66:
 5808 09ac 00000000 		.4byte	.LVL207
 5809 09b0 13000000 		.4byte	.LVL208-1
 5810 09b4 0100     		.2byte	0x1
 5811 09b6 50       		.byte	0x50
 5812 09b7 13000000 		.4byte	.LVL208-1
 5813 09bb 16000000 		.4byte	.LVL209
 5814 09bf 0400     		.2byte	0x4
 5815 09c1 F3       		.byte	0xf3
 5816 09c2 01       		.uleb128 0x1
 5817 09c3 50       		.byte	0x50
 5818 09c4 9F       		.byte	0x9f
 5819 09c5 16000000 		.4byte	.LVL209
 5820 09c9 25000000 		.4byte	.LVL210-1
 5821 09cd 0100     		.2byte	0x1
 5822 09cf 50       		.byte	0x50
 5823 09d0 25000000 		.4byte	.LVL210-1
 5824 09d4 5C000000 		.4byte	.LFE10
 5825 09d8 0400     		.2byte	0x4
 5826 09da F3       		.byte	0xf3
 5827 09db 01       		.uleb128 0x1
 5828 09dc 50       		.byte	0x50
 5829 09dd 9F       		.byte	0x9f
 5830 09de 00000000 		.4byte	0
 5831 09e2 00000000 		.4byte	0
 5832              		.section	.debug_aranges,"",%progbits
 5833 0000 EC000000 		.4byte	0xec
 5834 0004 0200     		.2byte	0x2
 5835 0006 00000000 		.4byte	.Ldebug_info0
 5836 000a 04       		.byte	0x4
 5837 000b 00       		.byte	0
 5838 000c 0000     		.2byte	0
 5839 000e 0000     		.2byte	0
 5840 0010 00000000 		.4byte	.LFB21
 5841 0014 84000000 		.4byte	.LFE21-.LFB21
 5842 0018 00000000 		.4byte	.LFB22
 5843 001c 42000000 		.4byte	.LFE22-.LFB22
 5844 0020 00000000 		.4byte	.LFB1
 5845 0024 10000000 		.4byte	.LFE1-.LFB1
 5846 0028 00000000 		.4byte	.LFB2
 5847 002c 4C000000 		.4byte	.LFE2-.LFB2
 5848 0030 00000000 		.4byte	.LFB3
 5849 0034 2C000000 		.4byte	.LFE3-.LFB3
ARM GAS  C:\Users\mstai\AppData\Local\Temp\ccHdifRP.s 			page 165


 5850 0038 00000000 		.4byte	.LFB4
 5851 003c 3C000000 		.4byte	.LFE4-.LFB4
 5852 0040 00000000 		.4byte	.LFB5
 5853 0044 60000000 		.4byte	.LFE5-.LFB5
 5854 0048 00000000 		.4byte	.LFB6
 5855 004c 2C000000 		.4byte	.LFE6-.LFB6
 5856 0050 00000000 		.4byte	.LFB8
 5857 0054 98000000 		.4byte	.LFE8-.LFB8
 5858 0058 00000000 		.4byte	.LFB11
 5859 005c 88000000 		.4byte	.LFE11-.LFB11
 5860 0060 00000000 		.4byte	.LFB12
 5861 0064 02000000 		.4byte	.LFE12-.LFB12
 5862 0068 00000000 		.4byte	.LFB13
 5863 006c 08000000 		.4byte	.LFE13-.LFB13
 5864 0070 00000000 		.4byte	.LFB14
 5865 0074 30000000 		.4byte	.LFE14-.LFB14
 5866 0078 00000000 		.4byte	.LFB15
 5867 007c 14000000 		.4byte	.LFE15-.LFB15
 5868 0080 00000000 		.4byte	.LFB16
 5869 0084 12000000 		.4byte	.LFE16-.LFB16
 5870 0088 00000000 		.4byte	.LFB17
 5871 008c 3C000000 		.4byte	.LFE17-.LFB17
 5872 0090 00000000 		.4byte	.LFB18
 5873 0094 1A000000 		.4byte	.LFE18-.LFB18
 5874 0098 00000000 		.4byte	.LFB23
 5875 009c 10000000 		.4byte	.LFE23-.LFB23
 5876 00a0 00000000 		.4byte	.LFB24
 5877 00a4 24000000 		.4byte	.LFE24-.LFB24
 5878 00a8 00000000 		.4byte	.LFB20
 5879 00ac 3A000000 		.4byte	.LFE20-.LFB20
 5880 00b0 00000000 		.4byte	.LFB19
 5881 00b4 28000000 		.4byte	.LFE19-.LFB19
 5882 00b8 00000000 		.4byte	.LFB25
 5883 00bc D4000000 		.4byte	.LFE25-.LFB25
 5884 00c0 00000000 		.4byte	.LFB26
 5885 00c4 30000000 		.4byte	.LFE26-.LFB26
 5886 00c8 00000000 		.4byte	.LFB27
 5887 00cc 1C000000 		.4byte	.LFE27-.LFB27
 5888 00d0 00000000 		.4byte	.LFB9
 5889 00d4 28000000 		.4byte	.LFE9-.LFB9
 5890 00d8 00000000 		.4byte	.LFB10
 5891 00dc 5C000000 		.4byte	.LFE10-.LFB10
 5892 00e0 00000000 		.4byte	.LFB7
 5893 00e4 24000000 		.4byte	.LFE7-.LFB7
 5894 00e8 00000000 		.4byte	0
 5895 00ec 00000000 		.4byte	0
 5896              		.section	.debug_ranges,"",%progbits
 5897              	.Ldebug_ranges0:
 5898 0000 00000000 		.4byte	.LFB21
 5899 0004 84000000 		.4byte	.LFE21
 5900 0008 00000000 		.4byte	.LFB22
 5901 000c 42000000 		.4byte	.LFE22
 5902 0010 00000000 		.4byte	.LFB1
 5903 0014 10000000 		.4byte	.LFE1
 5904 0018 00000000 		.4byte	.LFB2
 5905 001c 4C000000 		.4byte	.LFE2
 5906 0020 00000000 		.4byte	.LFB3
ARM GAS  C:\Users\mstai\AppData\Local\Temp\ccHdifRP.s 			page 166


 5907 0024 2C000000 		.4byte	.LFE3
 5908 0028 00000000 		.4byte	.LFB4
 5909 002c 3C000000 		.4byte	.LFE4
 5910 0030 00000000 		.4byte	.LFB5
 5911 0034 60000000 		.4byte	.LFE5
 5912 0038 00000000 		.4byte	.LFB6
 5913 003c 2C000000 		.4byte	.LFE6
 5914 0040 00000000 		.4byte	.LFB8
 5915 0044 98000000 		.4byte	.LFE8
 5916 0048 00000000 		.4byte	.LFB11
 5917 004c 88000000 		.4byte	.LFE11
 5918 0050 00000000 		.4byte	.LFB12
 5919 0054 02000000 		.4byte	.LFE12
 5920 0058 00000000 		.4byte	.LFB13
 5921 005c 08000000 		.4byte	.LFE13
 5922 0060 00000000 		.4byte	.LFB14
 5923 0064 30000000 		.4byte	.LFE14
 5924 0068 00000000 		.4byte	.LFB15
 5925 006c 14000000 		.4byte	.LFE15
 5926 0070 00000000 		.4byte	.LFB16
 5927 0074 12000000 		.4byte	.LFE16
 5928 0078 00000000 		.4byte	.LFB17
 5929 007c 3C000000 		.4byte	.LFE17
 5930 0080 00000000 		.4byte	.LFB18
 5931 0084 1A000000 		.4byte	.LFE18
 5932 0088 00000000 		.4byte	.LFB23
 5933 008c 10000000 		.4byte	.LFE23
 5934 0090 00000000 		.4byte	.LFB24
 5935 0094 24000000 		.4byte	.LFE24
 5936 0098 00000000 		.4byte	.LFB20
 5937 009c 3A000000 		.4byte	.LFE20
 5938 00a0 00000000 		.4byte	.LFB19
 5939 00a4 28000000 		.4byte	.LFE19
 5940 00a8 00000000 		.4byte	.LFB25
 5941 00ac D4000000 		.4byte	.LFE25
 5942 00b0 00000000 		.4byte	.LFB26
 5943 00b4 30000000 		.4byte	.LFE26
 5944 00b8 00000000 		.4byte	.LFB27
 5945 00bc 1C000000 		.4byte	.LFE27
 5946 00c0 00000000 		.4byte	.LFB9
 5947 00c4 28000000 		.4byte	.LFE9
 5948 00c8 00000000 		.4byte	.LFB10
 5949 00cc 5C000000 		.4byte	.LFE10
 5950 00d0 00000000 		.4byte	.LFB7
 5951 00d4 24000000 		.4byte	.LFE7
 5952 00d8 00000000 		.4byte	0
 5953 00dc 00000000 		.4byte	0
 5954              		.section	.debug_line,"",%progbits
 5955              	.Ldebug_line0:
 5956 0000 F2050000 		.section	.debug_str,"MS",%progbits,1
 5956      02000202 
 5956      00000201 
 5956      FB0E0D00 
 5956      01010101 
 5957              	.LASF186:
 5958 0000 43617053 		.ascii	"CapSense_SsCSDGetColSnsClkDivider\000"
 5958      656E7365 
ARM GAS  C:\Users\mstai\AppData\Local\Temp\ccHdifRP.s 			page 167


 5958      5F537343 
 5958      53444765 
 5958      74436F6C 
 5959              	.LASF162:
 5960 0022 73656E73 		.ascii	"sensorElement\000"
 5960      6F72456C 
 5960      656D656E 
 5960      7400
 5961              	.LASF156:
 5962 0030 7363616E 		.ascii	"scanStatus\000"
 5962      53746174 
 5962      757300
 5963              	.LASF204:
 5964 003b 43617053 		.ascii	"CapSense_SsCSDDisableMode\000"
 5964      656E7365 
 5964      5F537343 
 5964      53444469 
 5964      7361626C 
 5965              	.LASF159:
 5966 0055 43617053 		.ascii	"CapSense_SetupWidgetExt\000"
 5966      656E7365 
 5966      5F536574 
 5966      75705769 
 5966      64676574 
 5967              	.LASF211:
 5968 006d 43617053 		.ascii	"CapSense_widgetIndex\000"
 5968      656E7365 
 5968      5F776964 
 5968      67657449 
 5968      6E646578 
 5969              	.LASF229:
 5970 0082 43617053 		.ascii	"CapSense_DsUpdateWidgetCrc\000"
 5970      656E7365 
 5970      5F447355 
 5970      70646174 
 5970      65576964 
 5971              	.LASF103:
 5972 009d 736E7254 		.ascii	"snrTestWidgetId\000"
 5972      65737457 
 5972      69646765 
 5972      74496400 
 5973              	.LASF22:
 5974 00ad 43617053 		.ascii	"CapSense_UNDEFINED_E\000"
 5974      656E7365 
 5974      5F554E44 
 5974      4546494E 
 5974      45445F45 
 5975              	.LASF8:
 5976 00c2 756E7369 		.ascii	"unsigned int\000"
 5976      676E6564 
 5976      20696E74 
 5976      00
 5977              	.LASF89:
 5978 00cf 7363616E 		.ascii	"scanCounter\000"
 5978      436F756E 
 5978      74657200 
 5979              	.LASF87:
ARM GAS  C:\Users\mstai\AppData\Local\Temp\ccHdifRP.s 			page 168


 5980 00db 6877436C 		.ascii	"hwClock\000"
 5980      6F636B00 
 5981              	.LASF107:
 5982 00e3 7363616E 		.ascii	"scanCsdISC\000"
 5982      43736449 
 5982      534300
 5983              	.LASF207:
 5984 00ee 696E6974 		.ascii	"initStatus\000"
 5984      53746174 
 5984      757300
 5985              	.LASF231:
 5986 00f9 43794861 		.ascii	"CyHalt\000"
 5986      6C7400
 5987              	.LASF139:
 5988 0100 43617053 		.ascii	"CapSense_BIST_CSD_SH_CAP_E\000"
 5988      656E7365 
 5988      5F424953 
 5988      545F4353 
 5988      445F5348 
 5989              	.LASF166:
 5990 011b 696E7465 		.ascii	"interruptState\000"
 5990      72727570 
 5990      74537461 
 5990      746500
 5991              	.LASF112:
 5992 012a 70633250 		.ascii	"pc2Ptr\000"
 5992      747200
 5993              	.LASF149:
 5994 0131 6C667372 		.ascii	"lfsrScale\000"
 5994      5363616C 
 5994      6500
 5995              	.LASF196:
 5996 013b 64725265 		.ascii	"drReg\000"
 5996      6700
 5997              	.LASF150:
 5998 0141 6C667372 		.ascii	"lfsrRange\000"
 5998      52616E67 
 5998      6500
 5999              	.LASF185:
 6000 014b 43617053 		.ascii	"CapSense_CalibrateAllWidgets\000"
 6000      656E7365 
 6000      5F43616C 
 6000      69627261 
 6000      7465416C 
 6001              	.LASF239:
 6002 0168 43617053 		.ascii	"CapSense_IsBusy\000"
 6002      656E7365 
 6002      5F497342 
 6002      75737900 
 6003              	.LASF63:
 6004 0178 43617053 		.ascii	"CapSense_RAM_SNS_CP_STRUCT\000"
 6004      656E7365 
 6004      5F52414D 
 6004      5F534E53 
 6004      5F43505F 
 6005              	.LASF78:
 6006 0193 62697374 		.ascii	"bistCsxSnsCapISC\000"
ARM GAS  C:\Users\mstai\AppData\Local\Temp\ccHdifRP.s 			page 169


 6006      43737853 
 6006      6E734361 
 6006      70495343 
 6006      00
 6007              	.LASF178:
 6008 01a4 43617053 		.ascii	"CapSense_SsSetModClkClockDivider\000"
 6008      656E7365 
 6008      5F537353 
 6008      65744D6F 
 6008      64436C6B 
 6009              	.LASF83:
 6010 01c5 736E7353 		.ascii	"snsShortTimeUs\000"
 6010      686F7274 
 6010      54696D65 
 6010      557300
 6011              	.LASF65:
 6012 01d4 736E7343 		.ascii	"snsCapSnsClkDivider\000"
 6012      6170536E 
 6012      73436C6B 
 6012      44697669 
 6012      64657200 
 6013              	.LASF201:
 6014 01e8 72656750 		.ascii	"regPtr\000"
 6014      747200
 6015              	.LASF117:
 6016 01ef 6873696F 		.ascii	"hsiomShift\000"
 6016      6D536869 
 6016      667400
 6017              	.LASF43:
 6018 01fa 43617053 		.ascii	"CapSense_RAM_WD_LIST_STRUCT\000"
 6018      656E7365 
 6018      5F52414D 
 6018      5F57445F 
 6018      4C495354 
 6019              	.LASF79:
 6020 0216 62697374 		.ascii	"bistCsdShCapISC\000"
 6020      43736453 
 6020      68436170 
 6020      49534300 
 6021              	.LASF160:
 6022 0226 73656E73 		.ascii	"sensorId\000"
 6022      6F724964 
 6022      00
 6023              	.LASF0:
 6024 022f 7369676E 		.ascii	"signed char\000"
 6024      65642063 
 6024      68617200 
 6025              	.LASF188:
 6026 023b 70747257 		.ascii	"ptrWdgt\000"
 6026      64677400 
 6027              	.LASF10:
 6028 0243 75696E74 		.ascii	"uint32_t\000"
 6028      33325F74 
 6028      00
 6029              	.LASF203:
 6030 024c 43617053 		.ascii	"CapSense_SsSetWidgetSenseClkSrc\000"
 6030      656E7365 
ARM GAS  C:\Users\mstai\AppData\Local\Temp\ccHdifRP.s 			page 170


 6030      5F537353 
 6030      65745769 
 6030      64676574 
 6031              	.LASF36:
 6032 026c 69646163 		.ascii	"idacGainIndex\000"
 6032      4761696E 
 6032      496E6465 
 6032      7800
 6033              	.LASF170:
 6034 027a 6C6F6F70 		.ascii	"loopIndex\000"
 6034      496E6465 
 6034      7800
 6035              	.LASF92:
 6036 0284 77646774 		.ascii	"wdgtWorking\000"
 6036      576F726B 
 6036      696E6700 
 6037              	.LASF147:
 6038 0290 43617053 		.ascii	"CapSense_SsCalcLfsrScale\000"
 6038      656E7365 
 6038      5F537343 
 6038      616C634C 
 6038      66737253 
 6039              	.LASF14:
 6040 02a9 666C6F61 		.ascii	"float\000"
 6040      7400
 6041              	.LASF119:
 6042 02af 73686966 		.ascii	"shift\000"
 6042      7400
 6043              	.LASF236:
 6044 02b5 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 6044      43313120 
 6044      352E342E 
 6044      31203230 
 6044      31363036 
 6045 02e8 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m0plus -mthumb -"
 6045      20726576 
 6045      6973696F 
 6045      6E203233 
 6045      37373135 
 6046 031b 67202D4F 		.ascii	"g -Og -ffunction-sections -ffat-lto-objects\000"
 6046      67202D66 
 6046      66756E63 
 6046      74696F6E 
 6046      2D736563 
 6047              	.LASF219:
 6048 0347 43617053 		.ascii	"CapSense_CSDSetupWidget\000"
 6048      656E7365 
 6048      5F435344 
 6048      53657475 
 6048      70576964 
 6049              	.LASF174:
 6050 035f 746D7048 		.ascii	"tmpHsiomRegValue\000"
 6050      73696F6D 
 6050      52656756 
 6050      616C7565 
 6050      00
 6051              	.LASF175:
ARM GAS  C:\Users\mstai\AppData\Local\Temp\ccHdifRP.s 			page 171


 6052 0370 736E7349 		.ascii	"snsIoPtr\000"
 6052      6F507472 
 6052      00
 6053              	.LASF99:
 6054 0379 736E734C 		.ascii	"snsList\000"
 6054      69737400 
 6055              	.LASF7:
 6056 0381 6C6F6E67 		.ascii	"long long unsigned int\000"
 6056      206C6F6E 
 6056      6720756E 
 6056      7369676E 
 6056      65642069 
 6057              	.LASF212:
 6058 0398 43617053 		.ascii	"CapSense_sensorIndex\000"
 6058      656E7365 
 6058      5F73656E 
 6058      736F7249 
 6058      6E646578 
 6059              	.LASF120:
 6060 03ad 43617053 		.ascii	"CapSense_FLASH_IO_STRUCT\000"
 6060      656E7365 
 6060      5F464C41 
 6060      53485F49 
 6060      4F5F5354 
 6061              	.LASF104:
 6062 03c6 736E7254 		.ascii	"snrTestSensorId\000"
 6062      65737453 
 6062      656E736F 
 6062      72496400 
 6063              	.LASF71:
 6064 03d6 76646461 		.ascii	"vddaModClkDivider\000"
 6064      4D6F6443 
 6064      6C6B4469 
 6064      76696465 
 6064      7200
 6065              	.LASF81:
 6066 03e8 73746172 		.ascii	"startupDelay\000"
 6066      74757044 
 6066      656C6179 
 6066      00
 6067              	.LASF128:
 6068 03f5 77646774 		.ascii	"wdgtType\000"
 6068      54797065 
 6068      00
 6069              	.LASF148:
 6070 03fe 6C667372 		.ascii	"lfsrSize\000"
 6070      53697A65 
 6070      00
 6071              	.LASF221:
 6072 0407 43617053 		.ascii	"CapSense_CSDSetupWidgetExt\000"
 6072      656E7365 
 6072      5F435344 
 6072      53657475 
 6072      70576964 
 6073              	.LASF197:
 6074 0422 70635265 		.ascii	"pcReg\000"
 6074      6700
ARM GAS  C:\Users\mstai\AppData\Local\Temp\ccHdifRP.s 			page 172


 6075              	.LASF202:
 6076 0428 76616C75 		.ascii	"value\000"
 6076      6500
 6077              	.LASF172:
 6078 042e 6E657750 		.ascii	"newPinHsiomVal\000"
 6078      696E4873 
 6078      696F6D56 
 6078      616C00
 6079              	.LASF60:
 6080 043d 73686F72 		.ascii	"shortedWdgtId\000"
 6080      74656457 
 6080      64677449 
 6080      6400
 6081              	.LASF96:
 6082 044b 6D6F6443 		.ascii	"modCsdClk\000"
 6082      7364436C 
 6082      6B00
 6083              	.LASF50:
 6084 0455 43617053 		.ascii	"CapSense_RAM_SNS_STRUCT\000"
 6084      656E7365 
 6084      5F52414D 
 6084      5F534E53 
 6084      5F535452 
 6085              	.LASF189:
 6086 046d 43617053 		.ascii	"CapSense_SsCSDCalcPrsSize\000"
 6086      656E7365 
 6086      5F537343 
 6086      53444361 
 6086      6C635072 
 6087              	.LASF113:
 6088 0487 64725074 		.ascii	"drPtr\000"
 6088      7200
 6089              	.LASF199:
 6090 048d 6D6F6465 		.ascii	"mode\000"
 6090      00
 6091              	.LASF179:
 6092 0492 6D6F6443 		.ascii	"modClk\000"
 6092      6C6B00
 6093              	.LASF171:
 6094 0499 6E657750 		.ascii	"newPinPcVal\000"
 6094      696E5063 
 6094      56616C00 
 6095              	.LASF102:
 6096 04a5 736E7343 		.ascii	"snsCp\000"
 6096      7000
 6097              	.LASF32:
 6098 04ab 68797374 		.ascii	"hysteresis\000"
 6098      65726573 
 6098      697300
 6099              	.LASF194:
 6100 04b6 64697363 		.ascii	"dischargeTime\000"
 6100      68617267 
 6100      6554696D 
 6100      6500
 6101              	.LASF131:
 6102 04c4 43617053 		.ascii	"CapSense_FLASH_WD_STRUCT\000"
 6102      656E7365 
ARM GAS  C:\Users\mstai\AppData\Local\Temp\ccHdifRP.s 			page 173


 6102      5F464C41 
 6102      53485F57 
 6102      445F5354 
 6103              	.LASF164:
 6104 04dd 656C7464 		.ascii	"eltdNum\000"
 6104      4E756D00 
 6105              	.LASF34:
 6106 04e5 6C6F7742 		.ascii	"lowBslnRst\000"
 6106      736C6E52 
 6106      737400
 6107              	.LASF74:
 6108 04f0 76646461 		.ascii	"vddaIdacDefault\000"
 6108      49646163 
 6108      44656661 
 6108      756C7400 
 6109              	.LASF52:
 6110 0500 74657374 		.ascii	"testResultMask\000"
 6110      52657375 
 6110      6C744D61 
 6110      736B00
 6111              	.LASF127:
 6112 050f 746F7461 		.ascii	"totalNumSns\000"
 6112      6C4E756D 
 6112      536E7300 
 6113              	.LASF76:
 6114 051b 736E7343 		.ascii	"snsCapVrefGain\000"
 6114      61705672 
 6114      65664761 
 6114      696E00
 6115              	.LASF75:
 6116 052a 736E7343 		.ascii	"snsCapResolution\000"
 6116      61705265 
 6116      736F6C75 
 6116      74696F6E 
 6116      00
 6117              	.LASF233:
 6118 053b 43617053 		.ascii	"CapSense_BistDisableMode\000"
 6118      656E7365 
 6118      5F426973 
 6118      74446973 
 6118      61626C65 
 6119              	.LASF30:
 6120 0554 6E6F6973 		.ascii	"noiseTh\000"
 6120      65546800 
 6121              	.LASF16:
 6122 055c 63686172 		.ascii	"char\000"
 6122      00
 6123              	.LASF224:
 6124 0561 43794578 		.ascii	"CyExitCriticalSection\000"
 6124      69744372 
 6124      69746963 
 6124      616C5365 
 6124      6374696F 
 6125              	.LASF193:
 6126 0577 43617053 		.ascii	"CapSense_DischargeExtCapacitors\000"
 6126      656E7365 
 6126      5F446973 
ARM GAS  C:\Users\mstai\AppData\Local\Temp\ccHdifRP.s 			page 174


 6126      63686172 
 6126      67654578 
 6127              	.LASF228:
 6128 0597 43617053 		.ascii	"CapSense_SsCSDGetNumberOfConversions\000"
 6128      656E7365 
 6128      5F537343 
 6128      53444765 
 6128      744E756D 
 6129              	.LASF173:
 6130 05bc 746D7050 		.ascii	"tmpPcDrRegValue\000"
 6130      63447252 
 6130      65675661 
 6130      6C756500 
 6131              	.LASF137:
 6132 05cc 43617053 		.ascii	"CapSense_BIST_CSD_SNS_CAP_E\000"
 6132      656E7365 
 6132      5F424953 
 6132      545F4353 
 6132      445F534E 
 6133              	.LASF62:
 6134 05e8 43617053 		.ascii	"CapSense_RAM_SELF_TEST_STRUCT\000"
 6134      656E7365 
 6134      5F52414D 
 6134      5F53454C 
 6134      465F5445 
 6135              	.LASF55:
 6136 0606 676C6243 		.ascii	"glbCrcCalc\000"
 6136      72634361 
 6136      6C6300
 6137              	.LASF12:
 6138 0611 75696E74 		.ascii	"uint16\000"
 6138      313600
 6139              	.LASF145:
 6140 0618 636F6E76 		.ascii	"conversionsNum\000"
 6140      65727369 
 6140      6F6E734E 
 6140      756D00
 6141              	.LASF59:
 6142 0627 696E7642 		.ascii	"invBslnSnsId\000"
 6142      736C6E53 
 6142      6E734964 
 6142      00
 6143              	.LASF28:
 6144 0634 7265736F 		.ascii	"resolution\000"
 6144      6C757469 
 6144      6F6E00
 6145              	.LASF90:
 6146 063f 73746174 		.ascii	"status\000"
 6146      757300
 6147              	.LASF183:
 6148 0646 43617053 		.ascii	"CapSense_CalibrateWidget\000"
 6148      656E7365 
 6148      5F43616C 
 6148      69627261 
 6148      74655769 
 6149              	.LASF136:
 6150 065f 43617053 		.ascii	"CapSense_SCAN_CSX_E\000"
ARM GAS  C:\Users\mstai\AppData\Local\Temp\ccHdifRP.s 			page 175


 6150      656E7365 
 6150      5F534341 
 6150      4E5F4353 
 6150      585F4500 
 6151              	.LASF21:
 6152 0673 43617053 		.ascii	"CapSense_LOW_BSLN_RST_TYPE\000"
 6152      656E7365 
 6152      5F4C4F57 
 6152      5F42534C 
 6152      4E5F5253 
 6153              	.LASF180:
 6154 068e 43617053 		.ascii	"CapSense_SsSetSnsClockDivider\000"
 6154      656E7365 
 6154      5F537353 
 6154      6574536E 
 6154      73436C6F 
 6155              	.LASF27:
 6156 06ac 43617053 		.ascii	"CapSense_SENSE_METHOD_ENUM\000"
 6156      656E7365 
 6156      5F53454E 
 6156      53455F4D 
 6156      4554484F 
 6157              	.LASF198:
 6158 06c7 43617053 		.ascii	"CapSense_SetInactiveElectrodeState\000"
 6158      656E7365 
 6158      5F536574 
 6158      496E6163 
 6158      74697665 
 6159              	.LASF49:
 6160 06ea 69646163 		.ascii	"idacComp\000"
 6160      436F6D70 
 6160      00
 6161              	.LASF111:
 6162 06f3 70635074 		.ascii	"pcPtr\000"
 6162      7200
 6163              	.LASF6:
 6164 06f9 6C6F6E67 		.ascii	"long long int\000"
 6164      206C6F6E 
 6164      6720696E 
 6164      7400
 6165              	.LASF129:
 6166 0707 6E756D43 		.ascii	"numCols\000"
 6166      6F6C7300 
 6167              	.LASF77:
 6168 070f 62697374 		.ascii	"bistCsdSnsCapISC\000"
 6168      43736453 
 6168      6E734361 
 6168      70495343 
 6168      00
 6169              	.LASF234:
 6170 0720 43617053 		.ascii	"CapSense_SsCSDInitialize\000"
 6170      656E7365 
 6170      5F537343 
 6170      5344496E 
 6170      69746961 
 6171              	.LASF33:
 6172 0739 6F6E4465 		.ascii	"onDebounce\000"
ARM GAS  C:\Users\mstai\AppData\Local\Temp\ccHdifRP.s 			page 176


 6172      626F756E 
 6172      636500
 6173              	.LASF184:
 6174 0744 63616C69 		.ascii	"calibrateStatus\000"
 6174      62726174 
 6174      65537461 
 6174      74757300 
 6175              	.LASF98:
 6176 0754 77646774 		.ascii	"wdgtList\000"
 6176      4C697374 
 6176      00
 6177              	.LASF135:
 6178 075d 43617053 		.ascii	"CapSense_SCAN_CSD_E\000"
 6178      656E7365 
 6178      5F534341 
 6178      4E5F4353 
 6178      445F4500 
 6179              	.LASF133:
 6180 0771 43617053 		.ascii	"CapSense_FLASH_STRUCT\000"
 6180      656E7365 
 6180      5F464C41 
 6180      53485F53 
 6180      54525543 
 6181              	.LASF155:
 6182 0787 43617053 		.ascii	"CapSense_Scan\000"
 6182      656E7365 
 6182      5F536361 
 6182      6E00
 6183              	.LASF200:
 6184 0795 43617053 		.ascii	"CapSense_WriteBitsSafe\000"
 6184      656E7365 
 6184      5F577269 
 6184      74654269 
 6184      74735361 
 6185              	.LASF130:
 6186 07ac 70747232 		.ascii	"ptr2SnsCpArr\000"
 6186      536E7343 
 6186      70417272 
 6186      00
 6187              	.LASF208:
 6188 07b9 43617053 		.ascii	"CapSense_dsRam\000"
 6188      656E7365 
 6188      5F647352 
 6188      616D00
 6189              	.LASF106:
 6190 07c8 736E7254 		.ascii	"snrTestRawCount\000"
 6190      65737452 
 6190      6177436F 
 6190      756E7400 
 6191              	.LASF61:
 6192 07d8 73686F72 		.ascii	"shortedSnsId\000"
 6192      74656453 
 6192      6E734964 
 6192      00
 6193              	.LASF31:
 6194 07e5 6E4E6F69 		.ascii	"nNoiseTh\000"
 6194      73655468 
ARM GAS  C:\Users\mstai\AppData\Local\Temp\ccHdifRP.s 			page 177


 6194      00
 6195              	.LASF95:
 6196 07ee 63736430 		.ascii	"csd0Config\000"
 6196      436F6E66 
 6196      696700
 6197              	.LASF19:
 6198 07f9 63796973 		.ascii	"cyisraddress\000"
 6198      72616464 
 6198      72657373 
 6198      00
 6199              	.LASF161:
 6200 0806 43617053 		.ascii	"CapSense_ScanExt\000"
 6200      656E7365 
 6200      5F536361 
 6200      6E457874 
 6200      00
 6201              	.LASF40:
 6202 0817 43617053 		.ascii	"CapSense_RAM_WD_BASE_STRUCT\000"
 6202      656E7365 
 6202      5F52414D 
 6202      5F57445F 
 6202      42415345 
 6203              	.LASF220:
 6204 0833 43617053 		.ascii	"CapSense_CSDScan\000"
 6204      656E7365 
 6204      5F435344 
 6204      5363616E 
 6204      00
 6205              	.LASF110:
 6206 0844 6873696F 		.ascii	"hsiomPtr\000"
 6206      6D507472 
 6206      00
 6207              	.LASF13:
 6208 084d 75696E74 		.ascii	"uint32\000"
 6208      333200
 6209              	.LASF124:
 6210 0854 70747232 		.ascii	"ptr2FltrHistory\000"
 6210      466C7472 
 6210      48697374 
 6210      6F727900 
 6211              	.LASF142:
 6212 0864 6761696E 		.ascii	"gainValue\000"
 6212      56616C75 
 6212      6500
 6213              	.LASF217:
 6214 086e 43617053 		.ascii	"CapSense_curSnsIOPtr\000"
 6214      656E7365 
 6214      5F637572 
 6214      536E7349 
 6214      4F507472 
 6215              	.LASF116:
 6216 0883 6D61736B 		.ascii	"mask\000"
 6216      00
 6217              	.LASF182:
 6218 0888 43617053 		.ascii	"CapSense_SsSetClockDividers\000"
 6218      656E7365 
 6218      5F537353 
ARM GAS  C:\Users\mstai\AppData\Local\Temp\ccHdifRP.s 			page 178


 6218      6574436C 
 6218      6F636B44 
 6219              	.LASF100:
 6220 08a4 73656C66 		.ascii	"selfTest\000"
 6220      54657374 
 6220      00
 6221              	.LASF101:
 6222 08ad 73656C66 		.ascii	"selfTestConfig\000"
 6222      54657374 
 6222      436F6E66 
 6222      696700
 6223              	.LASF230:
 6224 08bc 43794465 		.ascii	"CyDelayUs\000"
 6224      6C617955 
 6224      7300
 6225              	.LASF82:
 6226 08c6 66696E65 		.ascii	"fineInitTime\000"
 6226      496E6974 
 6226      54696D65 
 6226      00
 6227              	.LASF72:
 6228 08d3 76646461 		.ascii	"vddaVrefGain\000"
 6228      56726566 
 6228      4761696E 
 6228      00
 6229              	.LASF146:
 6230 08e0 43617053 		.ascii	"CapSense_SsCalcLfsrSize\000"
 6230      656E7365 
 6230      5F537343 
 6230      616C634C 
 6230      66737253 
 6231              	.LASF158:
 6232 08f8 77646774 		.ascii	"wdgtIndex\000"
 6232      496E6465 
 6232      7800
 6233              	.LASF73:
 6234 0902 76646461 		.ascii	"vddaResolution\000"
 6234      5265736F 
 6234      6C757469 
 6234      6F6E00
 6235              	.LASF26:
 6236 0911 43617053 		.ascii	"CapSense_SENSE_METHOD_ISX_E\000"
 6236      656E7365 
 6236      5F53454E 
 6236      53455F4D 
 6236      4554484F 
 6237              	.LASF134:
 6238 092d 6C6F6E67 		.ascii	"long double\000"
 6238      20646F75 
 6238      626C6500 
 6239              	.LASF84:
 6240 0939 43617053 		.ascii	"CapSense_RAM_TST_CONFIG_STRUCT\000"
 6240      656E7365 
 6240      5F52414D 
 6240      5F545354 
 6240      5F434F4E 
 6241              	.LASF18:
ARM GAS  C:\Users\mstai\AppData\Local\Temp\ccHdifRP.s 			page 179


 6242 0958 72656733 		.ascii	"reg32\000"
 6242      3200
 6243              	.LASF105:
 6244 095e 736E7254 		.ascii	"snrTestScanCounter\000"
 6244      65737453 
 6244      63616E43 
 6244      6F756E74 
 6244      657200
 6245              	.LASF69:
 6246 0971 76646461 		.ascii	"vddaVrefVoltage\000"
 6246      56726566 
 6246      566F6C74 
 6246      61676500 
 6247              	.LASF85:
 6248 0981 636F6E66 		.ascii	"configId\000"
 6248      69674964 
 6248      00
 6249              	.LASF123:
 6250 098a 70747232 		.ascii	"ptr2SnsRam\000"
 6250      536E7352 
 6250      616D00
 6251              	.LASF94:
 6252 0995 736E7353 		.ascii	"snsStatus\000"
 6252      74617475 
 6252      7300
 6253              	.LASF38:
 6254 099f 736E7343 		.ascii	"snsClkSource\000"
 6254      6C6B536F 
 6254      75726365 
 6254      00
 6255              	.LASF232:
 6256 09ac 43617053 		.ascii	"CapSense_SsCSDElectrodeCheck\000"
 6256      656E7365 
 6256      5F537343 
 6256      5344456C 
 6256      65637472 
 6257              	.LASF176:
 6258 09c9 43617053 		.ascii	"CapSense_SsIsrInitialize\000"
 6258      656E7365 
 6258      5F537349 
 6258      7372496E 
 6258      69746961 
 6259              	.LASF2:
 6260 09e2 73686F72 		.ascii	"short int\000"
 6260      7420696E 
 6260      7400
 6261              	.LASF109:
 6262 09ec 43617053 		.ascii	"CapSense_RAM_STRUCT\000"
 6262      656E7365 
 6262      5F52414D 
 6262      5F535452 
 6262      55435400 
 6263              	.LASF169:
 6264 0a00 43617053 		.ascii	"CapSense_SsSetAllIOsState\000"
 6264      656E7365 
 6264      5F537353 
 6264      6574416C 
ARM GAS  C:\Users\mstai\AppData\Local\Temp\ccHdifRP.s 			page 180


 6264      6C494F73 
 6265              	.LASF4:
 6266 0a1a 6C6F6E67 		.ascii	"long int\000"
 6266      20696E74 
 6266      00
 6267              	.LASF91:
 6268 0a23 77646774 		.ascii	"wdgtEnable\000"
 6268      456E6162 
 6268      6C6500
 6269              	.LASF47:
 6270 0a2e 64696666 		.ascii	"diff\000"
 6270      00
 6271              	.LASF88:
 6272 0a33 74756E65 		.ascii	"tunerCmd\000"
 6272      72436D64 
 6272      00
 6273              	.LASF42:
 6274 0a3c 74617865 		.ascii	"taxel\000"
 6274      6C00
 6275              	.LASF24:
 6276 0a42 43617053 		.ascii	"CapSense_SENSE_METHOD_CSX_E\000"
 6276      656E7365 
 6276      5F53454E 
 6276      53455F4D 
 6276      4554484F 
 6277              	.LASF114:
 6278 0a5e 70735074 		.ascii	"psPtr\000"
 6278      7200
 6279              	.LASF154:
 6280 0a64 43617053 		.ascii	"CapSense_SetupWidget\000"
 6280      656E7365 
 6280      5F536574 
 6280      75705769 
 6280      64676574 
 6281              	.LASF66:
 6282 0a79 736E7343 		.ascii	"snsCapModClkKHz\000"
 6282      61704D6F 
 6282      64436C6B 
 6282      4B487A00 
 6283              	.LASF227:
 6284 0a89 43617053 		.ascii	"CapSense_CSDCalibrateWidget\000"
 6284      656E7365 
 6284      5F435344 
 6284      43616C69 
 6284      62726174 
 6285              	.LASF141:
 6286 0aa5 6761696E 		.ascii	"gainReg\000"
 6286      52656700 
 6287              	.LASF58:
 6288 0aad 696E7642 		.ascii	"invBslnWdgtId\000"
 6288      736C6E57 
 6288      64677449 
 6288      6400
 6289              	.LASF67:
 6290 0abb 736E7343 		.ascii	"snsCapModClkDivider\000"
 6290      61704D6F 
 6290      64436C6B 
ARM GAS  C:\Users\mstai\AppData\Local\Temp\ccHdifRP.s 			page 181


 6290      44697669 
 6290      64657200 
 6291              	.LASF53:
 6292 0acf 65787443 		.ascii	"extCap\000"
 6292      617000
 6293              	.LASF209:
 6294 0ad6 43617053 		.ascii	"CapSense_dsFlash\000"
 6294      656E7365 
 6294      5F647346 
 6294      6C617368 
 6294      00
 6295              	.LASF57:
 6296 0ae7 77646774 		.ascii	"wdgtCrcId\000"
 6296      43726349 
 6296      6400
 6297              	.LASF222:
 6298 0af1 43617053 		.ascii	"CapSense_CSDScanExt\000"
 6298      656E7365 
 6298      5F435344 
 6298      5363616E 
 6298      45787400 
 6299              	.LASF93:
 6300 0b05 77646774 		.ascii	"wdgtStatus\000"
 6300      53746174 
 6300      757300
 6301              	.LASF235:
 6302 0b10 43617053 		.ascii	"CapSense_BistInitialize\000"
 6302      656E7365 
 6302      5F426973 
 6302      74496E69 
 6302      7469616C 
 6303              	.LASF54:
 6304 0b28 76646461 		.ascii	"vddaVoltage\000"
 6304      566F6C74 
 6304      61676500 
 6305              	.LASF237:
 6306 0b34 47656E65 		.ascii	"Generated_Source\\PSoC4\\CapSense_Sensing.c\000"
 6306      72617465 
 6306      645F536F 
 6306      75726365 
 6306      5C50536F 
 6307              	.LASF225:
 6308 0b5e 43617053 		.ascii	"CapSense_CSDConnectSns\000"
 6308      656E7365 
 6308      5F435344 
 6308      436F6E6E 
 6308      65637453 
 6309              	.LASF23:
 6310 0b75 43617053 		.ascii	"CapSense_SENSE_METHOD_CSD_E\000"
 6310      656E7365 
 6310      5F53454E 
 6310      53455F4D 
 6310      4554484F 
 6311              	.LASF215:
 6312 0b91 43617053 		.ascii	"CapSense_currentSenseMethod\000"
 6312      656E7365 
 6312      5F637572 
ARM GAS  C:\Users\mstai\AppData\Local\Temp\ccHdifRP.s 			page 182


 6312      72656E74 
 6312      53656E73 
 6313              	.LASF190:
 6314 0bad 70727353 		.ascii	"prsSize\000"
 6314      697A6500 
 6315              	.LASF39:
 6316 0bb5 73697A65 		.ascii	"sizetype\000"
 6316      74797065 
 6316      00
 6317              	.LASF118:
 6318 0bbe 64725368 		.ascii	"drShift\000"
 6318      69667400 
 6319              	.LASF5:
 6320 0bc6 6C6F6E67 		.ascii	"long unsigned int\000"
 6320      20756E73 
 6320      69676E65 
 6320      6420696E 
 6320      7400
 6321              	.LASF187:
 6322 0bd8 72657456 		.ascii	"retVal\000"
 6322      616C00
 6323              	.LASF177:
 6324 0bdf 61646472 		.ascii	"address\000"
 6324      65737300 
 6325              	.LASF70:
 6326 0be7 65787443 		.ascii	"extCapVrefVoltage\000"
 6326      61705672 
 6326      6566566F 
 6326      6C746167 
 6326      6500
 6327              	.LASF35:
 6328 0bf9 69646163 		.ascii	"idacMod\000"
 6328      4D6F6400 
 6329              	.LASF226:
 6330 0c01 43617053 		.ascii	"CapSense_ISR_StartEx\000"
 6330      656E7365 
 6330      5F495352 
 6330      5F537461 
 6330      72744578 
 6331              	.LASF56:
 6332 0c16 77646774 		.ascii	"wdgtCrcCalc\000"
 6332      43726343 
 6332      616C6300 
 6333              	.LASF125:
 6334 0c22 70747232 		.ascii	"ptr2DebounceArr\000"
 6334      4465626F 
 6334      756E6365 
 6334      41727200 
 6335              	.LASF29:
 6336 0c32 66696E67 		.ascii	"fingerTh\000"
 6336      65725468 
 6336      00
 6337              	.LASF46:
 6338 0c3b 62736C6E 		.ascii	"bslnExt\000"
 6338      45787400 
 6339              	.LASF143:
 6340 0c43 43617053 		.ascii	"CapSense_IDAC_GAIN_TABLE_STRUCT\000"
ARM GAS  C:\Users\mstai\AppData\Local\Temp\ccHdifRP.s 			page 183


 6340      656E7365 
 6340      5F494441 
 6340      435F4741 
 6340      494E5F54 
 6341              	.LASF41:
 6342 0c63 43617053 		.ascii	"CapSense_RAM_WD_BUTTON_STRUCT\000"
 6342      656E7365 
 6342      5F52414D 
 6342      5F57445F 
 6342      42555454 
 6343              	.LASF17:
 6344 0c81 63797374 		.ascii	"cystatus\000"
 6344      61747573 
 6344      00
 6345              	.LASF1:
 6346 0c8a 756E7369 		.ascii	"unsigned char\000"
 6346      676E6564 
 6346      20636861 
 6346      7200
 6347              	.LASF9:
 6348 0c98 5F5F7569 		.ascii	"__uint32_t\000"
 6348      6E743332 
 6348      5F7400
 6349              	.LASF168:
 6350 0ca3 43617053 		.ascii	"CapSense_SetPinState\000"
 6350      656E7365 
 6350      5F536574 
 6350      50696E53 
 6350      74617465 
 6351              	.LASF126:
 6352 0cb8 73746174 		.ascii	"staticConfig\000"
 6352      6963436F 
 6352      6E666967 
 6352      00
 6353              	.LASF167:
 6354 0cc5 696F5074 		.ascii	"ioPtr\000"
 6354      7200
 6355              	.LASF108:
 6356 0ccb 7363616E 		.ascii	"scanCurrentISC\000"
 6356      43757272 
 6356      656E7449 
 6356      534300
 6357              	.LASF122:
 6358 0cda 70747232 		.ascii	"ptr2WdgtRam\000"
 6358      57646774 
 6358      52616D00 
 6359              	.LASF20:
 6360 0ce6 43617053 		.ascii	"CapSense_THRESHOLD_TYPE\000"
 6360      656E7365 
 6360      5F544852 
 6360      4553484F 
 6360      4C445F54 
 6361              	.LASF140:
 6362 0cfe 43617053 		.ascii	"CapSense_OPERATION_MODE_ENUM\000"
 6362      656E7365 
 6362      5F4F5045 
 6362      52415449 
ARM GAS  C:\Users\mstai\AppData\Local\Temp\ccHdifRP.s 			page 184


 6362      4F4E5F4D 
 6363              	.LASF25:
 6364 0d1b 43617053 		.ascii	"CapSense_SENSE_METHOD_BIST_E\000"
 6364      656E7365 
 6364      5F53454E 
 6364      53455F4D 
 6364      4554484F 
 6365              	.LASF163:
 6366 0d38 73746174 		.ascii	"state\000"
 6366      6500
 6367              	.LASF45:
 6368 0d3e 62736C6E 		.ascii	"bslnInv\000"
 6368      496E7600 
 6369              	.LASF165:
 6370 0d46 656C7464 		.ascii	"eltdIndex\000"
 6370      496E6465 
 6370      7800
 6371              	.LASF157:
 6372 0d50 43617053 		.ascii	"CapSense_ScanAllWidgets\000"
 6372      656E7365 
 6372      5F536361 
 6372      6E416C6C 
 6372      57696467 
 6373              	.LASF115:
 6374 0d68 6873696F 		.ascii	"hsiomMask\000"
 6374      6D4D6173 
 6374      6B00
 6375              	.LASF37:
 6376 0d72 736E7343 		.ascii	"snsClk\000"
 6376      6C6B00
 6377              	.LASF205:
 6378 0d79 43617053 		.ascii	"CapSense_SsSwitchSensingMode\000"
 6378      656E7365 
 6378      5F537353 
 6378      77697463 
 6378      6853656E 
 6379              	.LASF68:
 6380 0d96 736E7343 		.ascii	"snsCapVrefVoltage\000"
 6380      61705672 
 6380      6566566F 
 6380      6C746167 
 6380      6500
 6381              	.LASF223:
 6382 0da8 4379456E 		.ascii	"CyEnterCriticalSection\000"
 6382      74657243 
 6382      72697469 
 6382      63616C53 
 6382      65637469 
 6383              	.LASF80:
 6384 0dbf 65787443 		.ascii	"extCapVrefGain\000"
 6384      61705672 
 6384      65664761 
 6384      696E00
 6385              	.LASF214:
 6386 0dce 43617053 		.ascii	"CapSense_curRamSnsPtr\000"
 6386      656E7365 
 6386      5F637572 
ARM GAS  C:\Users\mstai\AppData\Local\Temp\ccHdifRP.s 			page 185


 6386      52616D53 
 6386      6E735074 
 6387              	.LASF238:
 6388 0de4 433A5C55 		.ascii	"C:\\Users\\mstai\\OneDrive\\Desktop\\TESI ROBOTICA\\"
 6388      73657273 
 6388      5C6D7374 
 6388      61695C4F 
 6388      6E654472 
 6389 0e12 434D4153 		.ascii	"CMAS.cydsn\000"
 6389      2E637964 
 6389      736E00
 6390              	.LASF216:
 6391 0e1d 43617053 		.ascii	"CapSense_scanFreqIndex\000"
 6391      656E7365 
 6391      5F736361 
 6391      6E467265 
 6391      71496E64 
 6392              	.LASF44:
 6393 0e34 62736C6E 		.ascii	"bsln\000"
 6393      00
 6394              	.LASF3:
 6395 0e39 73686F72 		.ascii	"short unsigned int\000"
 6395      7420756E 
 6395      7369676E 
 6395      65642069 
 6395      6E7400
 6396              	.LASF210:
 6397 0e4c 43617053 		.ascii	"CapSense_ioList\000"
 6397      656E7365 
 6397      5F696F4C 
 6397      69737400 
 6398              	.LASF240:
 6399 0e5c 43617053 		.ascii	"CapSense_SsPostAllWidgetsScan\000"
 6399      656E7365 
 6399      5F537350 
 6399      6F737441 
 6399      6C6C5769 
 6400              	.LASF121:
 6401 0e7a 70747232 		.ascii	"ptr2SnsFlash\000"
 6401      536E7346 
 6401      6C617368 
 6401      00
 6402              	.LASF151:
 6403 0e87 6C667372 		.ascii	"lfsrDither\000"
 6403      44697468 
 6403      657200
 6404              	.LASF181:
 6405 0e92 6E657752 		.ascii	"newRegValue\000"
 6405      65675661 
 6405      6C756500 
 6406              	.LASF97:
 6407 0e9e 676C6243 		.ascii	"glbCrc\000"
 6407      726300
 6408              	.LASF195:
 6409 0ea5 6873696F 		.ascii	"hsiomReg\000"
 6409      6D526567 
 6409      00
ARM GAS  C:\Users\mstai\AppData\Local\Temp\ccHdifRP.s 			page 186


 6410              	.LASF11:
 6411 0eae 75696E74 		.ascii	"uint8\000"
 6411      3800
 6412              	.LASF15:
 6413 0eb4 646F7562 		.ascii	"double\000"
 6413      6C6500
 6414              	.LASF48:
 6415 0ebb 6E656742 		.ascii	"negBslnRstCnt\000"
 6415      736C6E52 
 6415      7374436E 
 6415      7400
 6416              	.LASF206:
 6417 0ec9 43617053 		.ascii	"CapSense_SsInitialize\000"
 6417      656E7365 
 6417      5F537349 
 6417      6E697469 
 6417      616C697A 
 6418              	.LASF144:
 6419 0edf 736E7343 		.ascii	"snsClkDivider\000"
 6419      6C6B4469 
 6419      76696465 
 6419      7200
 6420              	.LASF191:
 6421 0eed 6D6F6443 		.ascii	"modClkDivider\000"
 6421      6C6B4469 
 6421      76696465 
 6421      7200
 6422              	.LASF86:
 6423 0efb 64657669 		.ascii	"deviceId\000"
 6423      63654964 
 6423      00
 6424              	.LASF153:
 6425 0f04 77696467 		.ascii	"widgetStatus\000"
 6425      65745374 
 6425      61747573 
 6425      00
 6426              	.LASF138:
 6427 0f11 43617053 		.ascii	"CapSense_BIST_CSX_SNS_CAP_E\000"
 6427      656E7365 
 6427      5F424953 
 6427      545F4353 
 6427      585F534E 
 6428              	.LASF152:
 6429 0f2d 77696467 		.ascii	"widgetId\000"
 6429      65744964 
 6429      00
 6430              	.LASF213:
 6431 0f36 43617053 		.ascii	"CapSense_requestScanAllWidget\000"
 6431      656E7365 
 6431      5F726571 
 6431      75657374 
 6431      5363616E 
 6432              	.LASF192:
 6433 0f54 43617053 		.ascii	"CapSense_SsInitializeSourceSenseClk\000"
 6433      656E7365 
 6433      5F537349 
 6433      6E697469 
ARM GAS  C:\Users\mstai\AppData\Local\Temp\ccHdifRP.s 			page 187


 6433      616C697A 
 6434              	.LASF218:
 6435 0f78 43617053 		.ascii	"CapSense_idacGainTable\000"
 6435      656E7365 
 6435      5F696461 
 6435      63476169 
 6435      6E546162 
 6436              	.LASF51:
 6437 0f8f 43617053 		.ascii	"CapSense_RAM_SNS_LIST_STRUCT\000"
 6437      656E7365 
 6437      5F52414D 
 6437      5F534E53 
 6437      5F4C4953 
 6438              	.LASF64:
 6439 0fac 736E7343 		.ascii	"snsCapSnsClkHz\000"
 6439      6170536E 
 6439      73436C6B 
 6439      487A00
 6440              	.LASF132:
 6441 0fbb 77646774 		.ascii	"wdgtArray\000"
 6441      41727261 
 6441      7900
 6442              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
